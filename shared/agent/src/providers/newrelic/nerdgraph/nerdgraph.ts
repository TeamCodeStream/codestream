/* tslint:disable */
/* eslint-disable */
/* This file was automatically generated on 3/12/2024, 8:36:47 AM and should not be edited by hand. */
						
import { GraphQLClient, RequestOptions } from 'graphql-request';
import gql from 'graphql-tag';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
type GraphQLClientRequestHeaders = RequestOptions['requestHeaders'];
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  AbTestAbTestMetaData: { input: any; output: any; }
  AgentApplicationSettingsErrorCollectorHttpStatus: { input: any; output: any; }
  AgentApplicationSettingsRawJsConfiguration: { input: any; output: any; }
  AgentTracesExplainPlanRow: { input: any; output: any; }
  AgentTracesQueryParameters: { input: any; output: any; }
  AgentTracesTraceAttributes: { input: any; output: any; }
  AiDecisionsRuleExpression: { input: any; output: any; }
  AlertsRawNerdletState: { input: any; output: any; }
  AttributeMap: { input: any; output: any; }
  ChangeTrackingRawCustomAttributesMap: { input: any; output: any; }
  CollaborationRawContextMetadata: { input: any; output: any; }
  CorrelationRuleExpression: { input: any; output: any; }
  DashboardWidgetRawConfiguration: { input: any; output: any; }
  Date: { input: any; output: any; }
  DateTime: { input: any; output: any; }
  DistributedTracingSpanAttributes: { input: any; output: any; }
  EncodedInfraFilterSet: { input: any; output: any; }
  EntityAlertViolationInt: { input: any; output: any; }
  EntityDashboardTemplatesRawMosaicTemplate: { input: any; output: any; }
  EntityGuid: { input: any; output: any; }
  EntitySearchQuery: { input: any; output: any; }
  EpochMilliseconds: { input: any; output: any; }
  EpochSeconds: { input: any; output: any; }
  ErrorsInboxRawEvent: { input: any; output: any; }
  IncidentIntelligenceIssueFilterValue: { input: any; output: any; }
  IncidentIntelligencePlatformFilterValue: { input: any; output: any; }
  IncidentIntelligenceSearchFilterValue: { input: any; output: any; }
  InstallationRawMetadata: { input: any; output: any; }
  LogConfigurationsLogDataPartitionName: { input: any; output: any; }
  LogLine: { input: any; output: any; }
  Milliseconds: { input: any; output: any; }
  Minutes: { input: any; output: any; }
  NaiveDateTime: { input: any; output: any; }
  NerdStorageDocument: { input: any; output: any; }
  NerdStoreDocument: { input: any; output: any; }
  NerdpackFullArtifactId: { input: any; output: any; }
  NerdpackRawMetadata: { input: any; output: any; }
  NerdpackRawVisualizationMetadataConfiguration: { input: any; output: any; }
  NerdpackTagName: { input: any; output: any; }
  NetworkMonitoringRawConfiguration: { input: any; output: any; }
  Nr1CatalogRawConfiguration: { input: any; output: any; }
  Nr1CatalogRawNerdletState: { input: any; output: any; }
  NrdbRawResults: { input: any; output: any; }
  NrdbResult: { input: any; output: any; }
  Nrql: { input: any; output: any; }
  ProductConsumptionBalance: { input: any; output: any; }
  SavedViewsRawAdditionalData: { input: any; output: any; }
  Seconds: { input: any; output: any; }
  SecureValue: { input: any; output: any; }
  SemVer: { input: any; output: any; }
};

export type AbTestGetVariationError = {
  __typename?: 'AbTestGetVariationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AbTestGetVariationErrorType>;
};

export type AbTestGetVariationErrorType =
  | 'EXPERIMENTNOTRUNNING'
  | 'NOEXPERIMENT';

export type AbTestGetVariationRequest = {
  experimentKey: Scalars['String']['input'];
  metaData?: InputMaybe<Scalars['AbTestAbTestMetaData']['input']>;
  subjectKey: Scalars['String']['input'];
};

export type AbTestGetVariationResponse = {
  __typename?: 'AbTestGetVariationResponse';
  errors?: Maybe<Array<Maybe<AbTestGetVariationError>>>;
  metaData?: Maybe<Scalars['AbTestAbTestMetaData']['output']>;
  variationKey?: Maybe<Scalars['String']['output']>;
};

export type AbTestTrackEventRequest = {
  eventType: Scalars['String']['input'];
  metaData?: InputMaybe<Scalars['AbTestAbTestMetaData']['input']>;
  subjectKey: Scalars['String']['input'];
  trafficType?: InputMaybe<Scalars['String']['input']>;
};

export type Account = {
  __typename?: 'Account';
  agentEnvironment?: Maybe<AgentEnvironmentAccountStitchedFields>;
  aiConnect?: Maybe<AiConnectAccountStitchedFields>;
  aiDecisions?: Maybe<AiDecisionsAccountStitchedFields>;
  aiIssues?: Maybe<AiIssuesAccountStitchedFields>;
  aiNotifications?: Maybe<AiNotificationsAccountStitchedFields>;
  aiOps?: Maybe<AiOpsAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiPostmortem?: Maybe<AiPostmortemAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiProfileAnalysis?: Maybe<AiProfileAnalysisAccountStitchedFields>;
  aiTopology?: Maybe<AiTopologyAccountStitchedFields>;
  aiWorkflows?: Maybe<AiWorkflowsAccountStitchedFields>;
  alerts?: Maybe<AlertsAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cartographer?: Maybe<CartographerAccountStitchedFields>;
  cloud?: Maybe<CloudAccountFields>;
  commerce?: Maybe<CommerceAccountStitchedFields>;
  commerceNotifications?: Maybe<CommerceNotificationsAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlation?: Maybe<CorrelationAccountStitchedFields>;
  correlationIngest?: Maybe<CorrelationIngestAccountStitchedFields>;
  dataManagement?: Maybe<DataManagementAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  discussion?: Maybe<DiscussionAccountStitchedFields>;
  edge?: Maybe<EdgeAccountStitchedFields>;
  eventsToMetrics?: Maybe<EventsToMetricsAccountStitchedFields>;
  /** @deprecated This field should no longer be used and returns empty results. */
  features?: Maybe<Array<Maybe<ClassicNavigationFeature>>>;
  historicalDataExport?: Maybe<HistoricalDataExportAccountStitchedFields>;
  id?: Maybe<Scalars['Int']['output']>;
  incidentIntelligenceEnvironment?: Maybe<IncidentIntelligenceEnvironmentAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligenceIssue?: Maybe<IncidentIntelligenceIssueAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatform?: Maybe<IncidentIntelligencePlatformAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligenceSearch?: Maybe<IncidentIntelligenceSearchAccountStitchedFields>;
  installation?: Maybe<InstallationAccountStitchedFields>;
  invitations?: Maybe<InvitationsAccountStitchedFields>;
  /** @deprecated Please use `actor.apiAccess.keySearch` to access your license keys. */
  licenseKey?: Maybe<Scalars['String']['output']>;
  logConfigurations?: Maybe<LogConfigurationsAccountStitchedFields>;
  metricNormalization?: Maybe<MetricNormalizationAccountStitchedFields>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageAccountScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrql?: Maybe<NrdbResultContainer>;
  nrqlDropRules?: Maybe<NrqlDropRulesAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nrqlLookups?: Maybe<NrqlLookupsAccountStitchedFields>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrqlQueryProgress?: Maybe<NrdbResultContainer>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagement?: Maybe<OpenAgentManagementAccountStitchedFields>;
  pixie?: Maybe<PixieAccountStitchedFields>;
  productConsumption?: Maybe<ProductConsumptionAccountStitchedFields>;
  /** @deprecated This field should no longer be used and returns empty results. */
  products?: Maybe<Array<Maybe<ClassicNavigationProduct>>>;
  provisioning?: Maybe<ProvisioningAccountStitchedFields>;
  signupIntegrations?: Maybe<SignupIntegrationsAccountStitchedFields>;
  streamingExport?: Maybe<StreamingExportAccountStitchedFields>;
  support?: Maybe<SupportAccountStitchedFields>;
  synthetics?: Maybe<SyntheticsAccountStitchedFields>;
  userConsumption?: Maybe<UserConsumptionAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  websitePerformanceMonitoring?: Maybe<WebsitePerformanceMonitoringAccountStitchedFields>;
  workload?: Maybe<WorkloadAccountStitchedFields>;
};


export type AccountFeaturesArgs = {
  agentId: Scalars['Int']['input'];
  key: Scalars['String']['input'];
};


export type AccountNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
};


export type AccountNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};


export type AccountNrqlArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<NrqlQueryOptions>;
  query: Scalars['Nrql']['input'];
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type AccountNrqlQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};

export type AccountAccessInfo = {
  __typename?: 'AccountAccessInfo';
  capabilities?: Maybe<Array<Maybe<Capability>>>;
  entitlements?: Maybe<Array<Maybe<AccountEntitlement>>>;
  featureFlags?: Maybe<Array<Maybe<FeatureFlag>>>;
  id?: Maybe<Scalars['Int']['output']>;
  inRegion?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parent?: Maybe<ParentAccountInfo>;
  region?: Maybe<Region>;
  reportingEventTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};


export type AccountAccessInfoCapabilitiesArgs = {
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AccountAccessInfoEntitlementsArgs = {
  filter?: InputMaybe<AccountEntitlementFilter>;
};


export type AccountAccessInfoFeatureFlagsArgs = {
  criteria?: InputMaybe<Scalars['String']['input']>;
  names: Array<InputMaybe<Scalars['String']['input']>>;
};


export type AccountAccessInfoReportingEventTypesArgs = {
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type AccountAuthorization = {
  __typename?: 'AccountAuthorization';
  accountId?: Maybe<Scalars['Int']['output']>;
  authorized?: Maybe<Scalars['Boolean']['output']>;
};

export type AccountEntitlement = {
  __typename?: 'AccountEntitlement';
  name?: Maybe<Scalars['String']['output']>;
};

export type AccountEntitlementFilter = {
  names: Array<InputMaybe<Scalars['String']['input']>>;
};

export type AccountFeatureConfigurationSetAccountComplianceError = {
  __typename?: 'AccountFeatureConfigurationSetAccountComplianceError';
  description: Scalars['String']['output'];
  type: AccountFeatureConfigurationSetAccountComplianceErrorType;
};

export type AccountFeatureConfigurationSetAccountComplianceErrorType =
  | 'ACCOUNT_NOT_FOUND'
  | 'INSUFFICIENT_PRODUCT_LEVEL'
  | 'INTERNAL_ACCOUNT'
  | 'INVALID_ACCOUNT'
  | 'UNDETERMINED_ERROR';

export type AccountFeatureConfigurationSetFedrampComplianceResult = {
  __typename?: 'AccountFeatureConfigurationSetFedrampComplianceResult';
  errors?: Maybe<Array<AccountFeatureConfigurationSetAccountComplianceError>>;
  success?: Maybe<Scalars['String']['output']>;
};

export type AccountFeatureConfigurationSetHipaaComplianceResult = {
  __typename?: 'AccountFeatureConfigurationSetHipaaComplianceResult';
  errors?: Maybe<Array<AccountFeatureConfigurationSetAccountComplianceError>>;
  success?: Maybe<Scalars['String']['output']>;
};

export type AccountInfo = {
  __typename?: 'AccountInfo';
  createdAt?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  parent?: Maybe<ParentAccountInfo>;
  region?: Maybe<Region>;
  status?: Maybe<AccountStatus>;
};

export type AccountManagementCreateInput = {
  name: Scalars['String']['input'];
  organizationId?: InputMaybe<Scalars['ID']['input']>;
  regionCode?: InputMaybe<Scalars['String']['input']>;
};

export type AccountManagementCreateResponse = {
  __typename?: 'AccountManagementCreateResponse';
  managedAccount?: Maybe<AccountManagementManagedAccount>;
};

export type AccountManagementManagedAccount = {
  __typename?: 'AccountManagementManagedAccount';
  id: Scalars['Int']['output'];
  isCanceled: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  regionCode: Scalars['String']['output'];
};

export type AccountManagementOrganizationStitchedFields = {
  __typename?: 'AccountManagementOrganizationStitchedFields';
  managedAccounts?: Maybe<Array<AccountManagementManagedAccount>>;
};


export type AccountManagementOrganizationStitchedFieldsManagedAccountsArgs = {
  isCanceled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AccountManagementUpdateInput = {
  id: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type AccountManagementUpdateResponse = {
  __typename?: 'AccountManagementUpdateResponse';
  managedAccount?: Maybe<AccountManagementManagedAccount>;
};

export type AccountObject = {
  __typename?: 'AccountObject';
  /** @deprecated Please use `entity` */
  agent?: Maybe<Agent>;
  agentEnvironment?: Maybe<AgentEnvironmentAccountStitchedFields>;
  /** @deprecated Please use `entitySearch` */
  agentListing?: Maybe<AgentSearch>;
  /** @deprecated Please use `entitySearch` with `tag` query */
  agentSearchByLabel?: Maybe<AgentSearch>;
  /** @deprecated Please use `entitySearch` */
  agentSearchByName?: Maybe<AgentSearch>;
  /** @deprecated Please use `entities` */
  agents?: Maybe<Array<Maybe<Agent>>>;
  aiConnect?: Maybe<AiConnectAccountStitchedFields>;
  aiDecisions?: Maybe<AiDecisionsAccountStitchedFields>;
  aiIssues?: Maybe<AiIssuesAccountStitchedFields>;
  aiNotifications?: Maybe<AiNotificationsAccountStitchedFields>;
  aiOps?: Maybe<AiOpsAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiPostmortem?: Maybe<AiPostmortemAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiProfileAnalysis?: Maybe<AiProfileAnalysisAccountStitchedFields>;
  aiTopology?: Maybe<AiTopologyAccountStitchedFields>;
  aiWorkflows?: Maybe<AiWorkflowsAccountStitchedFields>;
  alerts?: Maybe<AlertsAccountStitchedFields>;
  capabilities?: Maybe<Array<Maybe<Capability>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cartographer?: Maybe<CartographerAccountStitchedFields>;
  /**
   * @deprecated Usage of `children` is deprecated.
   *
   * The concept of subaccounts is a part of the legacy (V1) user model and should no longer be relied upon. The `children` field can behave differently for V2 users than it did for V1 users. In the V1 model, access is inherited so `children` always shows all of the child accounts of a particular parent account. In the V2 model, access does not inherit and the places where `children` is used should likely be using the list of accounts belonging to the organization, and it should be restricted to users with proper authorization to do so.
   *
   * Depending on the use case, suitable alternative may include querying `actor.accounts` or `customerAdministration.accounts`. If there is a current or planned use of this field and a suitable alternative can't be found, connect with the Authorization Team about your use case and an appropriate solution.
   *
   */
  children?: Maybe<Array<Maybe<AccountInfo>>>;
  commerce?: Maybe<CommerceAccountStitchedFields>;
  commerceNotifications?: Maybe<CommerceNotificationsAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlation?: Maybe<CorrelationAccountStitchedFields>;
  correlationIngest?: Maybe<CorrelationIngestAccountStitchedFields>;
  createdAt?: Maybe<Scalars['Int']['output']>;
  dataManagement?: Maybe<DataManagementAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  discussion?: Maybe<DiscussionAccountStitchedFields>;
  edge?: Maybe<EdgeAccountStitchedFields>;
  /** @deprecated Please use `entity.errorTrace` instead. */
  errorTrace?: Maybe<ErrorTrace>;
  eventTransformationRule?: Maybe<EventTransformationRule>;
  eventTransformationRuleListing?: Maybe<EventTransformationRuleListing>;
  eventsToMetrics?: Maybe<EventsToMetricsAccountStitchedFields>;
  featureFlags?: Maybe<Array<Maybe<FeatureFlag>>>;
  /** @deprecated This field should no longer be used and returns empty results. */
  features?: Maybe<Array<Maybe<ClassicNavigationFeature>>>;
  highSecurity?: Maybe<Scalars['Boolean']['output']>;
  historicalDataExport?: Maybe<HistoricalDataExportAccountStitchedFields>;
  id?: Maybe<Scalars['Int']['output']>;
  incidentIntelligenceEnvironment?: Maybe<IncidentIntelligenceEnvironmentAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligenceIssue?: Maybe<IncidentIntelligenceIssueAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatform?: Maybe<IncidentIntelligencePlatformAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligenceSearch?: Maybe<IncidentIntelligenceSearchAccountStitchedFields>;
  /** @deprecated Usage of Infra Filter Sets is deprecated. */
  infraFilterSets?: Maybe<Array<Maybe<InfraFilterSet>>>;
  /** @deprecated Please use `entitySearch` */
  infraSearch?: Maybe<InfraSearch>;
  installation?: Maybe<InstallationAccountStitchedFields>;
  invitations?: Maybe<InvitationsAccountStitchedFields>;
  /** @deprecated Please use `actor.apiAccess.keySearch` to access your license keys. */
  licenseKey?: Maybe<Scalars['String']['output']>;
  logConfigurations?: Maybe<LogConfigurationsAccountStitchedFields>;
  metricNormalization?: Maybe<MetricNormalizationAccountStitchedFields>;
  /** @deprecated Please use `entity` */
  mobileAgent?: Maybe<Agent>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  nrqlDropRules?: Maybe<NrqlDropRulesAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nrqlLookups?: Maybe<NrqlLookupsAccountStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagement?: Maybe<OpenAgentManagementAccountStitchedFields>;
  ownedPartnerships?: Maybe<Array<Maybe<Partnership>>>;
  parent?: Maybe<AccountInfo>;
  partnership?: Maybe<Partnership>;
  /** @deprecated Please use the `partnership` field */
  partnershipId?: Maybe<Scalars['Int']['output']>;
  payMethod?: Maybe<Scalars['String']['output']>;
  pixie?: Maybe<PixieAccountStitchedFields>;
  productConsumption?: Maybe<ProductConsumptionAccountStitchedFields>;
  /** @deprecated This field should no longer be used and returns empty results. */
  products?: Maybe<Array<Maybe<ClassicNavigationProduct>>>;
  provisioning?: Maybe<ProvisioningAccountStitchedFields>;
  region?: Maybe<Region>;
  settings?: Maybe<AccountSettings>;
  signupIntegrations?: Maybe<SignupIntegrationsAccountStitchedFields>;
  status?: Maybe<AccountStatus>;
  streamingExport?: Maybe<StreamingExportAccountStitchedFields>;
  subscription?: Maybe<ProductSubscription>;
  subscriptions?: Maybe<Array<Maybe<ProductSubscription>>>;
  support?: Maybe<SupportAccountStitchedFields>;
  synthetics?: Maybe<SyntheticsAccountStitchedFields>;
  /** @deprecated This is deprecated and will return null results. Please use `entity.transactionTrace` instead. */
  transactionTrace?: Maybe<TransactionTrace>;
  userConsumption?: Maybe<UserConsumptionAccountStitchedFields>;
  users?: Maybe<Array<Maybe<UserInfo>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  websitePerformanceMonitoring?: Maybe<WebsitePerformanceMonitoringAccountStitchedFields>;
  workload?: Maybe<WorkloadAccountStitchedFields>;
};


export type AccountObjectAgentArgs = {
  id: Scalars['Int']['input'];
  type: AgentType;
};


export type AccountObjectAgentListingArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  type: AgentType;
};


export type AccountObjectAgentSearchByLabelArgs = {
  label: LabelSearchInput;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  type: AgentType;
};


export type AccountObjectAgentSearchByNameArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  offset?: InputMaybe<Scalars['Int']['input']>;
  type: AgentType;
};


export type AccountObjectAgentsArgs = {
  ids: Array<InputMaybe<Scalars['Int']['input']>>;
  type: AgentType;
};


export type AccountObjectCapabilitiesArgs = {
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AccountObjectErrorTraceArgs = {
  id: Scalars['String']['input'];
};


export type AccountObjectEventTransformationRuleArgs = {
  id: Scalars['Int']['input'];
};


export type AccountObjectEventTransformationRuleListingArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type AccountObjectFeatureFlagsArgs = {
  criteria?: InputMaybe<Scalars['String']['input']>;
  names: Array<InputMaybe<Scalars['String']['input']>>;
};


export type AccountObjectFeaturesArgs = {
  agentId: Scalars['Int']['input'];
  key: Scalars['String']['input'];
};


export type AccountObjectInfraSearchArgs = {
  filter: Scalars['EncodedInfraFilterSet']['input'];
  violating?: InputMaybe<Scalars['Boolean']['input']>;
};


export type AccountObjectMobileAgentArgs = {
  id: Scalars['Int']['input'];
};


export type AccountObjectNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
};


export type AccountObjectNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};


export type AccountObjectNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type AccountObjectNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type AccountObjectSubscriptionArgs = {
  cacheBust?: InputMaybe<Scalars['Boolean']['input']>;
  productLine: Scalars['String']['input'];
};


export type AccountObjectTransactionTraceArgs = {
  id: Scalars['String']['input'];
};

export type AccountOutline = {
  __typename?: 'AccountOutline';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region?: Maybe<Region>;
  reportingEventTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};


export type AccountOutlineReportingEventTypesArgs = {
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type AccountReference = {
  __typename?: 'AccountReference';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region?: Maybe<Region>;
};

export type AccountSettings = {
  __typename?: 'AccountSettings';
  alerts?: Maybe<AlertSettings>;
};

export type AccountShareInvitationsAcceptInvitationByTokenMutationPayload = {
  __typename?: 'AccountShareInvitationsAcceptInvitationByTokenMutationPayload';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AccountShareInvitationsAccountShareInvitation = {
  __typename?: 'AccountShareInvitationsAccountShareInvitation';
  createdDate: Scalars['DateTime']['output'];
  expirationDate: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  nextCursor?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  resourceData: AccountShareInvitationsResourceData;
  status: Scalars['String']['output'];
  token: Scalars['SecureValue']['output'];
  updatedDate: Scalars['DateTime']['output'];
};

export type AccountShareInvitationsAccountShareInvitationSearch = {
  __typename?: 'AccountShareInvitationsAccountShareInvitationSearch';
  accountShareInvitations: Array<AccountShareInvitationsAccountShareInvitation>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AccountShareInvitationsCreateAccountShareMutationPayload = {
  __typename?: 'AccountShareInvitationsCreateAccountShareMutationPayload';
  accountShareInvitation: AccountShareInvitationsAccountShareInvitation;
};

export type AccountShareInvitationsOrganizationStitchedFields = {
  __typename?: 'AccountShareInvitationsOrganizationStitchedFields';
  accountShareInvitations?: Maybe<AccountShareInvitationsAccountShareInvitationSearch>;
};


export type AccountShareInvitationsOrganizationStitchedFieldsAccountShareInvitationsArgs = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  status?: InputMaybe<Scalars['String']['input']>;
};

export type AccountShareInvitationsResourceData = {
  __typename?: 'AccountShareInvitationsResourceData';
  accountId: Scalars['Int']['output'];
  limitingRoleId: Scalars['Int']['output'];
};

export type AccountShareInvitationsRevokeInvitationByIdMutationPayload = {
  __typename?: 'AccountShareInvitationsRevokeInvitationByIdMutationPayload';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AccountStatus =
  | 'ACTIVE'
  | 'AWAITING_USER_FROM_API'
  | 'CANCELLED'
  | 'DOWNGRADED'
  | 'NEW'
  | 'PAID_ACTIVE'
  | 'PAID_NEW'
  | 'PAID_PENDING'
  | 'PENDING'
  | 'UPGRADED';

export type ActivityStreamEvent = {
  __typename?: 'ActivityStreamEvent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  action: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  entity?: Maybe<EntityOutline>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  family: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  groupId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  guid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  objectId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  objectType: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  objectUrl?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  severity: ActivityStreamEventSeverity;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
};

export type ActivityStreamEventFilter = {
  actions?: InputMaybe<Array<Scalars['String']['input']>>;
  families?: InputMaybe<Array<Scalars['String']['input']>>;
  objectTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  severities?: InputMaybe<Array<ActivityStreamEventSeverity>>;
};

export type ActivityStreamEventSeverity =
  | 'CRITICAL'
  | 'INFO'
  | 'WARNING';

export type ActivityStreamSearchFilter = {
  include?: InputMaybe<ActivityStreamEventFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow: TimeWindowInput;
};

export type ActivityStreamSearchResult = {
  __typename?: 'ActivityStreamSearchResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  results: Array<ActivityStreamEvent>;
};

export type Actor = {
  __typename?: 'Actor';
  account?: Maybe<Account>;
  accounts?: Maybe<Array<Maybe<AccountOutline>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  activitySearch?: Maybe<ActivityStreamSearchResult>;
  aiOps?: Maybe<AiOpsActorStitchedFields>;
  alerts?: Maybe<AlertsActorStitchedFields>;
  anomalyDetectorConfigurations?: Maybe<AnomalyDetectorConfigurationsActorStitchedFields>;
  apiAccess?: Maybe<ApiAccessActorStitchedFields>;
  authorizeEntity?: Maybe<AuthorizationAuthorizeEntityResult>;
  billableCoreUserAccounts?: Maybe<Array<Maybe<AuthorizationBillableCoreUserAccount>>>;
  capabilities?: Maybe<Array<Maybe<AuthorizationCapability>>>;
  changeTracking?: Maybe<ChangeTrackingActorStitchedFields>;
  cloud?: Maybe<CloudActorFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaboration?: Maybe<CollaborationActorStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  courierNotificationPreferences?: Maybe<CourierNotificationPreferencesActorStitchedFields>;
  dashboard?: Maybe<DashboardActorStitchedFields>;
  dataSourceGaps?: Maybe<DataSourceGapsActorStitchedFields>;
  distributedTracing?: Maybe<DistributedTracingActorStitchedFields>;
  entities?: Maybe<Array<Maybe<Entity>>>;
  entity?: Maybe<Entity>;
  entitySearch?: Maybe<EntitySearch>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entitySearchSortByGoldenMetric?: Maybe<EntitySearchSortByGoldenMetricResult>;
  entityTypes?: Maybe<Array<Maybe<EntityTypeResults>>>;
  errorsInbox?: Maybe<ErrorsInboxActorStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenMetricsSearch?: Maybe<GoldenMetricsSearchActorStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  grok?: Maybe<GrokActorStitchedFields>;
  incidentIntelligenceEnvironment?: Maybe<IncidentIntelligenceEnvironmentActorStitchedFields>;
  mobilePushNotification?: Maybe<MobilePushNotificationActorStitchedFields>;
  nerdStorage?: Maybe<NerdStorageActorScope>;
  nerdStorageVault?: Maybe<NerdStorageVaultActorStitchedFields>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nerdpacks?: Maybe<NerdpackNerdpacks>;
  networkMonitoring?: Maybe<NetworkMonitoringActorStitchedFields>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  newRelicServiceHealth?: Maybe<NewRelicServiceHealthActorStitchedFields>;
  nr1Catalog?: Maybe<Nr1CatalogActorStitchedFields>;
  nrql?: Maybe<CrossAccountNrdbResultContainer>;
  nrqlQueriedEntities?: Maybe<NrqlQueriedEntitiesActorStitchedFields>;
  /**
   * @deprecated This field is deprecated and returns no data. Please use `queryHistory`.
   *
   */
  nrqlQueryHistory?: Maybe<Array<Maybe<NrqlHistoricalQuery>>>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrqlQueryProgress?: Maybe<CrossAccountNrdbResultContainer>;
  organization?: Maybe<Organization>;
  personalization?: Maybe<PersonalizationActorStitchedFields>;
  pixie?: Maybe<PixieActorStitchedFields>;
  preReleaseProgram?: Maybe<PreReleaseProgramActorStitchedFields>;
  productConsumption?: Maybe<ProductConsumptionActorStitchedFields>;
  programmabilityTnC?: Maybe<ProgrammabilityTnCActorStitchedFields>;
  provisioning?: Maybe<ProvisioningActorStitchedFields>;
  queryHistory?: Maybe<QueryHistoryActorStitchedFields>;
  relationshipSearch?: Maybe<EntityRelationshipSearchResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  savedViews?: Maybe<SavedViewsActorStitchedFields>;
  support?: Maybe<SupportActorStitchedFields>;
  synthetics?: Maybe<SyntheticsActorStitchedFields>;
  tagging?: Maybe<TaggingActorStitchedFields>;
  team?: Maybe<TeamActorStitchedFields>;
  user?: Maybe<User>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userEmailNotificationPreferences?: Maybe<UserEmailNotificationPreferencesActorStitchedFields>;
  users?: Maybe<UsersActorStitchedFields>;
};


export type ActorAccountArgs = {
  id: Scalars['Int']['input'];
};


export type ActorAccountsArgs = {
  scope?: InputMaybe<RegionScope>;
};


export type ActorActivitySearchArgs = {
  filter: ActivityStreamSearchFilter;
  guids: Array<Scalars['EntityGuid']['input']>;
};


export type ActorAuthorizeEntityArgs = {
  action: Scalars['String']['input'];
  context: AuthorizationContext;
  target: AuthorizationObject;
};


export type ActorCapabilitiesArgs = {
  filter?: InputMaybe<AuthorizationFilter>;
  scopeId?: InputMaybe<Scalars['ID']['input']>;
  scopeType: AuthorizationScopeType;
};


export type ActorEntitiesArgs = {
  guids: Array<InputMaybe<Scalars['EntityGuid']['input']>>;
};


export type ActorEntityArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type ActorEntitySearchArgs = {
  options?: InputMaybe<EntitySearchOptions>;
  query?: InputMaybe<Scalars['String']['input']>;
  queryBuilder?: InputMaybe<EntitySearchQueryBuilder>;
  sortBy?: InputMaybe<Array<InputMaybe<EntitySearchSortCriteria>>>;
  sortByWithDirection?: InputMaybe<Array<InputMaybe<SortCriterionWithDirection>>>;
};


export type ActorEntitySearchSortByGoldenMetricArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  domainType: DomainTypeInput;
  filters?: InputMaybe<Array<EntitySearchMetricFilterInput>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  sortBy: EntitySearchMetricSortByInput;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ActorEntityTypesArgs = {
  domainTypes?: InputMaybe<Array<DomainTypeInput>>;
};


export type ActorNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
};


export type ActorNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};


export type ActorNrqlArgs = {
  accounts: Array<Scalars['Int']['input']>;
  async?: InputMaybe<Scalars['Boolean']['input']>;
  options?: InputMaybe<NrqlQueryOptions>;
  query: Scalars['Nrql']['input'];
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type ActorNrqlQueryProgressArgs = {
  accounts: Array<Scalars['Int']['input']>;
  queryId: Scalars['ID']['input'];
};


export type ActorRelationshipSearchArgs = {
  filters?: InputMaybe<EntityRelationshipSearchFilters>;
  fromEntitiesGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  fromEntitiesQuery?: InputMaybe<EntityRelationshipEntitySearchQueryInput>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type AddressAutocompleteAddressDetail = {
  __typename?: 'AddressAutocompleteAddressDetail';
  longName?: Maybe<Scalars['String']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
  types?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type AddressAutocompleteAddressSuggestion = {
  __typename?: 'AddressAutocompleteAddressSuggestion';
  address?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
};

export type AddressAutocompleteNrPlatformStitchedFields = {
  __typename?: 'AddressAutocompleteNrPlatformStitchedFields';
  addressDetails?: Maybe<Array<Maybe<AddressAutocompleteAddressDetail>>>;
  addressSuggestions?: Maybe<Array<Maybe<AddressAutocompleteAddressSuggestion>>>;
};


export type AddressAutocompleteNrPlatformStitchedFieldsAddressDetailsArgs = {
  id: Scalars['String']['input'];
  token: Scalars['String']['input'];
};


export type AddressAutocompleteNrPlatformStitchedFieldsAddressSuggestionsArgs = {
  query: Scalars['String']['input'];
  token: Scalars['String']['input'];
};

export type Agent = {
  __typename?: 'Agent';
  enabled?: Maybe<Scalars['Boolean']['output']>;
  entity?: Maybe<EntityGuidSegments>;
  /** @deprecated This field is deprecated and does not return results. */
  features?: Maybe<Array<Maybe<AgentFeature>>>;
  id?: Maybe<Scalars['String']['output']>;
  /** @deprecated Please use `entitySearch` and `relationships` */
  infraHosts?: Maybe<Array<Maybe<InfraHost>>>;
  /** @deprecated This field is deprecated and does not return results. Please use entity tags instead. */
  labels?: Maybe<Array<Maybe<Label>>>;
  language?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  realAgents?: Maybe<Array<Maybe<RealAgent>>>;
  reportedMetrics?: Maybe<Array<Maybe<Metric>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  reportingName?: Maybe<Scalars['String']['output']>;
  settings?: Maybe<AgentSettings>;
  statuses?: Maybe<Array<Maybe<AgentStatus>>>;
  summary?: Maybe<AgentSummary>;
  type?: Maybe<AgentType>;
  versions?: Maybe<AgentVersions>;
  violations?: Maybe<Array<Maybe<AgentViolation>>>;
};


export type AgentFeaturesArgs = {
  names?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AgentRealAgentsArgs = {
  duration?: InputMaybe<Scalars['Minutes']['input']>;
};


export type AgentReportedMetricsArgs = {
  names: Array<InputMaybe<Scalars['String']['input']>>;
};


export type AgentSummaryArgs = {
  duration: Scalars['Minutes']['input'];
};


export type AgentViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};

export type AgentApplicationApmBrowserSettings = {
  __typename?: 'AgentApplicationApmBrowserSettings';
  cookiesEnabled: Scalars['Boolean']['output'];
  distributedTracingEnabled: Scalars['Boolean']['output'];
  loaderType: AgentApplicationBrowserLoader;
};

export type AgentApplicationBrowserLoader =
  | 'FULL'
  | 'LITE'
  | 'NONE'
  | 'PRO'
  | 'SPA';

export type AgentApplicationBrowserSettings = {
  __typename?: 'AgentApplicationBrowserSettings';
  cookiesEnabled: Scalars['Boolean']['output'];
  distributedTracingEnabled: Scalars['Boolean']['output'];
  loaderScript?: Maybe<Scalars['String']['output']>;
  loaderType: AgentApplicationBrowserLoader;
};

export type AgentApplicationBrowserSettingsInput = {
  cookiesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  distributedTracingEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  loaderType?: InputMaybe<AgentApplicationBrowserLoader>;
};

export type AgentApplicationCreateBrowserResult = {
  __typename?: 'AgentApplicationCreateBrowserResult';
  guid: Scalars['EntityGuid']['output'];
  name: Scalars['String']['output'];
  settings?: Maybe<AgentApplicationBrowserSettings>;
};

export type AgentApplicationCreateMobileResult = {
  __typename?: 'AgentApplicationCreateMobileResult';
  accountId: Scalars['Int']['output'];
  applicationToken: Scalars['SecureValue']['output'];
  entityOutline?: Maybe<EntityOutline>;
  guid: Scalars['EntityGuid']['output'];
  name: Scalars['String']['output'];
};

export type AgentApplicationDeleteResult = {
  __typename?: 'AgentApplicationDeleteResult';
  success: Scalars['Boolean']['output'];
};

export type AgentApplicationEnableBrowserResult = {
  __typename?: 'AgentApplicationEnableBrowserResult';
  name: Scalars['String']['output'];
  settings?: Maybe<AgentApplicationApmBrowserSettings>;
};

export type AgentApplicationSegmentsBrowserSegmentAllowList = {
  __typename?: 'AgentApplicationSegmentsBrowserSegmentAllowList';
  listType?: Maybe<AgentApplicationSegmentsListType>;
  segments?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type AgentApplicationSegmentsBrowserSegmentAllowListInput = {
  listType?: InputMaybe<AgentApplicationSegmentsListType>;
  segments: Array<InputMaybe<Scalars['String']['input']>>;
};

export type AgentApplicationSegmentsBrowserSegmentAllowListResult = {
  __typename?: 'AgentApplicationSegmentsBrowserSegmentAllowListResult';
  entityGuid: Scalars['EntityGuid']['output'];
  segments?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type AgentApplicationSegmentsListType =
  | 'INTERNAL'
  | 'USER';

export type AgentApplicationSegmentsSegmentAllowListFilters = {
  listType?: InputMaybe<AgentApplicationSegmentsListType>;
};

export type AgentApplicationSettingsApmBase = {
  __typename?: 'AgentApplicationSettingsApmBase';
  alias?: Maybe<Scalars['String']['output']>;
  apmConfig: AgentApplicationSettingsApmConfig;
  captureMemcacheKeys?: Maybe<Scalars['Boolean']['output']>;
  dataManagement: AgentApplicationSettingsDataManagement;
  errorCollector?: Maybe<AgentApplicationSettingsErrorCollector>;
  jfr?: Maybe<AgentApplicationSettingsJfr>;
  originalName?: Maybe<Scalars['String']['output']>;
  slowSql?: Maybe<AgentApplicationSettingsSlowSql>;
  threadProfiler?: Maybe<AgentApplicationSettingsThreadProfiler>;
  tracerType?: Maybe<AgentApplicationSettingsTracer>;
  transactionTracer?: Maybe<AgentApplicationSettingsTransactionTracer>;
};

export type AgentApplicationSettingsApmConfig = {
  __typename?: 'AgentApplicationSettingsApmConfig';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
  useServerSideConfig?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsApmConfigInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  useServerSideConfig?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsBrowserAjax = {
  __typename?: 'AgentApplicationSettingsBrowserAjax';
  denyList?: Maybe<Array<Scalars['String']['output']>>;
};

export type AgentApplicationSettingsBrowserAjaxInput = {
  denyList?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AgentApplicationSettingsBrowserBase = {
  __typename?: 'AgentApplicationSettingsBrowserBase';
  browserConfig: AgentApplicationSettingsBrowserConfig;
  browserMonitoring: AgentApplicationSettingsBrowserMonitoring;
  dataManagement: AgentApplicationSettingsDataManagement;
  sessionReplay: AgentApplicationSettingsSessionReplay;
  sessionTrace: AgentApplicationSettingsSessionTrace;
};

export type AgentApplicationSettingsBrowserConfig = {
  __typename?: 'AgentApplicationSettingsBrowserConfig';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
};

export type AgentApplicationSettingsBrowserConfigInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
};

export type AgentApplicationSettingsBrowserDistributedTracing = {
  __typename?: 'AgentApplicationSettingsBrowserDistributedTracing';
  allowedOrigins?: Maybe<Array<Scalars['String']['output']>>;
  corsEnabled?: Maybe<Scalars['Boolean']['output']>;
  corsUseNewrelicHeader?: Maybe<Scalars['Boolean']['output']>;
  corsUseTracecontextHeaders?: Maybe<Scalars['Boolean']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  excludeNewrelicHeader?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsBrowserDistributedTracingInput = {
  allowedOrigins?: InputMaybe<Array<Scalars['String']['input']>>;
  corsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  corsUseNewrelicHeader?: InputMaybe<Scalars['Boolean']['input']>;
  corsUseTracecontextHeaders?: InputMaybe<Scalars['Boolean']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  excludeNewrelicHeader?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsBrowserLoader =
  | 'FULL'
  | 'LITE'
  | 'NONE'
  | 'PRO'
  | 'RUM'
  | 'SPA'
  | 'XHR';

export type AgentApplicationSettingsBrowserLoaderInput =
  | 'FULL'
  | 'LITE'
  | 'NONE'
  | 'PRO'
  | 'SPA';

export type AgentApplicationSettingsBrowserMonitoring = {
  __typename?: 'AgentApplicationSettingsBrowserMonitoring';
  ajax?: Maybe<AgentApplicationSettingsBrowserAjax>;
  distributedTracing: AgentApplicationSettingsBrowserDistributedTracing;
  loader: AgentApplicationSettingsBrowserLoader;
  pinnedVersion?: Maybe<Scalars['String']['output']>;
  privacy: AgentApplicationSettingsBrowserPrivacy;
};

export type AgentApplicationSettingsBrowserMonitoringInput = {
  ajax?: InputMaybe<AgentApplicationSettingsBrowserAjaxInput>;
  distributedTracing?: InputMaybe<AgentApplicationSettingsBrowserDistributedTracingInput>;
  loader?: InputMaybe<AgentApplicationSettingsBrowserLoaderInput>;
  pinnedVersion?: InputMaybe<Scalars['String']['input']>;
  privacy?: InputMaybe<AgentApplicationSettingsBrowserPrivacyInput>;
};

export type AgentApplicationSettingsBrowserPrivacy = {
  __typename?: 'AgentApplicationSettingsBrowserPrivacy';
  cookiesEnabled: Scalars['Boolean']['output'];
};

export type AgentApplicationSettingsBrowserPrivacyInput = {
  cookiesEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsBrowserProperties = {
  __typename?: 'AgentApplicationSettingsBrowserProperties';
  jsConfig?: Maybe<Scalars['AgentApplicationSettingsRawJsConfiguration']['output']>;
  jsConfigScript?: Maybe<Scalars['String']['output']>;
  jsLoaderScript?: Maybe<Scalars['String']['output']>;
};

export type AgentApplicationSettingsDataManagement = {
  __typename?: 'AgentApplicationSettingsDataManagement';
  sendTransactionEventsToInternalStream?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsDataManagementInput = {
  sendTransactionEventsToInternalStream?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsErrorCollector = {
  __typename?: 'AgentApplicationSettingsErrorCollector';
  enabled?: Maybe<Scalars['Boolean']['output']>;
  expectedErrorClasses?: Maybe<Array<Scalars['String']['output']>>;
  expectedErrorCodes?: Maybe<Array<Scalars['AgentApplicationSettingsErrorCollectorHttpStatus']['output']>>;
  ignoredErrorClasses?: Maybe<Array<Scalars['String']['output']>>;
  ignoredErrorCodes?: Maybe<Array<Scalars['AgentApplicationSettingsErrorCollectorHttpStatus']['output']>>;
};

export type AgentApplicationSettingsErrorCollectorInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  expectedErrorClasses?: InputMaybe<Array<Scalars['String']['input']>>;
  expectedErrorCodes?: InputMaybe<Array<Scalars['AgentApplicationSettingsErrorCollectorHttpStatus']['input']>>;
  ignoredErrorClasses?: InputMaybe<Array<Scalars['String']['input']>>;
  ignoredErrorCodes?: InputMaybe<Array<Scalars['AgentApplicationSettingsErrorCollectorHttpStatus']['input']>>;
};

export type AgentApplicationSettingsIgnoredStatusCodeRule = {
  __typename?: 'AgentApplicationSettingsIgnoredStatusCodeRule';
  hosts?: Maybe<Array<Scalars['String']['output']>>;
  statusCodes?: Maybe<Array<Scalars['String']['output']>>;
};

export type AgentApplicationSettingsIgnoredStatusCodeRuleInput = {
  hosts: Array<Scalars['String']['input']>;
  statusCodes: Array<Scalars['String']['input']>;
};

export type AgentApplicationSettingsJfr = {
  __typename?: 'AgentApplicationSettingsJfr';
  enabled?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsJfrInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsMaskInputOptions = {
  __typename?: 'AgentApplicationSettingsMaskInputOptions';
  color: Scalars['Boolean']['output'];
  date: Scalars['Boolean']['output'];
  datetimeLocal: Scalars['Boolean']['output'];
  email: Scalars['Boolean']['output'];
  month: Scalars['Boolean']['output'];
  number: Scalars['Boolean']['output'];
  range: Scalars['Boolean']['output'];
  search: Scalars['Boolean']['output'];
  select: Scalars['Boolean']['output'];
  tel: Scalars['Boolean']['output'];
  text: Scalars['Boolean']['output'];
  textArea: Scalars['Boolean']['output'];
  time: Scalars['Boolean']['output'];
  url: Scalars['Boolean']['output'];
  week: Scalars['Boolean']['output'];
};

export type AgentApplicationSettingsMaskInputOptionsInput = {
  color?: InputMaybe<Scalars['Boolean']['input']>;
  date?: InputMaybe<Scalars['Boolean']['input']>;
  datetimeLocal?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['Boolean']['input']>;
  month?: InputMaybe<Scalars['Boolean']['input']>;
  number?: InputMaybe<Scalars['Boolean']['input']>;
  range?: InputMaybe<Scalars['Boolean']['input']>;
  search?: InputMaybe<Scalars['Boolean']['input']>;
  select?: InputMaybe<Scalars['Boolean']['input']>;
  tel?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['Boolean']['input']>;
  textArea?: InputMaybe<Scalars['Boolean']['input']>;
  time?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['Boolean']['input']>;
  week?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsMobileBase = {
  __typename?: 'AgentApplicationSettingsMobileBase';
  logReporting?: Maybe<AgentApplicationSettingsMobileLogReporting>;
  networkSettings?: Maybe<AgentApplicationSettingsMobileNetworkSettings>;
  useCrashReports?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsMobileLogReporting = {
  __typename?: 'AgentApplicationSettingsMobileLogReporting';
  enabled: Scalars['Boolean']['output'];
  level: AgentApplicationSettingsMobileLogReportingLevel;
};

export type AgentApplicationSettingsMobileLogReportingInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  level?: InputMaybe<AgentApplicationSettingsMobileLogReportingLevel>;
};

export type AgentApplicationSettingsMobileLogReportingLevel =
  | 'DEBUG'
  | 'ERROR'
  | 'INFO'
  | 'NONE'
  | 'VERBOSE'
  | 'WARN';

export type AgentApplicationSettingsMobileNetworkSettings = {
  __typename?: 'AgentApplicationSettingsMobileNetworkSettings';
  aliases?: Maybe<Array<AgentApplicationSettingsNetworkAlias>>;
  filterMode?: Maybe<AgentApplicationSettingsNetworkFilterMode>;
  hideList?: Maybe<Array<Scalars['String']['output']>>;
  ignoredStatusCodeRules?: Maybe<Array<AgentApplicationSettingsIgnoredStatusCodeRule>>;
  showList?: Maybe<Array<Scalars['String']['output']>>;
};

export type AgentApplicationSettingsMobileProperties = {
  __typename?: 'AgentApplicationSettingsMobileProperties';
  applicationToken?: Maybe<Scalars['SecureValue']['output']>;
};

export type AgentApplicationSettingsMobileSettingsInput = {
  logReporting?: InputMaybe<AgentApplicationSettingsMobileLogReportingInput>;
  networkSettings?: InputMaybe<AgentApplicationSettingsNetworkSettingsInput>;
  useCrashReports?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsNetworkAlias = {
  __typename?: 'AgentApplicationSettingsNetworkAlias';
  alias?: Maybe<Scalars['String']['output']>;
  hosts?: Maybe<Array<Scalars['String']['output']>>;
};

export type AgentApplicationSettingsNetworkAliasesInput = {
  alias: Scalars['String']['input'];
  hosts: Array<Scalars['String']['input']>;
};

export type AgentApplicationSettingsNetworkFilterMode =
  | 'DISABLED'
  | 'HIDE'
  | 'SHOW';

export type AgentApplicationSettingsNetworkSettingsInput = {
  aliases?: InputMaybe<Array<AgentApplicationSettingsNetworkAliasesInput>>;
  filterMode?: InputMaybe<AgentApplicationSettingsNetworkFilterMode>;
  hideList?: InputMaybe<Array<Scalars['String']['input']>>;
  ignoredStatusCodeRules?: InputMaybe<Array<AgentApplicationSettingsIgnoredStatusCodeRuleInput>>;
  showList?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AgentApplicationSettingsRecordSqlEnum =
  | 'OBFUSCATED'
  | 'OFF'
  | 'RAW';

export type AgentApplicationSettingsSessionReplay = {
  __typename?: 'AgentApplicationSettingsSessionReplay';
  autoStart: Scalars['Boolean']['output'];
  blockSelector: Scalars['String']['output'];
  collectFonts: Scalars['Boolean']['output'];
  enabled: Scalars['Boolean']['output'];
  errorSamplingRate: Scalars['Float']['output'];
  inlineImages: Scalars['Boolean']['output'];
  inlineStylesheet: Scalars['Boolean']['output'];
  maskAllInputs: Scalars['Boolean']['output'];
  maskInputOptions: AgentApplicationSettingsMaskInputOptions;
  maskTextSelector?: Maybe<Scalars['String']['output']>;
  samplingRate: Scalars['Float']['output'];
};

export type AgentApplicationSettingsSessionReplayInput = {
  autoStart?: InputMaybe<Scalars['Boolean']['input']>;
  blockSelector?: InputMaybe<Scalars['String']['input']>;
  collectFonts?: InputMaybe<Scalars['Boolean']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  errorSamplingRate?: InputMaybe<Scalars['Float']['input']>;
  inlineImages?: InputMaybe<Scalars['Boolean']['input']>;
  inlineStylesheet?: InputMaybe<Scalars['Boolean']['input']>;
  maskAllInputs?: InputMaybe<Scalars['Boolean']['input']>;
  maskInputOptions?: InputMaybe<AgentApplicationSettingsMaskInputOptionsInput>;
  maskTextSelector?: InputMaybe<Scalars['String']['input']>;
  samplingRate?: InputMaybe<Scalars['Float']['input']>;
};

export type AgentApplicationSettingsSessionTrace = {
  __typename?: 'AgentApplicationSettingsSessionTrace';
  enabled: Scalars['Boolean']['output'];
  errorSamplingRate: Scalars['Float']['output'];
  samplingRate: Scalars['Float']['output'];
};

export type AgentApplicationSettingsSessionTraceInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  errorSamplingRate?: InputMaybe<Scalars['Float']['input']>;
  samplingRate?: InputMaybe<Scalars['Float']['input']>;
};

export type AgentApplicationSettingsSlowSql = {
  __typename?: 'AgentApplicationSettingsSlowSql';
  enabled?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsSlowSqlInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsThreadProfiler = {
  __typename?: 'AgentApplicationSettingsThreadProfiler';
  enabled?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentApplicationSettingsThreadProfilerInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsThresholdTypeEnum =
  | 'APDEX_F'
  | 'VALUE';

export type AgentApplicationSettingsTracer =
  | 'CROSS_APPLICATION_TRACER'
  | 'DISTRIBUTED_TRACING'
  | 'NONE';

export type AgentApplicationSettingsTracerTypeInput = {
  value?: InputMaybe<AgentApplicationSettingsTracer>;
};

export type AgentApplicationSettingsTransactionTracer = {
  __typename?: 'AgentApplicationSettingsTransactionTracer';
  captureMemcacheKeys?: Maybe<Scalars['Boolean']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  explainEnabled?: Maybe<Scalars['Boolean']['output']>;
  explainThresholdType?: Maybe<AgentApplicationSettingsThresholdTypeEnum>;
  explainThresholdValue?: Maybe<Scalars['Seconds']['output']>;
  logSql?: Maybe<Scalars['Boolean']['output']>;
  recordSql?: Maybe<AgentApplicationSettingsRecordSqlEnum>;
  stackTraceThreshold?: Maybe<Scalars['Seconds']['output']>;
  transactionThresholdType?: Maybe<AgentApplicationSettingsThresholdTypeEnum>;
  transactionThresholdValue?: Maybe<Scalars['Seconds']['output']>;
};

export type AgentApplicationSettingsTransactionTracerInput = {
  captureMemcacheKeys?: InputMaybe<Scalars['Boolean']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  explainEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  explainThresholdType?: InputMaybe<AgentApplicationSettingsThresholdTypeEnum>;
  explainThresholdValue?: InputMaybe<Scalars['Seconds']['input']>;
  logSql?: InputMaybe<Scalars['Boolean']['input']>;
  recordSql?: InputMaybe<AgentApplicationSettingsRecordSqlEnum>;
  stackTraceThreshold?: InputMaybe<Scalars['Seconds']['input']>;
  transactionThresholdType?: InputMaybe<AgentApplicationSettingsThresholdTypeEnum>;
  transactionThresholdValue?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AgentApplicationSettingsUpdateError = {
  __typename?: 'AgentApplicationSettingsUpdateError';
  description?: Maybe<Scalars['String']['output']>;
  errorClass?: Maybe<AgentApplicationSettingsUpdateErrorClass>;
  field?: Maybe<Scalars['String']['output']>;
};

export type AgentApplicationSettingsUpdateErrorClass =
  | 'ACCESS_DENIED'
  | 'INVALID_INPUT'
  | 'NOT_FOUND';

export type AgentApplicationSettingsUpdateInput = {
  alias?: InputMaybe<Scalars['String']['input']>;
  apmConfig?: InputMaybe<AgentApplicationSettingsApmConfigInput>;
  browserConfig?: InputMaybe<AgentApplicationSettingsBrowserConfigInput>;
  browserMonitoring?: InputMaybe<AgentApplicationSettingsBrowserMonitoringInput>;
  captureMemcacheKeys?: InputMaybe<Scalars['Boolean']['input']>;
  dataManagement?: InputMaybe<AgentApplicationSettingsDataManagementInput>;
  errorCollector?: InputMaybe<AgentApplicationSettingsErrorCollectorInput>;
  jfr?: InputMaybe<AgentApplicationSettingsJfrInput>;
  mobileSettings?: InputMaybe<AgentApplicationSettingsMobileSettingsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  sessionReplay?: InputMaybe<AgentApplicationSettingsSessionReplayInput>;
  sessionTrace?: InputMaybe<AgentApplicationSettingsSessionTraceInput>;
  slowSql?: InputMaybe<AgentApplicationSettingsSlowSqlInput>;
  threadProfiler?: InputMaybe<AgentApplicationSettingsThreadProfilerInput>;
  tracerType?: InputMaybe<AgentApplicationSettingsTracerTypeInput>;
  transactionTracer?: InputMaybe<AgentApplicationSettingsTransactionTracerInput>;
  useCrashReports?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentApplicationSettingsUpdateResult = {
  __typename?: 'AgentApplicationSettingsUpdateResult';
  alias?: Maybe<Scalars['String']['output']>;
  apmSettings?: Maybe<AgentApplicationSettingsApmBase>;
  browserProperties?: Maybe<AgentApplicationSettingsBrowserProperties>;
  browserSettings?: Maybe<AgentApplicationSettingsBrowserBase>;
  errors?: Maybe<Array<Maybe<AgentApplicationSettingsUpdateError>>>;
  guid: Scalars['EntityGuid']['output'];
  mobileSettings?: Maybe<AgentApplicationSettingsMobileBase>;
  /** @deprecated Deprecated. Use `alias` instead! */
  name?: Maybe<Scalars['String']['output']>;
};

export type AgentEnvironmentAccountApplicationLoadedModules = {
  __typename?: 'AgentEnvironmentAccountApplicationLoadedModules';
  applicationGuids: Array<Scalars['EntityGuid']['output']>;
  details?: Maybe<AgentEnvironmentApplicationInstanceDetails>;
  loadedModules?: Maybe<Array<AgentEnvironmentApplicationLoadedModule>>;
};

export type AgentEnvironmentAccountApplicationLoadedModulesResults = {
  __typename?: 'AgentEnvironmentAccountApplicationLoadedModulesResults';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<AgentEnvironmentAccountApplicationLoadedModules>>;
};

export type AgentEnvironmentAccountEnvironmentAttributesResults = {
  __typename?: 'AgentEnvironmentAccountEnvironmentAttributesResults';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<AgentEnvironmentApplicationEnvironmentAttributes>>;
};

export type AgentEnvironmentAccountStitchedFields = {
  __typename?: 'AgentEnvironmentAccountStitchedFields';
  agentSettingsAttributes?: Maybe<AgentEnvironmentAccountEnvironmentAttributesResults>;
  environmentAttributes?: Maybe<AgentEnvironmentAccountEnvironmentAttributesResults>;
  modules?: Maybe<AgentEnvironmentAccountApplicationLoadedModulesResults>;
};


export type AgentEnvironmentAccountStitchedFieldsAgentSettingsAttributesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AgentEnvironmentFilter>;
};


export type AgentEnvironmentAccountStitchedFieldsEnvironmentAttributesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AgentEnvironmentFilter>;
};


export type AgentEnvironmentAccountStitchedFieldsModulesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AgentEnvironmentFilter>;
};

export type AgentEnvironmentApplicationEnvironmentAttributes = {
  __typename?: 'AgentEnvironmentApplicationEnvironmentAttributes';
  applicationGuids: Array<Scalars['EntityGuid']['output']>;
  attributes?: Maybe<Array<AgentEnvironmentAttribute>>;
  details?: Maybe<AgentEnvironmentApplicationInstanceDetails>;
};

export type AgentEnvironmentApplicationInstance = {
  __typename?: 'AgentEnvironmentApplicationInstance';
  agentSettingsAttributes?: Maybe<Array<AgentEnvironmentAttribute>>;
  details: AgentEnvironmentApplicationInstanceDetails;
  environmentAttributes?: Maybe<Array<AgentEnvironmentAttribute>>;
  modules?: Maybe<Array<AgentEnvironmentApplicationLoadedModule>>;
};


export type AgentEnvironmentApplicationInstanceAgentSettingsAttributesArgs = {
  filter?: InputMaybe<AgentEnvironmentFilter>;
};


export type AgentEnvironmentApplicationInstanceEnvironmentAttributesArgs = {
  filter?: InputMaybe<AgentEnvironmentFilter>;
};


export type AgentEnvironmentApplicationInstanceModulesArgs = {
  filter?: InputMaybe<AgentEnvironmentFilter>;
};

export type AgentEnvironmentApplicationInstanceDetails = {
  __typename?: 'AgentEnvironmentApplicationInstanceDetails';
  host: Scalars['String']['output'];
  hostDisplayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  instanceName: Scalars['String']['output'];
  language: Scalars['String']['output'];
  name: Scalars['String']['output'];
};

export type AgentEnvironmentApplicationInstancesResult = {
  __typename?: 'AgentEnvironmentApplicationInstancesResult';
  applicationInstances?: Maybe<Array<AgentEnvironmentApplicationInstance>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type AgentEnvironmentApplicationLoadedModule = {
  __typename?: 'AgentEnvironmentApplicationLoadedModule';
  attributes: Array<Maybe<AgentEnvironmentLoadedModuleAttribute>>;
  name: Scalars['String']['output'];
  version?: Maybe<Scalars['String']['output']>;
};

export type AgentEnvironmentAttribute = {
  __typename?: 'AgentEnvironmentAttribute';
  attribute: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AgentEnvironmentFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  doesNotContain?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type AgentEnvironmentLoadedModuleAttribute = {
  __typename?: 'AgentEnvironmentLoadedModuleAttribute';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AgentFeature = {
  __typename?: 'AgentFeature';
  minVersion?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type AgentFeatures = {
  __typename?: 'AgentFeatures';
  minVersion?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type AgentFeaturesFilter =
  | 'DOTNET'
  | 'ELIXIR'
  | 'GO'
  | 'HTML'
  | 'JAVA'
  | 'MOBILE'
  | 'NODEJS'
  | 'PHP'
  | 'PYTHON'
  | 'RUBY'
  | 'SDK';

export type AgentRelease = {
  __typename?: 'AgentRelease';
  bugs?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  date?: Maybe<Scalars['Date']['output']>;
  downloadLink?: Maybe<Scalars['String']['output']>;
  eolDate?: Maybe<Scalars['Date']['output']>;
  features?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  security?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  slug?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};

export type AgentReleasesFilter =
  | 'ANDROID'
  | 'BROWSER'
  | 'DOTNET'
  | 'ELIXIR'
  | 'GO'
  | 'INFRASTRUCTURE'
  | 'IOS'
  | 'JAVA'
  | 'NODEJS'
  | 'PHP'
  | 'PYTHON'
  | 'RUBY'
  | 'SDK';

export type AgentSearch = {
  __typename?: 'AgentSearch';
  agents?: Maybe<Array<Maybe<Agent>>>;
  limit?: Maybe<Scalars['Int']['output']>;
  offset?: Maybe<Scalars['Int']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type AgentSettings = {
  __typename?: 'AgentSettings';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
  serverSideConfig?: Maybe<Scalars['Boolean']['output']>;
};

export type AgentStatus = {
  __typename?: 'AgentStatus';
  alertStatus?: Maybe<AlertStatus>;
  label?: Maybe<Scalars['String']['output']>;
  level?: Maybe<Scalars['String']['output']>;
  openedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type AgentSummary = {
  __typename?: 'AgentSummary';
  apdex?: Maybe<SummaryValue>;
  errorRate?: Maybe<SummaryValue>;
  nonWebResponseTime?: Maybe<SummaryValue>;
  throughput?: Maybe<SummaryValue>;
  webResponseTime?: Maybe<SummaryValue>;
};

export type AgentTracesErrorTrace = {
  __typename?: 'AgentTracesErrorTrace';
  agentAttributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  exceptionClass?: Maybe<Scalars['String']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  intrinsicAttributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  stackTrace?: Maybe<Array<Maybe<AgentTracesStackTraceFrame>>>;
  startTime: Scalars['EpochMilliseconds']['output'];
  uri?: Maybe<Scalars['String']['output']>;
  userAttributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
};

export type AgentTracesErrorTraceOrderBy = {
  direction?: InputMaybe<AgentTracesOrderByDirection>;
  field: AgentTracesErrorTraceOrderByField;
};

export type AgentTracesErrorTraceOrderByField =
  | 'COUNT'
  | 'EXCEPTION_CLASS'
  | 'MESSAGE'
  | 'PATH'
  | 'TIMESTAMP';

export type AgentTracesErrorTraceQuery = {
  exceptionClassPattern?: InputMaybe<Scalars['String']['input']>;
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  messagePattern?: InputMaybe<Scalars['String']['input']>;
  orderBy?: InputMaybe<AgentTracesErrorTraceOrderBy>;
  pathPattern?: InputMaybe<Scalars['String']['input']>;
  startTimeMax?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  startTimeMin?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};

export type AgentTracesExplainPlan = {
  __typename?: 'AgentTracesExplainPlan';
  headers?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  rows?: Maybe<Array<Maybe<Scalars['AgentTracesExplainPlanRow']['output']>>>;
};

export type AgentTracesOrderByDirection =
  | 'ASC'
  | 'DESC';

export type AgentTracesSqlTrace = {
  __typename?: 'AgentTracesSqlTrace';
  backtrace?: Maybe<Array<Maybe<AgentTracesStackTraceFrame>>>;
  callCount?: Maybe<Scalars['Int']['output']>;
  databaseInstanceName?: Maybe<Scalars['String']['output']>;
  databaseMetricName: Scalars['String']['output'];
  databaseName?: Maybe<Scalars['String']['output']>;
  explainPlan?: Maybe<AgentTracesExplainPlan>;
  id: Scalars['ID']['output'];
  maxCallTime?: Maybe<Scalars['Milliseconds']['output']>;
  minCallTime?: Maybe<Scalars['Milliseconds']['output']>;
  ormInputQuery?: Maybe<Scalars['String']['output']>;
  ormName?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  queryParameters?: Maybe<Scalars['AgentTracesQueryParameters']['output']>;
  sql?: Maybe<Scalars['String']['output']>;
  sqlId: Scalars['ID']['output'];
  startTime: Scalars['EpochMilliseconds']['output'];
  totalCallTime?: Maybe<Scalars['Milliseconds']['output']>;
  uri: Scalars['String']['output'];
};

export type AgentTracesSqlTraceOrderBy = {
  direction?: InputMaybe<AgentTracesOrderByDirection>;
  field: AgentTracesSqlTraceOrderByField;
};

export type AgentTracesSqlTraceOrderByField =
  | 'DURATION'
  | 'MAX_CALL_TIME'
  | 'PATH'
  | 'SQL_ID'
  | 'TIMESTAMP'
  | 'TOTAL_CALL_TIME';

export type AgentTracesSqlTraceQuery = {
  databaseMetricNamePattern?: InputMaybe<Scalars['String']['input']>;
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AgentTracesSqlTraceOrderBy>;
  pathPattern?: InputMaybe<Scalars['String']['input']>;
  sqlId?: InputMaybe<Scalars['ID']['input']>;
  sqlPattern?: InputMaybe<Scalars['String']['input']>;
  startTimeMax?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  startTimeMin?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  uriPattern?: InputMaybe<Scalars['String']['input']>;
};

export type AgentTracesStackTraceFrame = {
  __typename?: 'AgentTracesStackTraceFrame';
  filepath?: Maybe<Scalars['String']['output']>;
  formatted: Scalars['String']['output'];
  line?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type AgentTracesTraceMutationError = {
  __typename?: 'AgentTracesTraceMutationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AgentTracesTraceMutationErrorType>;
};

export type AgentTracesTraceMutationErrorType =
  | 'REMOVAL_ERROR';

export type AgentTracesTraceMutationResult = {
  __typename?: 'AgentTracesTraceMutationResult';
  errors?: Maybe<Array<Maybe<AgentTracesTraceMutationError>>>;
};

export type AgentTracesTransactionTrace = {
  __typename?: 'AgentTracesTransactionTrace';
  agentAttributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
  duration: Scalars['Milliseconds']['output'];
  edges?: Maybe<Array<Maybe<AgentTracesTransactionTraceEdge>>>;
  guid?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  intrinsicAttributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
  nodes?: Maybe<Array<Maybe<AgentTracesTransactionTraceNode>>>;
  path: Scalars['String']['output'];
  protocolVersion: Scalars['Int']['output'];
  source?: Maybe<AgentTracesTransactionTraceSource>;
  startTime: Scalars['EpochMilliseconds']['output'];
  uri: Scalars['String']['output'];
  userAttributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
};

export type AgentTracesTransactionTraceEdge = {
  __typename?: 'AgentTracesTransactionTraceEdge';
  childId?: Maybe<Scalars['ID']['output']>;
  parentId?: Maybe<Scalars['ID']['output']>;
};

export type AgentTracesTransactionTraceFilter = {
  source?: InputMaybe<AgentTracesTransactionTraceSource>;
  startTimeMax?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  startTimeMin?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};

export type AgentTracesTransactionTraceNode = {
  __typename?: 'AgentTracesTransactionTraceNode';
  attributes?: Maybe<Scalars['AgentTracesTraceAttributes']['output']>;
  duration?: Maybe<Scalars['Milliseconds']['output']>;
  exclusiveDurationMs?: Maybe<Scalars['EpochMilliseconds']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type AgentTracesTransactionTraceOrderBy = {
  direction?: InputMaybe<AgentTracesOrderByDirection>;
  field: AgentTracesTransactionTraceOrderByField;
};

export type AgentTracesTransactionTraceOrderByField =
  | 'DURATION'
  | 'PATH'
  | 'TIMESTAMP';

export type AgentTracesTransactionTraceQuery = {
  guids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AgentTracesTransactionTraceOrderBy>;
  parametersPattern?: InputMaybe<Scalars['String']['input']>;
  pathPattern?: InputMaybe<Scalars['String']['input']>;
  paths?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  realAgentIds?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  sources?: InputMaybe<Array<InputMaybe<AgentTracesTransactionTraceSource>>>;
  startTimeMax?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  startTimeMin?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  urlPattern?: InputMaybe<Scalars['String']['input']>;
};

export type AgentTracesTransactionTraceSource =
  | 'DISTRIBUTED_TRACE'
  | 'TRANSACTION_TRACE';

export type AgentType =
  | 'APPLICATION'
  | 'BROWSER_APPLICATION'
  | 'MOBILE_APPLICATION'
  | 'SERVER';

export type AgentVersions = {
  __typename?: 'AgentVersions';
  maxVersion?: Maybe<Scalars['String']['output']>;
  maxVersionReleaseDate?: Maybe<Scalars['Date']['output']>;
  minVersion?: Maybe<Scalars['String']['output']>;
  minVersionReleaseDate?: Maybe<Scalars['Date']['output']>;
};

export type AgentViolation = {
  __typename?: 'AgentViolation';
  agentUrl?: Maybe<Scalars['String']['output']>;
  alertStatus?: Maybe<AlertStatus>;
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  level?: Maybe<Scalars['String']['output']>;
  openedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  violationUrl?: Maybe<Scalars['String']['output']>;
};

export type AiConnectAccountStitchedFields = {
  __typename?: 'AiConnectAccountStitchedFields';
  enricher?: Maybe<AiConnectEnricher>;
  enrichers: Array<AiConnectEnricher>;
  notifier?: Maybe<AiConnectNotifier>;
  notifiers: Array<AiConnectNotifier>;
  variable?: Maybe<AiConnectVariable>;
  variables: Array<AiConnectVariable>;
  workflow?: Maybe<AiConnectWorkflow>;
  workflows: Array<AiConnectWorkflow>;
};


export type AiConnectAccountStitchedFieldsEnricherArgs = {
  enricherId?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  workflowId?: InputMaybe<Scalars['ID']['input']>;
};


export type AiConnectAccountStitchedFieldsEnrichersArgs = {
  type?: InputMaybe<AiConnectEnricherTypes>;
  workflowId?: InputMaybe<Scalars['ID']['input']>;
};


export type AiConnectAccountStitchedFieldsNotifierArgs = {
  name?: InputMaybe<Scalars['String']['input']>;
  notifierId?: InputMaybe<Scalars['ID']['input']>;
  workflowId?: InputMaybe<Scalars['ID']['input']>;
};


export type AiConnectAccountStitchedFieldsNotifiersArgs = {
  type?: InputMaybe<AiConnectNotifierTypes>;
  workflowId?: InputMaybe<Scalars['ID']['input']>;
};


export type AiConnectAccountStitchedFieldsVariableArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};


export type AiConnectAccountStitchedFieldsVariablesArgs = {
  source?: InputMaybe<AiConnectVariableSource>;
};


export type AiConnectAccountStitchedFieldsWorkflowArgs = {
  workflowId: Scalars['ID']['input'];
};

export type AiConnectAttribute = {
  __typename?: 'AiConnectAttribute';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AiConnectAttributeInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type AiConnectAuth = {
  type: AiConnectAuthType;
};

export type AiConnectAuthType =
  | 'BASIC'
  | 'TOKEN'
  | 'USER_TOKEN';

export type AiConnectAwsEventBridgeNotifier = AiConnectNotifier & {
  __typename?: 'AiConnectAwsEventBridgeNotifier';
  active: Scalars['Boolean']['output'];
  awsAccountId: Scalars['String']['output'];
  awsRegion: Scalars['String']['output'];
  body: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  eventBusName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AiConnectNotifierTypes;
  updatedAt: Scalars['DateTime']['output'];
  workflowId: Scalars['ID']['output'];
};

export type AiConnectAwsEventBridgeNotifierInput = {
  awsAccountId: Scalars['String']['input'];
  awsRegion: Scalars['String']['input'];
  body: Scalars['String']['input'];
  eventBusName: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type AiConnectAwsEventBridgeNotifierTestInput = {
  awsAccountId: Scalars['String']['input'];
  awsRegion: Scalars['String']['input'];
  body: Scalars['String']['input'];
  eventBusName: Scalars['String']['input'];
};

export type AiConnectAwsEventBridgeNotifierUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  awsAccountId?: InputMaybe<Scalars['String']['input']>;
  awsRegion?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  eventBusName?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AiConnectBasicAuth = AiConnectAuth & {
  __typename?: 'AiConnectBasicAuth';
  type: AiConnectAuthType;
  username: Scalars['String']['output'];
};

export type AiConnectBasicAuthInput = {
  password: Scalars['SecureValue']['input'];
  username: Scalars['String']['input'];
};

export type AiConnectCredentialsInput = {
  basic?: InputMaybe<AiConnectBasicAuthInput>;
  token?: InputMaybe<AiConnectTokenAuthInput>;
  userToken?: InputMaybe<AiConnectUserTokenAuthInput>;
};

export type AiConnectDataValidationError = AiConnectResponseError & {
  __typename?: 'AiConnectDataValidationError';
  description: Scalars['String']['output'];
  details?: Maybe<Scalars['String']['output']>;
  fields: Array<AiConnectFieldError>;
  type: Scalars['String']['output'];
};

export type AiConnectDeleteResponse = AiConnectResponse & {
  __typename?: 'AiConnectDeleteResponse';
  entitiesId?: Maybe<Array<Scalars['ID']['output']>>;
  errors: Array<AiConnectResponseError>;
};

export type AiConnectEnricher = {
  active: Scalars['Boolean']['output'];
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AiConnectEnricherTypes;
  updatedAt: Scalars['DateTime']['output'];
  workflowId: Scalars['ID']['output'];
};

export type AiConnectEnricherResponse = AiConnectResponse & {
  __typename?: 'AiConnectEnricherResponse';
  enricher?: Maybe<AiConnectEnricher>;
  errors: Array<AiConnectResponseError>;
};

export type AiConnectEnricherTypes =
  | 'NRQL';

export type AiConnectEnrichers = {
  nrqlList?: InputMaybe<Array<AiConnectNrqlEnricherInput>>;
};

export type AiConnectEnrichersUpdate = {
  nrql?: InputMaybe<AiConnectNrqlEnricherUpdate>;
};

export type AiConnectFieldError = {
  __typename?: 'AiConnectFieldError';
  field: Scalars['String']['output'];
  message: Scalars['String']['output'];
};

export type AiConnectHeader = {
  __typename?: 'AiConnectHeader';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AiConnectHeaderInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type AiConnectJiraNotifier = AiConnectNotifier & {
  __typename?: 'AiConnectJiraNotifier';
  active: Scalars['Boolean']['output'];
  assignee?: Maybe<Scalars['String']['output']>;
  attributes: Array<AiConnectAttribute>;
  createdAt: Scalars['DateTime']['output'];
  credentials: AiConnectUserTokenAuth;
  id: Scalars['ID']['output'];
  issueType?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  priority?: Maybe<Scalars['String']['output']>;
  project: Scalars['String']['output'];
  status?: Maybe<Scalars['String']['output']>;
  twoWayIntegration?: Maybe<Scalars['Boolean']['output']>;
  type: AiConnectNotifierTypes;
  updatedAt: Scalars['DateTime']['output'];
  url: Scalars['String']['output'];
  watchers?: Maybe<Array<Scalars['String']['output']>>;
  workflowId: Scalars['ID']['output'];
};

export type AiConnectJiraNotifierInput = {
  assignee?: InputMaybe<Scalars['String']['input']>;
  attributes?: InputMaybe<Array<AiConnectAttributeInput>>;
  credentials: AiConnectUserTokenAuthInput;
  issueType?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  priority?: InputMaybe<Scalars['String']['input']>;
  project: Scalars['String']['input'];
  status?: InputMaybe<Scalars['String']['input']>;
  twoWayIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  url: Scalars['String']['input'];
  watchers?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AiConnectJiraNotifierTestInput = {
  assignee?: InputMaybe<Scalars['String']['input']>;
  attributes?: InputMaybe<Array<AiConnectAttributeInput>>;
  credentials: AiConnectUserTokenAuthInput;
  issueType?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  project: Scalars['String']['input'];
  status?: InputMaybe<Scalars['String']['input']>;
  url: Scalars['String']['input'];
  watchers?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AiConnectJiraNotifierUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  assignee?: InputMaybe<Scalars['String']['input']>;
  attributes?: InputMaybe<Array<AiConnectAttributeInput>>;
  credentials?: InputMaybe<AiConnectUserTokenAuthInput>;
  id: Scalars['ID']['input'];
  issueType?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  twoWayIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  watchers?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AiConnectMutationResponseError = AiConnectResponseError & {
  __typename?: 'AiConnectMutationResponseError';
  description: Scalars['String']['output'];
  details?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type AiConnectNotifier = {
  active: Scalars['Boolean']['output'];
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AiConnectNotifierTypes;
  updatedAt: Scalars['DateTime']['output'];
  workflowId: Scalars['ID']['output'];
};

export type AiConnectNotifierResponse = AiConnectResponse & {
  __typename?: 'AiConnectNotifierResponse';
  errors: Array<AiConnectResponseError>;
  notifier?: Maybe<AiConnectNotifier>;
};

export type AiConnectNotifierTestInput = {
  awsEventBridge?: InputMaybe<AiConnectAwsEventBridgeNotifierTestInput>;
  jira?: InputMaybe<AiConnectJiraNotifierTestInput>;
  serviceNow?: InputMaybe<AiConnectServiceNowNotifierTestInput>;
  webhook?: InputMaybe<AiConnectWebhookNotifierTestInput>;
};

export type AiConnectNotifierTestResponse = AiConnectResponse & {
  __typename?: 'AiConnectNotifierTestResponse';
  details?: Maybe<Scalars['String']['output']>;
  errors: Array<AiConnectResponseError>;
  result: AiConnectTestResult;
};

export type AiConnectNotifierTypes =
  | 'AWSEVENTBRIDGE'
  | 'JIRA'
  | 'SERVICENOW'
  | 'WEBHOOK';

export type AiConnectNotifiers = {
  awsEventBridge?: InputMaybe<Array<AiConnectAwsEventBridgeNotifierInput>>;
  jira?: InputMaybe<Array<AiConnectJiraNotifierInput>>;
  serviceNow?: InputMaybe<Array<AiConnectServiceNowNotifierInput>>;
  webhook?: InputMaybe<Array<AiConnectWebhookNotifierInput>>;
};

export type AiConnectNotifiersUpdate = {
  awsEventBridge?: InputMaybe<AiConnectAwsEventBridgeNotifierUpdate>;
  jira?: InputMaybe<AiConnectJiraNotifierUpdate>;
  serviceNow?: InputMaybe<AiConnectServiceNowNotifierUpdate>;
  webhook?: InputMaybe<AiConnectWebhookNotifierUpdate>;
};

export type AiConnectNrqlEnricher = AiConnectEnricher & {
  __typename?: 'AiConnectNrqlEnricher';
  active: Scalars['Boolean']['output'];
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  outputType: AiConnectNrqlOutputType;
  queryTemplate: Scalars['String']['output'];
  type: AiConnectEnricherTypes;
  updatedAt: Scalars['DateTime']['output'];
  workflowId: Scalars['ID']['output'];
};

export type AiConnectNrqlEnricherInput = {
  name: Scalars['String']['input'];
  outputType?: InputMaybe<AiConnectNrqlOutputType>;
  queryTemplate: Scalars['String']['input'];
};

export type AiConnectNrqlEnricherUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  outputType?: InputMaybe<AiConnectNrqlOutputType>;
  queryTemplate?: InputMaybe<Scalars['String']['input']>;
};

export type AiConnectNrqlOutputType =
  | 'CHART'
  | 'JSON';

export type AiConnectPolicy = {
  __typename?: 'AiConnectPolicy';
  id: Scalars['Int']['output'];
};

export type AiConnectPolicyInput = {
  id: Scalars['Int']['input'];
};

export type AiConnectResponse = {
  errors: Array<AiConnectResponseError>;
};

export type AiConnectResponseError = {
  description: Scalars['String']['output'];
  details?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type AiConnectServiceNowNotifier = AiConnectNotifier & {
  __typename?: 'AiConnectServiceNowNotifier';
  active: Scalars['Boolean']['output'];
  attributes: Array<AiConnectAttribute>;
  createdAt: Scalars['DateTime']['output'];
  credentials: AiConnectBasicAuth;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  twoWayIntegration?: Maybe<Scalars['Boolean']['output']>;
  type: AiConnectNotifierTypes;
  updatedAt: Scalars['DateTime']['output'];
  url: Scalars['String']['output'];
  workflowId: Scalars['ID']['output'];
};

export type AiConnectServiceNowNotifierInput = {
  attributes?: InputMaybe<Array<AiConnectAttributeInput>>;
  credentials: AiConnectBasicAuthInput;
  name: Scalars['String']['input'];
  twoWayIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  url: Scalars['String']['input'];
};

export type AiConnectServiceNowNotifierTestInput = {
  attributes?: InputMaybe<Array<AiConnectAttributeInput>>;
  credentials: AiConnectBasicAuthInput;
  url: Scalars['String']['input'];
};

export type AiConnectServiceNowNotifierUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attributes?: InputMaybe<Array<AiConnectAttributeInput>>;
  credentials?: InputMaybe<AiConnectBasicAuthInput>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  twoWayIntegration?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type AiConnectTestResult =
  | 'FAIL'
  | 'OK';

export type AiConnectTokenAuth = AiConnectAuth & {
  __typename?: 'AiConnectTokenAuth';
  prefix: Scalars['String']['output'];
  type: AiConnectAuthType;
};

export type AiConnectTokenAuthInput = {
  prefix: Scalars['String']['input'];
  token: Scalars['SecureValue']['input'];
};

export type AiConnectUserTokenAuth = AiConnectAuth & {
  __typename?: 'AiConnectUserTokenAuth';
  type: AiConnectAuthType;
  username: Scalars['String']['output'];
};

export type AiConnectUserTokenAuthInput = {
  token: Scalars['SecureValue']['input'];
  username: Scalars['String']['input'];
};

export type AiConnectVariable = {
  __typename?: 'AiConnectVariable';
  default: Scalars['Boolean']['output'];
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  source: AiConnectVariableSource;
  type: AiConnectVariableType;
};

export type AiConnectVariableSource =
  | 'GLOBAL'
  | 'NR'
  | 'PD';

export type AiConnectVariableType =
  | 'BOOLEAN'
  | 'DOUBLE'
  | 'ENUM'
  | 'INT'
  | 'LONG'
  | 'STRING';

export type AiConnectWebhookNotifier = AiConnectNotifier & {
  __typename?: 'AiConnectWebhookNotifier';
  active: Scalars['Boolean']['output'];
  body: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  credentials?: Maybe<AiConnectAuth>;
  headers?: Maybe<Array<AiConnectHeader>>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AiConnectNotifierTypes;
  updatedAt: Scalars['DateTime']['output'];
  url: Scalars['String']['output'];
  workflowId: Scalars['ID']['output'];
};

export type AiConnectWebhookNotifierInput = {
  body: Scalars['String']['input'];
  credentials?: InputMaybe<AiConnectCredentialsInput>;
  headers?: InputMaybe<Array<AiConnectHeaderInput>>;
  name: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type AiConnectWebhookNotifierTestInput = {
  body?: InputMaybe<Scalars['String']['input']>;
  credentials?: InputMaybe<AiConnectCredentialsInput>;
  headers?: InputMaybe<Array<AiConnectHeaderInput>>;
  url: Scalars['String']['input'];
};

export type AiConnectWebhookNotifierUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  body?: InputMaybe<Scalars['String']['input']>;
  credentials?: InputMaybe<AiConnectCredentialsInput>;
  headers?: InputMaybe<Array<AiConnectHeaderInput>>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
};

export type AiConnectWorkflow = {
  __typename?: 'AiConnectWorkflow';
  accountId: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  createdAt: Scalars['DateTime']['output'];
  creatorId: Scalars['Int']['output'];
  enrichers: Array<AiConnectEnricher>;
  id: Scalars['ID']['output'];
  lastExecution?: Maybe<Scalars['DateTime']['output']>;
  name: Scalars['String']['output'];
  notifiers: Array<AiConnectNotifier>;
  policies: Array<AiConnectPolicy>;
  updatedAt: Scalars['DateTime']['output'];
};

export type AiConnectWorkflowInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  enrichers?: InputMaybe<AiConnectEnrichers>;
  name: Scalars['String']['input'];
  notifiers: AiConnectNotifiers;
  policies: Array<AiConnectPolicyInput>;
};

export type AiConnectWorkflowResponse = AiConnectResponse & {
  __typename?: 'AiConnectWorkflowResponse';
  errors: Array<AiConnectResponseError>;
  workflow?: Maybe<AiConnectWorkflow>;
};

export type AiConnectWorkflowStepResult = {
  __typename?: 'AiConnectWorkflowStepResult';
  error?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  result?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type AiConnectWorkflowTestResponse = AiConnectResponse & {
  __typename?: 'AiConnectWorkflowTestResponse';
  details?: Maybe<Scalars['String']['output']>;
  errors: Array<AiConnectResponseError>;
  message?: Maybe<Scalars['String']['output']>;
  status: AiConnectTestResult;
  steps: Array<AiConnectWorkflowStepResult>;
};

export type AiConnectWorkflowUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  policies?: InputMaybe<Array<AiConnectPolicyInput>>;
};

export type AiDecisionsAccountStitchedFields = {
  __typename?: 'AiDecisionsAccountStitchedFields';
  decision?: Maybe<AiDecisionsDecision>;
  decisions: AiDecisionsDecisionListing;
};


export type AiDecisionsAccountStitchedFieldsDecisionArgs = {
  decisionId: Scalars['ID']['input'];
};


export type AiDecisionsAccountStitchedFieldsDecisionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  decisionStates?: InputMaybe<Array<AiDecisionsDecisionState>>;
  decisionTypes?: InputMaybe<Array<AiDecisionsDecisionType>>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  sortMethod?: InputMaybe<AiDecisionsDecisionSortMethod>;
};

export type AiDecisionsAllInput = {
  children: Array<AiDecisionsRuleExpressionInput>;
};

export type AiDecisionsAndInput = {
  left: AiDecisionsRuleExpressionInput;
  right: AiDecisionsRuleExpressionInput;
};

export type AiDecisionsAnnotationEntry = {
  __typename?: 'AiDecisionsAnnotationEntry';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AiDecisionsApplicableIncidentSearch = {
  __typename?: 'AiDecisionsApplicableIncidentSearch';
  completedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  errorMessage?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  incidentsScanned: Scalars['Int']['output'];
  results: Array<AiDecisionsSelectorExamples>;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiDecisionsAttributeExistsInput = {
  incident: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsCategoricalClusteringInput = {
  threshold: Scalars['Float']['input'];
};

export type AiDecisionsDecision = {
  __typename?: 'AiDecisionsDecision';
  annotations: Array<AiDecisionsAnnotationEntry>;
  correlationWindowLength?: Maybe<Scalars['Milliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  creator?: Maybe<UserReference>;
  decisionExpression: Scalars['AiDecisionsRuleExpression']['output'];
  decisionType: AiDecisionsDecisionType;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  metadata: AiDecisionsRuleMetadata;
  minCorrelationThreshold: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  overrideConfiguration?: Maybe<AiDecisionsOverrideConfiguration>;
  source: AiDecisionsRuleSource;
  state: AiDecisionsDecisionState;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiDecisionsDecisionListing = {
  __typename?: 'AiDecisionsDecisionListing';
  count: Scalars['Int']['output'];
  decisions: Array<AiDecisionsDecision>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  prevCursor?: Maybe<Scalars['String']['output']>;
};

export type AiDecisionsDecisionSortMethod =
  | 'ID'
  | 'LATEST_CREATED'
  | 'STATE_LAST_MODIFIED';

export type AiDecisionsDecisionState =
  | 'DISABLED'
  | 'ENABLED';

export type AiDecisionsDecisionType =
  | 'EXPLICIT'
  | 'GLOBAL'
  | 'IMPLICIT';

export type AiDecisionsFixedContainsInput = {
  container: AiDecisionsIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedCosineDistanceInput = {
  incident: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedEndsWithInput = {
  incident: AiDecisionsIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedEqualInput = {
  incident: AiDecisionsIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedFuzzyScoreInput = {
  incident: AiDecisionsIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedFuzzyWuzzyAdaptiveRatioInput = {
  incident: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedFuzzyWuzzyPartialRatioInput = {
  incident: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedFuzzyWuzzyRatioInput = {
  incident: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedFuzzyWuzzyTokenSetRatioInput = {
  incident: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedGreaterThanInput = {
  compared: Scalars['Float']['input'];
  incident: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsFixedGreaterThanOrEqualInput = {
  compared: Scalars['Float']['input'];
  incident: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsFixedHammingDistanceInput = {
  incident: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedJaccardDistanceInput = {
  incident: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedJaroWinklerInput = {
  incident: AiDecisionsIncidentObjectInput;
  minDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedLessThanInput = {
  compared: Scalars['Float']['input'];
  incident: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsFixedLessThanOrEqualInput = {
  compared: Scalars['Float']['input'];
  incident: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsFixedLevenshteinInput = {
  incident: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedLongestCommonSubsequenceDistanceInput = {
  incident: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedNumericalEqualInput = {
  compared: Scalars['Float']['input'];
  incident: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsFixedRegularExpressionInput = {
  incident: AiDecisionsIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedSoundExInput = {
  incident: AiDecisionsIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type AiDecisionsFixedStartsWithInput = {
  incident: AiDecisionsIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type AiDecisionsIncidentObjectInput = {
  attribute: Scalars['String']['input'];
  select: AiDecisionsIncidentSelect;
};

export type AiDecisionsIncidentSelect =
  | 'FIRST_INCIDENT'
  | 'SECOND_INCIDENT';

export type AiDecisionsIssuePriority =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type AiDecisionsMergeFeedback = {
  __typename?: 'AiDecisionsMergeFeedback';
  childIssueId: Scalars['ID']['output'];
  opinion: AiDecisionsOpinion;
  parentIssueId: Scalars['ID']['output'];
  ruleId: Scalars['ID']['output'];
  userId: Scalars['ID']['output'];
};

export type AiDecisionsNotInput = {
  child: AiDecisionsRuleExpressionInput;
};

export type AiDecisionsOneInput = {
  children: Array<AiDecisionsRuleExpressionInput>;
};

export type AiDecisionsOperationResult = {
  __typename?: 'AiDecisionsOperationResult';
  result: AiDecisionsResultType;
};

export type AiDecisionsOpinion =
  | 'DISLIKE'
  | 'LIKE';

export type AiDecisionsOpinionEntry = {
  __typename?: 'AiDecisionsOpinionEntry';
  count: Scalars['Int']['output'];
  opinion: AiDecisionsOpinion;
};

export type AiDecisionsOrInput = {
  left: AiDecisionsRuleExpressionInput;
  right: AiDecisionsRuleExpressionInput;
};

export type AiDecisionsOverrideConfiguration = {
  __typename?: 'AiDecisionsOverrideConfiguration';
  description?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<AiDecisionsIssuePriority>;
  title?: Maybe<Scalars['String']['output']>;
};

export type AiDecisionsOverrideConfigurationInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<AiDecisionsIssuePriority>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type AiDecisionsRelativeCommonPrefixInput = {
  value: Scalars['String']['input'];
};

export type AiDecisionsRelativeContainsInput = {
  contained: AiDecisionsIncidentObjectInput;
  container: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeCosineDistanceInput = {
  left: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeEndsWithInput = {
  contained: AiDecisionsIncidentObjectInput;
  container: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeEqualInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeFuzzyScoreInput = {
  left: AiDecisionsIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeFuzzyWuzzyAdaptiveRatioInput = {
  left: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeFuzzyWuzzyPartialRatioInput = {
  left: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeFuzzyWuzzyRatioInput = {
  left: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeFuzzyWuzzyTokenSetRatioInput = {
  left: AiDecisionsIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeGreaterThanInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeGreaterThanOrEqualInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeHammingDistanceInput = {
  left: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeJaccardDistanceInput = {
  left: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeJaroWinklerInput = {
  left: AiDecisionsIncidentObjectInput;
  minDistance: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeLessThanInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeLessThanOrEqualInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeLevenshteinInput = {
  left: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeLongestCommonSubsequenceDistanceInput = {
  left: AiDecisionsIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeNumericalEqualInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeRegularExpressionInput = {
  left: AiDecisionsIncidentObjectInput;
  right: AiDecisionsIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type AiDecisionsRelativeSoundExInput = {
  left: AiDecisionsIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  right: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeStartsWithInput = {
  contained: AiDecisionsIncidentObjectInput;
  container: AiDecisionsIncidentObjectInput;
};

export type AiDecisionsRelativeTopologicallyDependentInput = {
  from: Array<Scalars['ID']['input']>;
  graphId?: InputMaybe<Scalars['ID']['input']>;
  maxHops?: InputMaybe<Scalars['Int']['input']>;
  requiredAttributes: Array<Scalars['String']['input']>;
  requiredClasses: Array<AiDecisionsVertexClass>;
  to: Array<Scalars['ID']['input']>;
};

export type AiDecisionsResultType =
  | 'FAILURE'
  | 'SUCCESS';

export type AiDecisionsRule = {
  __typename?: 'AiDecisionsRule';
  annotations: Array<AiDecisionsAnnotationEntry>;
  correlationWindowLength?: Maybe<Scalars['Milliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  creator?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  metadata: AiDecisionsRuleMetadata;
  minCorrelationThreshold: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  overrideConfiguration?: Maybe<AiDecisionsOverrideConfiguration>;
  ruleExpression: Scalars['AiDecisionsRuleExpression']['output'];
  ruleType: AiDecisionsRuleType;
  source: AiDecisionsRuleSource;
  state: AiDecisionsRuleState;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiDecisionsRuleBlueprint = {
  correlationWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  minCorrelationThreshold?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  overrideConfiguration?: InputMaybe<AiDecisionsOverrideConfigurationInput>;
  ruleExpression: AiDecisionsRuleExpressionInput;
  ruleType: AiDecisionsRuleType;
  source: AiDecisionsRuleSource;
};

export type AiDecisionsRuleExpressionInput = {
  all?: InputMaybe<AiDecisionsAllInput>;
  and?: InputMaybe<AiDecisionsAndInput>;
  attributeExists?: InputMaybe<AiDecisionsAttributeExistsInput>;
  categoricalClustering?: InputMaybe<AiDecisionsCategoricalClusteringInput>;
  fixedContains?: InputMaybe<AiDecisionsFixedContainsInput>;
  fixedCosineDistance?: InputMaybe<AiDecisionsFixedCosineDistanceInput>;
  fixedEndsWith?: InputMaybe<AiDecisionsFixedEndsWithInput>;
  fixedEqual?: InputMaybe<AiDecisionsFixedEqualInput>;
  fixedFuzzyScore?: InputMaybe<AiDecisionsFixedFuzzyScoreInput>;
  fixedFuzzyWuzzyAdaptiveRatio?: InputMaybe<AiDecisionsFixedFuzzyWuzzyAdaptiveRatioInput>;
  fixedFuzzyWuzzyPartialRatio?: InputMaybe<AiDecisionsFixedFuzzyWuzzyPartialRatioInput>;
  fixedFuzzyWuzzyRatio?: InputMaybe<AiDecisionsFixedFuzzyWuzzyRatioInput>;
  fixedFuzzyWuzzyTokenSetRatio?: InputMaybe<AiDecisionsFixedFuzzyWuzzyTokenSetRatioInput>;
  fixedGreaterThan?: InputMaybe<AiDecisionsFixedGreaterThanInput>;
  fixedGreaterThanOrEqual?: InputMaybe<AiDecisionsFixedGreaterThanOrEqualInput>;
  fixedHammingDistance?: InputMaybe<AiDecisionsFixedHammingDistanceInput>;
  fixedJaccardDistance?: InputMaybe<AiDecisionsFixedJaccardDistanceInput>;
  fixedJaroWinkler?: InputMaybe<AiDecisionsFixedJaroWinklerInput>;
  fixedLessThan?: InputMaybe<AiDecisionsFixedLessThanInput>;
  fixedLessThanOrEqual?: InputMaybe<AiDecisionsFixedLessThanOrEqualInput>;
  fixedLevenshtein?: InputMaybe<AiDecisionsFixedLevenshteinInput>;
  fixedLongestCommonSubsequenceDistance?: InputMaybe<AiDecisionsFixedLongestCommonSubsequenceDistanceInput>;
  fixedNumericalEqual?: InputMaybe<AiDecisionsFixedNumericalEqualInput>;
  fixedRegularExpression?: InputMaybe<AiDecisionsFixedRegularExpressionInput>;
  fixedSoundEx?: InputMaybe<AiDecisionsFixedSoundExInput>;
  fixedStartsWith?: InputMaybe<AiDecisionsFixedStartsWithInput>;
  not?: InputMaybe<AiDecisionsNotInput>;
  one?: InputMaybe<AiDecisionsOneInput>;
  or?: InputMaybe<AiDecisionsOrInput>;
  relativeCommonPrefix?: InputMaybe<AiDecisionsRelativeCommonPrefixInput>;
  relativeContains?: InputMaybe<AiDecisionsRelativeContainsInput>;
  relativeCosineDistance?: InputMaybe<AiDecisionsRelativeCosineDistanceInput>;
  relativeEndsWith?: InputMaybe<AiDecisionsRelativeEndsWithInput>;
  relativeEqual?: InputMaybe<AiDecisionsRelativeEqualInput>;
  relativeFuzzyScore?: InputMaybe<AiDecisionsRelativeFuzzyScoreInput>;
  relativeFuzzyWuzzyAdaptiveRatio?: InputMaybe<AiDecisionsRelativeFuzzyWuzzyAdaptiveRatioInput>;
  relativeFuzzyWuzzyPartialRatio?: InputMaybe<AiDecisionsRelativeFuzzyWuzzyPartialRatioInput>;
  relativeFuzzyWuzzyRatio?: InputMaybe<AiDecisionsRelativeFuzzyWuzzyRatioInput>;
  relativeFuzzyWuzzyTokenSetRatio?: InputMaybe<AiDecisionsRelativeFuzzyWuzzyTokenSetRatioInput>;
  relativeGreaterThan?: InputMaybe<AiDecisionsRelativeGreaterThanInput>;
  relativeGreaterThanOrEqual?: InputMaybe<AiDecisionsRelativeGreaterThanOrEqualInput>;
  relativeHammingDistance?: InputMaybe<AiDecisionsRelativeHammingDistanceInput>;
  relativeJaccardDistance?: InputMaybe<AiDecisionsRelativeJaccardDistanceInput>;
  relativeJaroWinkler?: InputMaybe<AiDecisionsRelativeJaroWinklerInput>;
  relativeLessThan?: InputMaybe<AiDecisionsRelativeLessThanInput>;
  relativeLessThanOrEqual?: InputMaybe<AiDecisionsRelativeLessThanOrEqualInput>;
  relativeLevenshtein?: InputMaybe<AiDecisionsRelativeLevenshteinInput>;
  relativeLongestCommonSubsequenceDistance?: InputMaybe<AiDecisionsRelativeLongestCommonSubsequenceDistanceInput>;
  relativeNumericalEqual?: InputMaybe<AiDecisionsRelativeNumericalEqualInput>;
  relativeRegularExpression?: InputMaybe<AiDecisionsRelativeRegularExpressionInput>;
  relativeSoundEx?: InputMaybe<AiDecisionsRelativeSoundExInput>;
  relativeStartsWith?: InputMaybe<AiDecisionsRelativeStartsWithInput>;
  relativeTopologicallyDependent?: InputMaybe<AiDecisionsRelativeTopologicallyDependentInput>;
  wholeCosineDistance?: InputMaybe<AiDecisionsWholeCosineDistanceInput>;
  wholeJaccardSimilarity?: InputMaybe<AiDecisionsWholeJaccardSimilarityInput>;
};

export type AiDecisionsRuleMetadata = {
  __typename?: 'AiDecisionsRuleMetadata';
  mergeOpinionCount: Array<AiDecisionsOpinionEntry>;
};

export type AiDecisionsRuleSource =
  | 'ADMIN'
  | 'GENERATED'
  | 'SYSTEM'
  | 'USER';

export type AiDecisionsRuleState =
  | 'DISABLED'
  | 'ENABLED';

export type AiDecisionsRuleType =
  | 'EXPLICIT'
  | 'GLOBAL'
  | 'IMPLICIT';

export type AiDecisionsSearchBlueprint = {
  expression: AiDecisionsRuleExpressionInput;
  limit?: InputMaybe<Scalars['Int']['input']>;
  retentionWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
};

export type AiDecisionsSelectorApplicability = {
  __typename?: 'AiDecisionsSelectorApplicability';
  count: Scalars['Int']['output'];
  select: AiDecisionsIncidentSelect;
};

export type AiDecisionsSelectorExamples = {
  __typename?: 'AiDecisionsSelectorExamples';
  incidents: Array<Scalars['ID']['output']>;
  select: AiDecisionsIncidentSelect;
};

export type AiDecisionsSimulation = {
  __typename?: 'AiDecisionsSimulation';
  candidateIncidents: Array<Array<Scalars['ID']['output']>>;
  completedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  errorMessage?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  incidentsApplicable: Array<AiDecisionsSelectorApplicability>;
  incidentsCorrelated: Scalars['Int']['output'];
  incidentsIngested: Scalars['Int']['output'];
  incidentsProcessed: Scalars['Int']['output'];
  progress: Scalars['Float']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiDecisionsSimulationBlueprint = {
  correlationWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
  expression: AiDecisionsRuleExpressionInput;
  minCorrelationThreshold?: InputMaybe<Scalars['Int']['input']>;
  retentionWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
};

export type AiDecisionsSuggestion = {
  __typename?: 'AiDecisionsSuggestion';
  correlationWindowLength?: Maybe<Scalars['Milliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  description?: Maybe<Scalars['String']['output']>;
  hash: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  minCorrelationThreshold: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  overrideConfiguration?: Maybe<AiDecisionsOverrideConfiguration>;
  ruleExpression: Scalars['AiDecisionsRuleExpression']['output'];
  state: AiDecisionsSuggestionState;
  suggester: Scalars['String']['output'];
  support?: Maybe<Scalars['String']['output']>;
};

export type AiDecisionsSuggestionBlueprint = {
  correlationWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hash: Scalars['String']['input'];
  minCorrelationThreshold?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  overrideConfiguration?: InputMaybe<AiDecisionsOverrideConfigurationInput>;
  ruleExpression: AiDecisionsRuleExpressionInput;
  suggester: Scalars['String']['input'];
  support?: InputMaybe<Scalars['String']['input']>;
};

export type AiDecisionsSuggestionState =
  | 'ACCEPTED'
  | 'DECLINED'
  | 'POSTPONED'
  | 'UNDECIDED';

export type AiDecisionsVertexClass =
  | 'APPLICATION'
  | 'CLOUDSERVICE'
  | 'CLUSTER'
  | 'DATASTORE'
  | 'HOST'
  | 'TEAM';

export type AiDecisionsWholeCosineDistanceInput = {
  maxDistance: Scalars['Float']['input'];
};

export type AiDecisionsWholeJaccardSimilarityInput = {
  threshold: Scalars['Float']['input'];
};

export type AiIssuesAccountStitchedFields = {
  __typename?: 'AiIssuesAccountStitchedFields';
  configByEnvironment?: Maybe<AiIssuesConfigurationByEnvironment>;
  incidents?: Maybe<AiIssuesIncidentData>;
  incidentsEvents?: Maybe<AiIssuesIncidentData>;
  issues?: Maybe<AiIssuesIssueData>;
  issuesEvents?: Maybe<AiIssuesIssueData>;
};


export type AiIssuesAccountStitchedFieldsIncidentsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AiIssuesFilterIncidents>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type AiIssuesAccountStitchedFieldsIncidentsEventsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AiIssuesFilterIncidentsEvents>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type AiIssuesAccountStitchedFieldsIssuesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AiIssuesFilterIssues>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type AiIssuesAccountStitchedFieldsIssuesEventsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<AiIssuesFilterIssuesEvents>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type AiIssuesAnomalyIncident = AiIssuesIIncident & {
  __typename?: 'AiIssuesAnomalyIncident';
  account?: Maybe<AccountReference>;
  accountIds: Scalars['String']['output'];
  anomalyId?: Maybe<Scalars['String']['output']>;
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  description: Array<Scalars['String']['output']>;
  entityGuids?: Maybe<Scalars['EntityGuid']['output']>;
  entityNames?: Maybe<Scalars['String']['output']>;
  entityTypes?: Maybe<Scalars['String']['output']>;
  /** @deprecated Use account */
  environmentId: Scalars['Int']['output'];
  incidentId: Scalars['ID']['output'];
  priority: AiIssuesPriority;
  state: AiIssuesIncidentState;
  timestamp: Scalars['EpochMilliseconds']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiIssuesConfigurationByEnvironment = {
  __typename?: 'AiIssuesConfigurationByEnvironment';
  config?: Maybe<AiIssuesEnvironmentConfiguration>;
};

export type AiIssuesConfigurationOverrideResponse = {
  __typename?: 'AiIssuesConfigurationOverrideResponse';
  config?: Maybe<AiIssuesEnvironmentConfiguration>;
  error?: Maybe<Scalars['String']['output']>;
};

export type AiIssuesCorrelationStatus =
  | 'MERGED'
  | 'OPEN';

export type AiIssuesEnvironmentConfiguration = {
  __typename?: 'AiIssuesEnvironmentConfiguration';
  flappingInterval?: Maybe<Scalars['Seconds']['output']>;
  gracePeriod?: Maybe<Array<AiIssuesGracePeriodConfig>>;
  inactivePeriod?: Maybe<Scalars['Seconds']['output']>;
  incidentTimeout?: Maybe<Scalars['Seconds']['output']>;
  issueTtl?: Maybe<Scalars['Seconds']['output']>;
  maxIssueSize?: Maybe<Scalars['Int']['output']>;
};

export type AiIssuesFilterIncidents = {
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entityTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  priority?: InputMaybe<Array<Scalars['String']['input']>>;
  states?: InputMaybe<Array<AiIssuesIncidentState>>;
};

export type AiIssuesFilterIncidentsEvents = {
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entityTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AiIssuesFilterIssues = {
  conditionIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  contains?: InputMaybe<Scalars['String']['input']>;
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entityTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  isAcknowledged?: InputMaybe<Scalars['Boolean']['input']>;
  isCorrelated?: InputMaybe<Scalars['Boolean']['input']>;
  mutingStates?: InputMaybe<Array<AiIssuesIssueMutingState>>;
  policyIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  priority?: InputMaybe<Array<Scalars['String']['input']>>;
  sources?: InputMaybe<Array<Scalars['String']['input']>>;
  states?: InputMaybe<Array<AiIssuesIssueState>>;
};

export type AiIssuesFilterIssuesEvents = {
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entityTypes?: InputMaybe<Array<Scalars['String']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AiIssuesGracePeriodConfig = {
  __typename?: 'AiIssuesGracePeriodConfig';
  period: Scalars['Seconds']['output'];
  priority: AiIssuesPriority;
};

export type AiIssuesGracePeriodConfigurationInput = {
  critical: Scalars['Seconds']['input'];
  high: Scalars['Seconds']['input'];
  low: Scalars['Seconds']['input'];
  medium: Scalars['Seconds']['input'];
};

export type AiIssuesIIncident = {
  account?: Maybe<AccountReference>;
  accountIds: Scalars['String']['output'];
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  description: Array<Scalars['String']['output']>;
  entityGuids?: Maybe<Scalars['EntityGuid']['output']>;
  entityNames?: Maybe<Scalars['String']['output']>;
  entityTypes?: Maybe<Scalars['String']['output']>;
  /** @deprecated Use account */
  environmentId: Scalars['Int']['output'];
  incidentId: Scalars['ID']['output'];
  priority: AiIssuesPriority;
  state: AiIssuesIncidentState;
  timestamp: Scalars['EpochMilliseconds']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiIssuesIncidentData = {
  __typename?: 'AiIssuesIncidentData';
  incidents: Array<AiIssuesIIncident>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type AiIssuesIncidentState =
  | 'CLOSED'
  | 'CREATED';

export type AiIssuesIncidentUserActionResponse = {
  __typename?: 'AiIssuesIncidentUserActionResponse';
  accountId: Scalars['Int']['output'];
  error?: Maybe<Scalars['String']['output']>;
  incidentId: Scalars['ID']['output'];
};

export type AiIssuesIssue = {
  __typename?: 'AiIssuesIssue';
  account?: Maybe<AccountReference>;
  accountIds: Array<Scalars['Int']['output']>;
  acknowledgedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  acknowledgedBy?: Maybe<Scalars['String']['output']>;
  acknowledgedByChannel?: Maybe<Scalars['String']['output']>;
  activatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  closedBy?: Maybe<Scalars['String']['output']>;
  closedByChannel?: Maybe<Scalars['String']['output']>;
  conditionFamilyId?: Maybe<Array<Scalars['Int']['output']>>;
  conditionName?: Maybe<Array<Scalars['String']['output']>>;
  conditionProduct?: Maybe<Array<Scalars['String']['output']>>;
  correlatedBy?: Maybe<Scalars['String']['output']>;
  correlationRuleDescriptions?: Maybe<Array<Scalars['String']['output']>>;
  correlationRuleIds?: Maybe<Array<Scalars['Int']['output']>>;
  correlationRuleNames?: Maybe<Array<Scalars['String']['output']>>;
  correlationStatus?: Maybe<AiIssuesCorrelationStatus>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  dataMlModules?: Maybe<Array<AiIssuesKeyValues>>;
  deepLinkUrl?: Maybe<Array<Scalars['String']['output']>>;
  description: Array<Scalars['String']['output']>;
  entityGuids?: Maybe<Array<Scalars['EntityGuid']['output']>>;
  entityNames?: Maybe<Array<Scalars['String']['output']>>;
  entityTypes?: Maybe<Array<Scalars['String']['output']>>;
  /** @deprecated Use account */
  environmentId: Scalars['Int']['output'];
  eventType: Scalars['String']['output'];
  incidentIds?: Maybe<Array<Scalars['String']['output']>>;
  isCorrelated: Scalars['Boolean']['output'];
  isIdle: Scalars['Boolean']['output'];
  issueId: Scalars['ID']['output'];
  mergeReason?: Maybe<Scalars['String']['output']>;
  mutingState?: Maybe<AiIssuesIssueMutingState>;
  origins: Array<Scalars['String']['output']>;
  parentMergeId?: Maybe<Scalars['String']['output']>;
  policyIds?: Maybe<Array<Scalars['Int']['output']>>;
  policyName?: Maybe<Array<Scalars['String']['output']>>;
  priority: AiIssuesPriority;
  realIssueCount?: Maybe<Scalars['Int']['output']>;
  sources: Array<Scalars['String']['output']>;
  state: AiIssuesIssueState;
  title: Array<Scalars['String']['output']>;
  totalIncidents: Scalars['Int']['output'];
  unAcknowledgedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  unAcknowledgedBy?: Maybe<Scalars['String']['output']>;
  unAcknowledgedByChannel?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochMilliseconds']['output'];
  wildcard?: Maybe<Array<Scalars['String']['output']>>;
};

export type AiIssuesIssueData = {
  __typename?: 'AiIssuesIssueData';
  issues: Array<AiIssuesIssue>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type AiIssuesIssueMutingState =
  | 'FULLY_MUTED'
  | 'NOT_MUTED'
  | 'PARTIALLY_MUTED';

export type AiIssuesIssueState =
  | 'ACTIVATED'
  | 'CLOSED'
  | 'CREATED'
  | 'DEACTIVATED';

export type AiIssuesIssueUserAction =
  | 'ACK'
  | 'RESOLVE'
  | 'UNACK';

export type AiIssuesIssueUserActionResponse = {
  __typename?: 'AiIssuesIssueUserActionResponse';
  error?: Maybe<Scalars['String']['output']>;
  result?: Maybe<AiIssuesIssueUserActionResult>;
};

export type AiIssuesIssueUserActionResult = {
  __typename?: 'AiIssuesIssueUserActionResult';
  accountId: Scalars['Int']['output'];
  action: AiIssuesIssueUserAction;
  issueId: Scalars['ID']['output'];
};

export type AiIssuesKeyValue = {
  __typename?: 'AiIssuesKeyValue';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AiIssuesKeyValues = {
  __typename?: 'AiIssuesKeyValues';
  key: Scalars['String']['output'];
  value: Array<Scalars['String']['output']>;
};

export type AiIssuesNewRelicIncident = AiIssuesIIncident & {
  __typename?: 'AiIssuesNewRelicIncident';
  account?: Maybe<AccountReference>;
  accountIds: Scalars['String']['output'];
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  conditionFamilyId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  description: Array<Scalars['String']['output']>;
  entityGuids?: Maybe<Scalars['EntityGuid']['output']>;
  entityNames?: Maybe<Scalars['String']['output']>;
  entityTypes?: Maybe<Scalars['String']['output']>;
  /** @deprecated Use account */
  environmentId: Scalars['Int']['output'];
  incidentId: Scalars['ID']['output'];
  policyIds?: Maybe<Scalars['String']['output']>;
  priority: AiIssuesPriority;
  state: AiIssuesIncidentState;
  timestamp: Scalars['EpochMilliseconds']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiIssuesPriority =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type AiIssuesRestIncident = AiIssuesIIncident & {
  __typename?: 'AiIssuesRestIncident';
  account?: Maybe<AccountReference>;
  accountIds: Scalars['String']['output'];
  aggregationTags?: Maybe<Array<AiIssuesKeyValue>>;
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  description: Array<Scalars['String']['output']>;
  entityGuids?: Maybe<Scalars['EntityGuid']['output']>;
  entityNames?: Maybe<Scalars['String']['output']>;
  entityTypes?: Maybe<Scalars['String']['output']>;
  /** @deprecated Use account */
  environmentId: Scalars['Int']['output'];
  incidentId: Scalars['ID']['output'];
  priority: AiIssuesPriority;
  state: AiIssuesIncidentState;
  timestamp: Scalars['EpochMilliseconds']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiNotificationsAccountStitchedFields = {
  __typename?: 'AiNotificationsAccountStitchedFields';
  channelSchema?: Maybe<AiNotificationsChannelSchemaResult>;
  channelSuggestions?: Maybe<AiNotificationsSuggestionsResponse>;
  channels?: Maybe<AiNotificationsChannelsResponse>;
  destinationSuggestions?: Maybe<AiNotificationsSuggestionsResponse>;
  destinations?: Maybe<AiNotificationsDestinationsResponse>;
  duplicateDestinations?: Maybe<AiNotificationsDuplicateDestinationsResponse>;
  oAuthUrl?: Maybe<AiNotificationsOAuthUrlResponse>;
  /** @deprecated API is being deprecated in favor of channelSuggestions API */
  suggestions?: Maybe<AiNotificationsSuggestionsResponse>;
  variables?: Maybe<AiNotificationsVariableResult>;
};


export type AiNotificationsAccountStitchedFieldsChannelSchemaArgs = {
  channelType: AiNotificationsChannelType;
  constraints?: InputMaybe<Array<AiNotificationsConstraint>>;
  destinationId: Scalars['ID']['input'];
  product?: InputMaybe<AiNotificationsProduct>;
};


export type AiNotificationsAccountStitchedFieldsChannelSuggestionsArgs = {
  channelType: AiNotificationsChannelType;
  constraints?: InputMaybe<Array<AiNotificationsConstraint>>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  destinationId: Scalars['ID']['input'];
  filter?: InputMaybe<AiNotificationsSuggestionFilter>;
  key: Scalars['String']['input'];
};


export type AiNotificationsAccountStitchedFieldsChannelsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AiNotificationsChannelFilter>;
  sorter?: InputMaybe<AiNotificationsChannelSorter>;
};


export type AiNotificationsAccountStitchedFieldsDestinationSuggestionsArgs = {
  constraints?: InputMaybe<Array<AiNotificationsConstraint>>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  destinationType: AiNotificationsDestinationType;
  filter?: InputMaybe<AiNotificationsSuggestionFilter>;
  key: Scalars['String']['input'];
};


export type AiNotificationsAccountStitchedFieldsDestinationsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AiNotificationsDestinationFilter>;
  sorter?: InputMaybe<AiNotificationsDestinationSorter>;
};


export type AiNotificationsAccountStitchedFieldsDuplicateDestinationsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type AiNotificationsAccountStitchedFieldsOAuthUrlArgs = {
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
  type: AiNotificationsDestinationType;
};


export type AiNotificationsAccountStitchedFieldsSuggestionsArgs = {
  channelType: AiNotificationsChannelType;
  constraints?: InputMaybe<Array<AiNotificationsConstraint>>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  destinationId: Scalars['ID']['input'];
  filter?: InputMaybe<AiNotificationsSuggestionFilter>;
  key: Scalars['String']['input'];
};


export type AiNotificationsAccountStitchedFieldsVariablesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AiNotificationsVariableFilter>;
  sorter?: InputMaybe<AiNotificationsVariableSorter>;
};

export type AiNotificationsAuth = AiNotificationsBasicAuth | AiNotificationsOAuth2Auth | AiNotificationsTokenAuth;

export type AiNotificationsAuthType =
  | 'BASIC'
  | 'OAUTH2'
  | 'TOKEN';

export type AiNotificationsBasicAuth = {
  __typename?: 'AiNotificationsBasicAuth';
  authType: AiNotificationsAuthType;
  user: Scalars['String']['output'];
};

export type AiNotificationsBasicAuthInput = {
  password: Scalars['SecureValue']['input'];
  user: Scalars['String']['input'];
};

export type AiNotificationsChannel = {
  __typename?: 'AiNotificationsChannel';
  accountId: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  createdAt: Scalars['DateTime']['output'];
  destinationId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  product: AiNotificationsProduct;
  properties: Array<AiNotificationsProperty>;
  status: AiNotificationsChannelStatus;
  type: AiNotificationsChannelType;
  updatedAt: Scalars['DateTime']['output'];
  updatedBy: Scalars['Int']['output'];
};

export type AiNotificationsChannelFields =
  | 'ACTIVE'
  | 'CREATED_AT'
  | 'DEFAULT'
  | 'DESTINATION_ID'
  | 'NAME'
  | 'PRODUCT'
  | 'STATUS'
  | 'TYPE'
  | 'UPDATED_AT'
  | 'UPDATED_BY';

export type AiNotificationsChannelFilter = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  destinationId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
  product?: InputMaybe<AiNotificationsProduct>;
  property?: InputMaybe<AiNotificationsPropertyFilter>;
  statuses?: InputMaybe<Array<AiNotificationsChannelStatus>>;
  type?: InputMaybe<AiNotificationsChannelType>;
};

export type AiNotificationsChannelInput = {
  destinationId: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  product: AiNotificationsProduct;
  properties: Array<AiNotificationsPropertyInput>;
  type: AiNotificationsChannelType;
};

export type AiNotificationsChannelResponse = {
  __typename?: 'AiNotificationsChannelResponse';
  channel?: Maybe<AiNotificationsChannel>;
  error?: Maybe<AiNotificationsError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsError>;
};

export type AiNotificationsChannelSchemaResult = {
  __typename?: 'AiNotificationsChannelSchemaResult';
  error?: Maybe<AiNotificationsError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsError>;
  result: AiNotificationsResult;
  schema?: Maybe<AiNotificationsSchema>;
};

export type AiNotificationsChannelSorter = {
  direction: AiNotificationsSortOrder;
  field: AiNotificationsChannelFields;
};

export type AiNotificationsChannelStatus =
  | 'CONFIGURATION_ERROR'
  | 'CONFIGURATION_WARNING'
  | 'DEFAULT'
  | 'DRAFT'
  | 'ERROR'
  | 'TESTED'
  | 'THROTTLED'
  | 'UNKNOWN_ERROR';

export type AiNotificationsChannelTestResponse = {
  __typename?: 'AiNotificationsChannelTestResponse';
  details?: Maybe<Scalars['String']['output']>;
  error?: Maybe<AiNotificationsError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsError>;
  evidence?: Maybe<Scalars['String']['output']>;
  result: AiNotificationsResult;
};

export type AiNotificationsChannelType =
  | 'EMAIL'
  | 'EVENT_BRIDGE'
  | 'JIRA_CLASSIC'
  | 'JIRA_NEXTGEN'
  | 'MOBILE_PUSH'
  | 'PAGERDUTY_ACCOUNT_INTEGRATION'
  | 'PAGERDUTY_SERVICE_INTEGRATION'
  | 'SERVICENOW_EVENTS'
  | 'SERVICENOW_INCIDENTS'
  | 'SERVICE_NOW_APP'
  | 'SLACK'
  | 'SLACK_COLLABORATION'
  | 'SLACK_LEGACY'
  | 'WEBHOOK';

export type AiNotificationsChannelUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  properties?: InputMaybe<Array<AiNotificationsPropertyInput>>;
};

export type AiNotificationsChannelsResponse = {
  __typename?: 'AiNotificationsChannelsResponse';
  entities: Array<AiNotificationsChannel>;
  error?: Maybe<AiNotificationsResponseError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsResponseError>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AiNotificationsConstraint = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type AiNotificationsConstraintError = {
  __typename?: 'AiNotificationsConstraintError';
  dependencies: Array<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

export type AiNotificationsConstraintsError = {
  __typename?: 'AiNotificationsConstraintsError';
  constraints: Array<AiNotificationsConstraintError>;
};

export type AiNotificationsCredentialsInput = {
  basic?: InputMaybe<AiNotificationsBasicAuthInput>;
  oauth2?: InputMaybe<AiNotificationsOAuth2AuthInput>;
  token?: InputMaybe<AiNotificationsTokenAuthInput>;
  type: AiNotificationsAuthType;
};

export type AiNotificationsDataValidationError = {
  __typename?: 'AiNotificationsDataValidationError';
  details: Scalars['String']['output'];
  fields: Array<AiNotificationsFieldError>;
};

export type AiNotificationsDeleteResponse = {
  __typename?: 'AiNotificationsDeleteResponse';
  error?: Maybe<AiNotificationsResponseError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsResponseError>;
  ids?: Maybe<Array<Scalars['ID']['output']>>;
};

export type AiNotificationsDestination = {
  __typename?: 'AiNotificationsDestination';
  accountId: Scalars['Int']['output'];
  active: Scalars['Boolean']['output'];
  auth?: Maybe<AiNotificationsAuth>;
  createdAt: Scalars['DateTime']['output'];
  guid: Scalars['EntityGuid']['output'];
  id: Scalars['ID']['output'];
  isUserAuthenticated: Scalars['Boolean']['output'];
  lastSent?: Maybe<Scalars['DateTime']['output']>;
  name: Scalars['String']['output'];
  properties: Array<AiNotificationsProperty>;
  status: AiNotificationsDestinationStatus;
  type: AiNotificationsDestinationType;
  updatedAt: Scalars['DateTime']['output'];
  updatedBy: Scalars['Int']['output'];
};

export type AiNotificationsDestinationFields =
  | 'ACTIVE'
  | 'CREATED_AT'
  | 'DEFAULT'
  | 'LAST_SENT'
  | 'NAME'
  | 'STATUS'
  | 'TYPE'
  | 'UPDATED_AT'
  | 'UPDATED_BY';

export type AiNotificationsDestinationFilter = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  authType?: InputMaybe<AiNotificationsAuthType>;
  id?: InputMaybe<Scalars['ID']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
  property?: InputMaybe<AiNotificationsPropertyFilter>;
  type?: InputMaybe<AiNotificationsDestinationType>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AiNotificationsDestinationInput = {
  auth?: InputMaybe<AiNotificationsCredentialsInput>;
  name: Scalars['String']['input'];
  properties: Array<AiNotificationsPropertyInput>;
  type: AiNotificationsDestinationType;
};

export type AiNotificationsDestinationMergeResult = {
  __typename?: 'AiNotificationsDestinationMergeResult';
  remainingDestinationId: Scalars['ID']['output'];
  removedDestinationId: Scalars['ID']['output'];
  updatedChannelIds: Array<Scalars['ID']['output']>;
};

export type AiNotificationsDestinationResponse = {
  __typename?: 'AiNotificationsDestinationResponse';
  destination?: Maybe<AiNotificationsDestination>;
  error?: Maybe<AiNotificationsError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsError>;
};

export type AiNotificationsDestinationSorter = {
  direction: AiNotificationsSortOrder;
  field: AiNotificationsDestinationFields;
};

export type AiNotificationsDestinationStatus =
  | 'AUTHENTICATION_ERROR'
  | 'AUTHORIZATION_ERROR'
  | 'AUTHORIZATION_WARNING'
  | 'AUTH_ERROR'
  | 'CONFIGURATION_ERROR'
  | 'DEFAULT'
  | 'DRAFT'
  | 'ERROR'
  | 'EXTERNAL_SERVER_ERROR'
  | 'TEMPORARY_WARNING'
  | 'TESTED'
  | 'THROTTLED'
  | 'THROTTLING_WARNING'
  | 'TIMEOUT_ERROR'
  | 'UNINSTALLED'
  | 'UNKNOWN_ERROR';

export type AiNotificationsDestinationTestResponse = {
  __typename?: 'AiNotificationsDestinationTestResponse';
  details?: Maybe<Scalars['String']['output']>;
  error?: Maybe<AiNotificationsError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsError>;
  result: AiNotificationsResult;
};

export type AiNotificationsDestinationType =
  | 'EMAIL'
  | 'EVENT_BRIDGE'
  | 'JIRA'
  | 'MOBILE_PUSH'
  | 'PAGERDUTY_ACCOUNT_INTEGRATION'
  | 'PAGERDUTY_SERVICE_INTEGRATION'
  | 'SERVICE_NOW'
  | 'SERVICE_NOW_APP'
  | 'SLACK'
  | 'SLACK_COLLABORATION'
  | 'SLACK_LEGACY'
  | 'WEBHOOK';

export type AiNotificationsDestinationUpdate = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  auth?: InputMaybe<AiNotificationsCredentialsInput>;
  disableAuth?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  properties?: InputMaybe<Array<AiNotificationsPropertyInput>>;
};

export type AiNotificationsDestinationsResponse = {
  __typename?: 'AiNotificationsDestinationsResponse';
  entities: Array<AiNotificationsDestination>;
  error?: Maybe<AiNotificationsResponseError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsResponseError>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AiNotificationsDuplicateDestinations = {
  __typename?: 'AiNotificationsDuplicateDestinations';
  destinationIds: Array<Scalars['ID']['output']>;
  destinationType: AiNotificationsDestinationType;
};

export type AiNotificationsDuplicateDestinationsResponse = {
  __typename?: 'AiNotificationsDuplicateDestinationsResponse';
  duplicateGroups: Array<AiNotificationsDuplicateDestinations>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type AiNotificationsDynamicVariable = {
  exampleValue?: InputMaybe<AiNotificationsExampleValue>;
  name: Scalars['String']['input'];
};

export type AiNotificationsError = AiNotificationsConstraintsError | AiNotificationsDataValidationError | AiNotificationsResponseError | AiNotificationsSuggestionError;

export type AiNotificationsErrorType =
  | 'CONNECTION_ERROR'
  | 'ENTITY_IN_USE'
  | 'EXTERNAL_SERVER_ERROR'
  | 'FEATURE_FLAG_DISABLED'
  | 'INVALID_CHANNEL_NAME'
  | 'INVALID_CREDENTIALS'
  | 'INVALID_KEY'
  | 'INVALID_PARAMETER'
  | 'LIMIT_REACHED'
  | 'MISSING_CAPABILITIES'
  | 'MISSING_CONSTRAINTS'
  | 'MISSING_PARAMETERS'
  | 'OAUTH_NOT_SUPPORTED'
  | 'SUGGESTIONS_UNAVAILABLE'
  | 'TIMEOUT_ERROR'
  | 'TYPE_EXAMPLE_MISMATCH'
  | 'UNAUTHORIZED_ACCOUNT'
  | 'UNEXPECTED_PARAMETER'
  | 'UNINSTALLED_DESTINATION'
  | 'UNKNOWN_ERROR';

export type AiNotificationsExampleValue = {
  example: Scalars['String']['input'];
  type: AiNotificationsVariableType;
};

export type AiNotificationsFieldError = {
  __typename?: 'AiNotificationsFieldError';
  field: Scalars['String']['output'];
  message: Scalars['String']['output'];
};

export type AiNotificationsMergeDestinationsResponse = {
  __typename?: 'AiNotificationsMergeDestinationsResponse';
  merges?: Maybe<Array<AiNotificationsDestinationMergeResult>>;
};

export type AiNotificationsMergeGroup = {
  destinationIds: Array<Scalars['ID']['input']>;
};

export type AiNotificationsOAuth2Auth = {
  __typename?: 'AiNotificationsOAuth2Auth';
  accessTokenUrl: Scalars['String']['output'];
  authType: AiNotificationsAuthType;
  authorizationUrl: Scalars['String']['output'];
  clientId: Scalars['String']['output'];
  prefix: Scalars['String']['output'];
  refreshInterval?: Maybe<Scalars['Int']['output']>;
  refreshable: Scalars['Boolean']['output'];
  scope?: Maybe<Scalars['String']['output']>;
};

export type AiNotificationsOAuth2AuthInput = {
  accessTokenUrl: Scalars['String']['input'];
  authorizationUrl: Scalars['String']['input'];
  clientId: Scalars['String']['input'];
  clientSecret: Scalars['SecureValue']['input'];
  prefix?: InputMaybe<Scalars['String']['input']>;
  refreshInterval?: InputMaybe<Scalars['Int']['input']>;
  refreshToken?: InputMaybe<Scalars['SecureValue']['input']>;
  refreshable: Scalars['Boolean']['input'];
  scope?: InputMaybe<Scalars['String']['input']>;
  token: Scalars['SecureValue']['input'];
};

export type AiNotificationsOAuthUrlResponse = {
  __typename?: 'AiNotificationsOAuthUrlResponse';
  error?: Maybe<AiNotificationsResponseError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsResponseError>;
  transactionId?: Maybe<Scalars['ID']['output']>;
  url: Scalars['String']['output'];
};

export type AiNotificationsProduct =
  | 'ALERTS'
  | 'APM'
  | 'CHANGE_TRACKING'
  | 'CSSP'
  | 'DISCUSSIONS'
  | 'ERROR_TRACKING'
  | 'IINT'
  | 'NTFC'
  | 'PD'
  | 'SECURITY'
  | 'SHARING';

export type AiNotificationsProperty = {
  __typename?: 'AiNotificationsProperty';
  displayValue?: Maybe<Scalars['String']['output']>;
  key: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  value: Scalars['String']['output'];
};

export type AiNotificationsPropertyFilter = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type AiNotificationsPropertyInput = {
  displayValue?: InputMaybe<Scalars['String']['input']>;
  key: Scalars['String']['input'];
  label?: InputMaybe<Scalars['String']['input']>;
  value: Scalars['String']['input'];
};

export type AiNotificationsResponseError = {
  __typename?: 'AiNotificationsResponseError';
  description: Scalars['String']['output'];
  details: Scalars['String']['output'];
  type: AiNotificationsErrorType;
};

export type AiNotificationsResult =
  | 'FAIL'
  | 'SUCCESS';

export type AiNotificationsSchema = {
  __typename?: 'AiNotificationsSchema';
  fields: Array<AiNotificationsSchemaField>;
};

export type AiNotificationsSchemaField = {
  __typename?: 'AiNotificationsSchemaField';
  component: AiNotificationsUiComponent;
  key: Scalars['String']['output'];
  label: Scalars['String']['output'];
  mandatory: Scalars['Boolean']['output'];
};

export type AiNotificationsSelectComponentOptions = {
  __typename?: 'AiNotificationsSelectComponentOptions';
  creatable: Scalars['Boolean']['output'];
  dependentOn: Array<Scalars['String']['output']>;
  filteredBy: Array<Scalars['String']['output']>;
  label: Scalars['Boolean']['output'];
  multiple: Scalars['Boolean']['output'];
  searchable: Scalars['Boolean']['output'];
  suggestions: Array<AiNotificationsSuggestion>;
};

export type AiNotificationsSortOrder =
  | 'ASC'
  | 'DESC';

export type AiNotificationsSuggestion = {
  __typename?: 'AiNotificationsSuggestion';
  displayValue: Scalars['String']['output'];
  icon?: Maybe<Scalars['String']['output']>;
  value: Scalars['String']['output'];
};

export type AiNotificationsSuggestionError = {
  __typename?: 'AiNotificationsSuggestionError';
  /** @deprecated this entire object will be deprecated, please refrain from using SuggestionError */
  description: Scalars['String']['output'];
  /** @deprecated this entire object will be deprecated, please refrain from using SuggestionError */
  details: Scalars['String']['output'];
  /** @deprecated this entire object will be deprecated, please refrain from using SuggestionError */
  type: AiNotificationsErrorType;
};

export type AiNotificationsSuggestionFilter = {
  type: AiNotificationsSuggestionFilterType;
  value: Scalars['String']['input'];
};

export type AiNotificationsSuggestionFilterType =
  | 'CONTAINS'
  | 'STARTSWITH';

export type AiNotificationsSuggestionsResponse = {
  __typename?: 'AiNotificationsSuggestionsResponse';
  entities: Array<AiNotificationsSuggestion>;
  error?: Maybe<AiNotificationsError>;
  /** @deprecated Errors is being deprecated in favor of a singular error field */
  errors: Array<AiNotificationsSuggestionError>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  result: AiNotificationsResult;
  totalCount: Scalars['Int']['output'];
};

export type AiNotificationsTokenAuth = {
  __typename?: 'AiNotificationsTokenAuth';
  authType: AiNotificationsAuthType;
  prefix: Scalars['String']['output'];
};

export type AiNotificationsTokenAuthInput = {
  prefix?: InputMaybe<Scalars['String']['input']>;
  token: Scalars['SecureValue']['input'];
};

export type AiNotificationsUiComponent = {
  __typename?: 'AiNotificationsUiComponent';
  allowTemplateVariables: Scalars['Boolean']['output'];
  dataValidation: AiNotificationsUiComponentValidation;
  defaultValue?: Maybe<AiNotificationsSuggestion>;
  selectOptions?: Maybe<AiNotificationsSelectComponentOptions>;
  type: AiNotificationsUiComponentType;
  visibleByDefault: Scalars['Boolean']['output'];
};

export type AiNotificationsUiComponentType =
  | 'BUTTON'
  | 'DICTIONARY_WITH_MASK'
  | 'PAYLOAD'
  | 'SELECT'
  | 'TEXT_AREA'
  | 'TEXT_FIELD'
  | 'TOGGLE';

export type AiNotificationsUiComponentValidation =
  | 'DATE'
  | 'DATETIME'
  | 'EMAIL'
  | 'JSON'
  | 'NONE'
  | 'NUMBER'
  | 'URL';

export type AiNotificationsVariable = {
  __typename?: 'AiNotificationsVariable';
  active: Scalars['Boolean']['output'];
  category: AiNotificationsVariableCategory;
  createdAt: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  example: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  key: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  product: AiNotificationsProduct;
  type: AiNotificationsVariableType;
  updatedAt: Scalars['DateTime']['output'];
  updatedBy: Scalars['Int']['output'];
};

export type AiNotificationsVariableCategory =
  | 'CONDITION'
  | 'ENTITIES'
  | 'INCIDENT'
  | 'ISSUE'
  | 'OTHER'
  | 'POLICY'
  | 'TAGS'
  | 'WORKFLOW';

export type AiNotificationsVariableFields =
  | 'ACTIVE'
  | 'DEFAULT'
  | 'DESCRIPTION'
  | 'EXAMPLE'
  | 'KEY'
  | 'LABEL'
  | 'NAME'
  | 'PRODUCT'
  | 'TYPE';

export type AiNotificationsVariableFilter = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  key?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  product?: InputMaybe<AiNotificationsProduct>;
};

export type AiNotificationsVariableResult = {
  __typename?: 'AiNotificationsVariableResult';
  entities: Array<AiNotificationsVariable>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AiNotificationsVariableSorter = {
  direction: AiNotificationsSortOrder;
  field: AiNotificationsVariableFields;
};

export type AiNotificationsVariableType =
  | 'BOOLEAN'
  | 'LIST'
  | 'NUMBER'
  | 'OBJECT'
  | 'STRING';

export type AiOpsAccountStitchedFields = {
  __typename?: 'AiOpsAccountStitchedFields';
  analysis?: Maybe<AiOpsAnalysisNamespacedFields>;
};

export type AiOpsActorStitchedFields = {
  __typename?: 'AiOpsActorStitchedFields';
  proactiveDetection?: Maybe<AiOpsProactiveDetectionNamespacedFields>;
  slack?: Maybe<AiOpsSlackNamespacedFields>;
};

export type AiOpsAnalysisNamespacedFields = {
  __typename?: 'AiOpsAnalysisNamespacedFields';
  anomaly: AiOpsAnomalyNamespacedFields;
  incident: AiOpsIncidentNamespacedFields;
};


export type AiOpsAnalysisNamespacedFieldsAnomalyArgs = {
  id: Scalars['ID']['input'];
};


export type AiOpsAnalysisNamespacedFieldsIncidentArgs = {
  id: Scalars['ID']['input'];
};

export type AiOpsAnomalyCloseResult = {
  __typename?: 'AiOpsAnomalyCloseResult';
  id: Scalars['ID']['output'];
};

export type AiOpsAnomalyNamespacedFields = {
  __typename?: 'AiOpsAnomalyNamespacedFields';
  comments: AiOpsCommentsResult;
};

export type AiOpsComment = {
  __typename?: 'AiOpsComment';
  createdAt: Scalars['EpochMilliseconds']['output'];
  id: Scalars['ID']['output'];
  text: Scalars['String']['output'];
  user?: Maybe<UserReference>;
  userId: Scalars['ID']['output'];
};

export type AiOpsCommentDeleteResult = {
  __typename?: 'AiOpsCommentDeleteResult';
  id: Scalars['ID']['output'];
};

export type AiOpsCommentsResult = {
  __typename?: 'AiOpsCommentsResult';
  results: Array<AiOpsComment>;
};

export type AiOpsDestinationType =
  | 'INCIDENT_INTELLIGENCE'
  | 'SLACK'
  | 'WEBHOOK';

export type AiOpsEventsQueryContext =
  | 'AI_OPS'
  | 'GLOBAL';

export type AiOpsFeedbackLabel =
  | 'ANOMALY'
  | 'NORMAL';

export type AiOpsFeedbackPeriod = {
  __typename?: 'AiOpsFeedbackPeriod';
  anomalyId?: Maybe<Scalars['String']['output']>;
  label: AiOpsFeedbackLabel;
  timeWindow: TimeWindow;
  userId?: Maybe<Scalars['Int']['output']>;
};

export type AiOpsIncidentIntelligenceDestination = {
  __typename?: 'AiOpsIncidentIntelligenceDestination';
  environmentId: Scalars['Int']['output'];
};

export type AiOpsIncidentIntelligenceDestinationInput = {
  environmentId: Scalars['Int']['input'];
};

export type AiOpsIncidentNamespacedFields = {
  __typename?: 'AiOpsIncidentNamespacedFields';
  comments: AiOpsCommentsResult;
};

export type AiOpsMonitoredSignal = {
  __typename?: 'AiOpsMonitoredSignal';
  enabled: Scalars['Boolean']['output'];
  signalType: AiOpsSignalType;
};

export type AiOpsMonitoredSignalInput = {
  enabled: Scalars['Boolean']['input'];
  signalType: AiOpsSignalType;
};

export type AiOpsOutcome =
  | 'FAILURE'
  | 'SUCCESS';

export type AiOpsProactiveDetection = {
  __typename?: 'AiOpsProactiveDetection';
  configurations?: Maybe<AiOpsProactiveDetectionConfigSearchResults>;
  events?: Maybe<AiOpsProactiveDetectionEventsResult>;
};


export type AiOpsProactiveDetectionEventsArgs = {
  query: AiOpsProactiveDetectionEntityEventsQuery;
};

export type AiOpsProactiveDetectionActorEventsQuery = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  categories?: InputMaybe<Array<Scalars['String']['input']>>;
  configurationId?: InputMaybe<Scalars['ID']['input']>;
  configurationTypes?: InputMaybe<Array<AiOpsProactiveDetectionEventConfigurationType>>;
  context?: InputMaybe<AiOpsEventsQueryContext>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  endTime: Scalars['EpochMilliseconds']['input'];
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  filterMonitoringStatus?: InputMaybe<Array<AiOpsProactiveDetectionEventMonitoringStatus>>;
  filterTypes?: InputMaybe<Array<AiOpsProactiveDetectionEventType>>;
  signalIds?: InputMaybe<Array<Scalars['String']['input']>>;
  signalTypes?: InputMaybe<Array<AiOpsSignalType>>;
  startTime: Scalars['EpochMilliseconds']['input'];
  textSearch?: InputMaybe<Scalars['String']['input']>;
};

export type AiOpsProactiveDetectionConfig = {
  __typename?: 'AiOpsProactiveDetectionConfig';
  account?: Maybe<AccountReference>;
  entities: Array<EntityOutline>;
  entityCount: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  incidentIntelligenceDestinations: Array<AiOpsIncidentIntelligenceDestination>;
  lastUpdatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  monitoredSignals?: Maybe<Array<AiOpsMonitoredSignal>>;
  name?: Maybe<Scalars['String']['output']>;
  slackChannels?: Maybe<Array<AiOpsSlackChannel>>;
  webhooks?: Maybe<Array<AiOpsWebhook>>;
};

export type AiOpsProactiveDetectionConfigInput = {
  accountId: Scalars['Int']['input'];
  entityGuids: Array<Scalars['EntityGuid']['input']>;
  incidentIntelligenceDestinations?: InputMaybe<Array<AiOpsIncidentIntelligenceDestinationInput>>;
  monitoredSignals?: InputMaybe<Array<AiOpsMonitoredSignalInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  slackChannels?: InputMaybe<Array<AiOpsSlackChannelInput>>;
  webhooks?: InputMaybe<Array<AiOpsWebhookInput>>;
};

export type AiOpsProactiveDetectionConfigMutationResult = {
  __typename?: 'AiOpsProactiveDetectionConfigMutationResult';
  config?: Maybe<AiOpsProactiveDetectionConfig>;
  validationErrorMessages?: Maybe<Array<AiOpsValidationErrorMessage>>;
};

export type AiOpsProactiveDetectionConfigMutationResults = {
  __typename?: 'AiOpsProactiveDetectionConfigMutationResults';
  configs: Array<AiOpsProactiveDetectionConfig>;
  validationErrorMessages?: Maybe<Array<AiOpsValidationErrorMessage>>;
};

export type AiOpsProactiveDetectionConfigOutline = {
  __typename?: 'AiOpsProactiveDetectionConfigOutline';
  account?: Maybe<AccountReference>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type AiOpsProactiveDetectionConfigResult = {
  __typename?: 'AiOpsProactiveDetectionConfigResult';
  result?: Maybe<AiOpsProactiveDetectionConfig>;
};

export type AiOpsProactiveDetectionConfigSearchResults = {
  __typename?: 'AiOpsProactiveDetectionConfigSearchResults';
  count: Scalars['Int']['output'];
  results: Array<AiOpsProactiveDetectionConfig>;
};

export type AiOpsProactiveDetectionConfigsQuery = {
  destinationTypes?: InputMaybe<Array<AiOpsDestinationType>>;
  environmentId?: InputMaybe<Scalars['Int']['input']>;
};

export type AiOpsProactiveDetectionEntityEventsQuery = {
  context?: InputMaybe<AiOpsEventsQueryContext>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  endTime: Scalars['EpochMilliseconds']['input'];
  filterTypes?: InputMaybe<Array<AiOpsProactiveDetectionEventType>>;
  startTime: Scalars['EpochMilliseconds']['input'];
};

export type AiOpsProactiveDetectionEvent = {
  __typename?: 'AiOpsProactiveDetectionEvent';
  accountId: Scalars['Int']['output'];
  anomalyId: Scalars['ID']['output'];
  category: Scalars['String']['output'];
  configurationType: AiOpsProactiveDetectionEventConfigurationType;
  configurations: Array<AiOpsProactiveDetectionConfigOutline>;
  description: Scalars['String']['output'];
  endedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  entity?: Maybe<EntityOutline>;
  id: Scalars['ID']['output'];
  monitoringStatus: AiOpsProactiveDetectionEventMonitoringStatus;
  nrql: Scalars['Nrql']['output'];
  signalId: Scalars['String']['output'];
  signalType: AiOpsSignalType;
  startedAt: Scalars['EpochMilliseconds']['output'];
  timestamp: Scalars['EpochMilliseconds']['output'];
  title: Scalars['String']['output'];
  type: AiOpsProactiveDetectionEventType;
};

export type AiOpsProactiveDetectionEventConfigurationType =
  | 'AUTOMATIC'
  | 'CONFIGURATION'
  | 'CUSTOM'
  | 'UNKNOWN';

export type AiOpsProactiveDetectionEventMonitoringStatus =
  | 'MONITORED'
  | 'UNKNOWN'
  | 'UNMONITORED';

export type AiOpsProactiveDetectionEventType =
  | 'ANOMALY_CLOSE'
  | 'ANOMALY_OPEN'
  | 'UNKNOWN';

export type AiOpsProactiveDetectionEventsResult = {
  __typename?: 'AiOpsProactiveDetectionEventsResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<AiOpsProactiveDetectionEvent>;
};

export type AiOpsProactiveDetectionNamespacedFields = {
  __typename?: 'AiOpsProactiveDetectionNamespacedFields';
  config?: Maybe<AiOpsProactiveDetectionConfigResult>;
  configDraft?: Maybe<AiOpsProactiveDetectionConfigResult>;
  configs?: Maybe<AiOpsProactiveDetectionConfigSearchResults>;
  event?: Maybe<AiOpsProactiveDetectionEvent>;
  events?: Maybe<AiOpsProactiveDetectionEventsResult>;
  trainingSessionSearch: AiOpsTrainingSessionSearchResult;
  userMessages?: Maybe<AiOpsUserMessagesResult>;
};


export type AiOpsProactiveDetectionNamespacedFieldsConfigArgs = {
  id: Scalars['ID']['input'];
};


export type AiOpsProactiveDetectionNamespacedFieldsConfigsArgs = {
  query?: InputMaybe<AiOpsProactiveDetectionConfigsQuery>;
};


export type AiOpsProactiveDetectionNamespacedFieldsEventArgs = {
  accountId: Scalars['Int']['input'];
  anomalyId: Scalars['ID']['input'];
};


export type AiOpsProactiveDetectionNamespacedFieldsEventsArgs = {
  query: AiOpsProactiveDetectionActorEventsQuery;
};


export type AiOpsProactiveDetectionNamespacedFieldsTrainingSessionSearchArgs = {
  anomalyId?: InputMaybe<Scalars['String']['input']>;
  anomalyType?: InputMaybe<Scalars['String']['input']>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  guid: Scalars['EntityGuid']['input'];
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type AiOpsSignalType =
  | 'APM_APPLICATION_ERRORCOUNT'
  | 'APM_APPLICATION_RESPONSETIMEMS'
  | 'APM_APPLICATION_THROUGHPUT'
  | 'BROWSER_APPLICATION_ERRORS'
  | 'BROWSER_APPLICATION_FIRSTINPUTDELAY75PERCENTILEMS'
  | 'BROWSER_APPLICATION_LARGESTCONTENTFULPAINT75PERCENTILES'
  | 'BROWSER_APPLICATION_THROUGHPUTPPM'
  | 'ERROR_RATE'
  | 'INFRA_AWSEBSVOLUME_AVERAGEWRITETIMEMS'
  | 'INFRA_CONTAINER_CPUUSAGE'
  | 'INFRA_CONTAINER_CPUUTILIZATION'
  | 'INFRA_CONTAINER_MEMORYUSAGE'
  | 'INFRA_CONTAINER_STORAGEUSAGE'
  | 'INFRA_HOST_NETWORKTRAFFIC'
  | 'INFRA_REDISINSTANCE_CONNECTEDCLIENTS'
  | 'INFRA_REDISINSTANCE_KEYSPACEMISSESPERSECOND'
  | 'MOBILE_APPLICATION_HTTPERRORSANDNETWORKFAILURES'
  | 'MOBILE_APPLICATION_HTTPRESPONSETIME95S'
  | 'MOBILE_APPLICATION_REQUESTSPERMINUTE'
  | 'NRQL'
  | 'RESPONSE_TIME_NON_WEB'
  | 'RESPONSE_TIME_WEB'
  | 'SYNTH_MONITOR_FAILURES'
  | 'SYNTH_MONITOR_MEDIANDURATIONS'
  | 'THROUGHPUT_NON_WEB'
  | 'THROUGHPUT_WEB'
  | 'UNKNOWN';

export type AiOpsSlackChannel = {
  __typename?: 'AiOpsSlackChannel';
  channelId: Scalars['ID']['output'];
  channelName: Scalars['String']['output'];
  teamId: Scalars['ID']['output'];
  teamName: Scalars['String']['output'];
  timeZone?: Maybe<Scalars['String']['output']>;
  visibility: Scalars['String']['output'];
};

export type AiOpsSlackChannelInput = {
  channelId: Scalars['ID']['input'];
  channelName?: InputMaybe<Scalars['String']['input']>;
  teamId: Scalars['ID']['input'];
  teamName?: InputMaybe<Scalars['String']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
};

export type AiOpsSlackNamespacedFields = {
  __typename?: 'AiOpsSlackNamespacedFields';
  appInstallUrl: Scalars['String']['output'];
};


export type AiOpsSlackNamespacedFieldsAppInstallUrlArgs = {
  accountId: Scalars['Int']['input'];
  redirectUrl: Scalars['String']['input'];
};

export type AiOpsStoreTrainingSessionError = {
  __typename?: 'AiOpsStoreTrainingSessionError';
  message: Scalars['String']['output'];
  type: AiOpsStoreTrainingSessionErrorType;
};

export type AiOpsStoreTrainingSessionErrorType =
  | 'INVALID_INPUT';

export type AiOpsStoreTrainingSessionResult = {
  __typename?: 'AiOpsStoreTrainingSessionResult';
  errors?: Maybe<Array<AiOpsStoreTrainingSessionError>>;
  session?: Maybe<AiOpsTrainingSession>;
};

export type AiOpsTrainingSession = {
  __typename?: 'AiOpsTrainingSession';
  anomalyType: Scalars['String']['output'];
  periods: Array<AiOpsFeedbackPeriod>;
};

export type AiOpsTrainingSessionSearchResult = {
  __typename?: 'AiOpsTrainingSessionSearchResult';
  count: Scalars['Int']['output'];
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<AiOpsTrainingSession>;
};

export type AiOpsUserMessageId =
  | 'WHATS_NEW_03_01_2021';

export type AiOpsUserMessageResult = {
  __typename?: 'AiOpsUserMessageResult';
  outcome?: Maybe<AiOpsOutcome>;
  userMessageId?: Maybe<AiOpsUserMessageId>;
};

export type AiOpsUserMessagesResult = {
  __typename?: 'AiOpsUserMessagesResult';
  notViewed: Array<AiOpsUserMessageId>;
};

export type AiOpsValidationErrorMessage = {
  __typename?: 'AiOpsValidationErrorMessage';
  field: Scalars['String']['output'];
  lineNumber?: Maybe<Scalars['Int']['output']>;
  message: Scalars['String']['output'];
  resource: Scalars['String']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

export type AiOpsWebhook = {
  __typename?: 'AiOpsWebhook';
  customHeaders?: Maybe<Array<AiOpsWebhookCustomHeader>>;
  payloadMetadata?: Maybe<AiOpsWebhookPayloadMetadata>;
  url: Scalars['String']['output'];
};

export type AiOpsWebhookCustomHeader = {
  __typename?: 'AiOpsWebhookCustomHeader';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
  visibility: Scalars['String']['output'];
};

export type AiOpsWebhookCustomHeaderInput = {
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
  visibility: Scalars['String']['input'];
};

export type AiOpsWebhookInput = {
  customHeaders?: InputMaybe<Array<AiOpsWebhookCustomHeaderInput>>;
  payloadMetadata?: InputMaybe<AiOpsWebhookPayloadMetadataInput>;
  url: Scalars['String']['input'];
};

export type AiOpsWebhookPayloadMetadata = {
  __typename?: 'AiOpsWebhookPayloadMetadata';
  template: Scalars['String']['output'];
  templateType?: Maybe<AiOpsWebhookPayloadTemplateType>;
  version: Scalars['String']['output'];
};

export type AiOpsWebhookPayloadMetadataInput = {
  template: Scalars['String']['input'];
  templateType?: InputMaybe<AiOpsWebhookPayloadTemplateType>;
};

export type AiOpsWebhookPayloadTemplateType =
  | 'CUSTOM'
  | 'DEFAULT';

export type AiOpsWebhookPreview = {
  __typename?: 'AiOpsWebhookPreview';
  curl: Scalars['String']['output'];
  payload: Scalars['String']['output'];
};

export type AiOpsWebhookPreviewResult = {
  __typename?: 'AiOpsWebhookPreviewResult';
  preview?: Maybe<AiOpsWebhookPreview>;
  validationErrorMessages: Array<AiOpsValidationErrorMessage>;
};

export type AiOpsWebhookResponse = {
  __typename?: 'AiOpsWebhookResponse';
  body: Scalars['String']['output'];
  code: Scalars['Int']['output'];
  headers: Array<AiOpsWebhookCustomHeader>;
  message: Scalars['String']['output'];
};

export type AiOpsWebhookTestResult = {
  __typename?: 'AiOpsWebhookTestResult';
  response: AiOpsWebhookResponse;
  validationErrorMessages: Array<AiOpsValidationErrorMessage>;
};

export type AiPostmortemAccountStitchedFields = {
  __typename?: 'AiPostmortemAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  postmortem?: Maybe<AiPostmortemPostmortemTemplate>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  postmortems?: Maybe<AiPostmortemPostmortemListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relevantPostmortems?: Maybe<AiPostmortemPostmortemListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relevantPostmortemsByIssues?: Maybe<AiPostmortemPostmortemListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  searchPostmortemsByCreator?: Maybe<AiPostmortemPostmortemListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  searchPostmortemsByEntityName?: Maybe<AiPostmortemPostmortemListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  searchPostmortemsByIssueIds?: Maybe<AiPostmortemPostmortemListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  searchPostmortemsByKeywords?: Maybe<AiPostmortemPostmortemListing>;
};


export type AiPostmortemAccountStitchedFieldsPostmortemArgs = {
  postmortemId: Scalars['ID']['input'];
};


export type AiPostmortemAccountStitchedFieldsPostmortemsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
  sortMethod?: InputMaybe<AiPostmortemPostmortemSortMethod>;
};


export type AiPostmortemAccountStitchedFieldsRelevantPostmortemsArgs = {
  alertConditionIds: Array<Scalars['ID']['input']>;
  alertPolicyIds: Array<Scalars['ID']['input']>;
  entityNames: Array<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
};


export type AiPostmortemAccountStitchedFieldsRelevantPostmortemsByIssuesArgs = {
  issueIds: Array<Scalars['ID']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
};


export type AiPostmortemAccountStitchedFieldsSearchPostmortemsByCreatorArgs = {
  creator: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
};


export type AiPostmortemAccountStitchedFieldsSearchPostmortemsByEntityNameArgs = {
  entityName: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
};


export type AiPostmortemAccountStitchedFieldsSearchPostmortemsByIssueIdsArgs = {
  issueIds: Array<Scalars['ID']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
};


export type AiPostmortemAccountStitchedFieldsSearchPostmortemsByKeywordsArgs = {
  keywords: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  previousCursor?: InputMaybe<Scalars['String']['input']>;
};

export type AiPostmortemChartData = {
  __typename?: 'AiPostmortemChartData';
  /** @deprecated This field is experimental and subject to breaking changes. */
  anomalyChartData: Array<AiPostmortemChartDataEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityChartData: Array<AiPostmortemChartDataEntry>;
};

export type AiPostmortemChartDataEntry = {
  __typename?: 'AiPostmortemChartDataEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  data: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  metadata: Array<AiPostmortemMetadataEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  query: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timeframe?: Maybe<TimeWindow>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexId?: Maybe<Scalars['String']['output']>;
};

export type AiPostmortemChartDataEntryInput = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  data: Array<Scalars['String']['input']>;
  entityName?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
  metadata: Array<AiPostmortemMetadataEntryInput>;
  query: Scalars['String']['input'];
  timeframe?: InputMaybe<TimeWindowInput>;
  title: Scalars['String']['input'];
  type: Scalars['String']['input'];
  vertexId?: InputMaybe<Scalars['String']['input']>;
};

export type AiPostmortemChartDataInput = {
  anomalyChartData: Array<AiPostmortemChartDataEntryInput>;
  entityChartData: Array<AiPostmortemChartDataEntryInput>;
};

export type AiPostmortemEventData = {
  __typename?: 'AiPostmortemEventData';
  /** @deprecated This field is experimental and subject to breaking changes. */
  account: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  action?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  agentUrl?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  alertSeverity?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  alertStatus?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  anomalyId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  associatedIssues: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  category?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  changelog?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  conditionName: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deepLinkUrl: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  label?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  level?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  metadata: Array<AiPostmortemMetadataEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nrql?: Maybe<Scalars['Nrql']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  permalink?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  policyName: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  revision?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  severity?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  source: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  state?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  tag: Array<AiPostmortemMetadataEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  user?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  violationId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  violationUrl?: Maybe<Scalars['String']['output']>;
};

export type AiPostmortemEventDataInput = {
  account: Array<Scalars['String']['input']>;
  action?: InputMaybe<Scalars['String']['input']>;
  agentUrl?: InputMaybe<Scalars['String']['input']>;
  alertSeverity?: InputMaybe<Scalars['String']['input']>;
  alertStatus?: InputMaybe<Scalars['String']['input']>;
  anomalyId?: InputMaybe<Scalars['String']['input']>;
  associatedIssues: Array<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  changelog?: InputMaybe<Scalars['String']['input']>;
  closedAt: Scalars['EpochMilliseconds']['input'];
  conditionName: Array<Scalars['String']['input']>;
  deepLinkUrl: Array<Scalars['String']['input']>;
  description: Array<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['String']['input']>;
  metadata: Array<AiPostmortemMetadataEntryInput>;
  nrql?: InputMaybe<Scalars['Nrql']['input']>;
  openedAt: Scalars['EpochMilliseconds']['input'];
  permalink?: InputMaybe<Scalars['String']['input']>;
  policyName: Array<Scalars['String']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  revision?: InputMaybe<Scalars['String']['input']>;
  severity?: InputMaybe<Scalars['String']['input']>;
  source: Array<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  tag: Array<AiPostmortemMetadataEntryInput>;
  title: Array<Scalars['String']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
  vertexId?: InputMaybe<Scalars['String']['input']>;
  violationId?: InputMaybe<Scalars['String']['input']>;
  violationUrl?: InputMaybe<Scalars['String']['input']>;
};

export type AiPostmortemEventEntry = {
  __typename?: 'AiPostmortemEventEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  chartData?: Maybe<AiPostmortemChartData>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  eventData?: Maybe<AiPostmortemEventData>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  eventType: AiPostmortemEventType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  note: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  updater?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userComments: Array<AiPostmortemUserComment>;
};

export type AiPostmortemEventEntryInput = {
  chartData?: InputMaybe<AiPostmortemChartDataInput>;
  eventData?: InputMaybe<AiPostmortemEventDataInput>;
  eventType: AiPostmortemEventType;
  note: Scalars['String']['input'];
  timestamp: Scalars['EpochMilliseconds']['input'];
  updater?: InputMaybe<Scalars['String']['input']>;
  userComments: Array<AiPostmortemUserCommentInput>;
};

export type AiPostmortemEventEntryList = {
  __typename?: 'AiPostmortemEventEntryList';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entries: Array<AiPostmortemEventEntry>;
};

export type AiPostmortemEventEntryListInput = {
  entries: Array<AiPostmortemEventEntryInput>;
};

export type AiPostmortemEventType =
  | 'ALERT_VIOLATION'
  | 'ANOMALY'
  | 'DEPLOYMENT'
  | 'INCIDENT'
  | 'USER';

export type AiPostmortemImpactLevel =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type AiPostmortemIssueTemplate = {
  __typename?: 'AiPostmortemIssueTemplate';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  closedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  conditionId: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  metadata: Array<AiPostmortemMetadataEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  policyId: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexId: Array<Scalars['String']['output']>;
};

export type AiPostmortemIssueTemplateInput = {
  accountId: Scalars['Int']['input'];
  closedAt: Scalars['EpochMilliseconds']['input'];
  conditionId: Array<Scalars['String']['input']>;
  createdAt: Scalars['EpochMilliseconds']['input'];
  description: Array<Scalars['String']['input']>;
  id: Scalars['String']['input'];
  metadata: Array<AiPostmortemMetadataEntryInput>;
  policyId: Array<Scalars['String']['input']>;
  priority: Scalars['String']['input'];
  state: Scalars['String']['input'];
  title: Array<Scalars['String']['input']>;
  vertexId: Array<Scalars['String']['input']>;
};

export type AiPostmortemMetadataEntry = {
  __typename?: 'AiPostmortemMetadataEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Array<Scalars['String']['output']>;
};

export type AiPostmortemMetadataEntryInput = {
  name: Scalars['String']['input'];
  value: Array<Scalars['String']['input']>;
};

export type AiPostmortemNoteEvent = {
  __typename?: 'AiPostmortemNoteEvent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entry: AiPostmortemNoteOutput;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['EpochMilliseconds']['output'];
};

export type AiPostmortemNoteEventInput = {
  entry: AiPostmortemNoteInput;
  timestamp: Scalars['EpochMilliseconds']['input'];
};

export type AiPostmortemNoteInput = {
  creator: Scalars['String']['input'];
  note: Scalars['String']['input'];
};

export type AiPostmortemNoteOutput = {
  __typename?: 'AiPostmortemNoteOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  note: Scalars['String']['output'];
};

export type AiPostmortemOperationResult = {
  __typename?: 'AiPostmortemOperationResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  result: AiPostmortemResultType;
};

export type AiPostmortemPostmortemBlueprint = {
  actionItems?: InputMaybe<Scalars['String']['input']>;
  alertConditionIds: Array<Scalars['ID']['input']>;
  alertPolicyIds: Array<Scalars['ID']['input']>;
  authors: Array<AiPostmortemUserInput>;
  creator: Scalars['String']['input'];
  entityNames: Array<Scalars['String']['input']>;
  events: AiPostmortemEventEntryListInput;
  impact?: InputMaybe<Scalars['String']['input']>;
  impactLevel: AiPostmortemImpactLevel;
  issueIds: Array<Scalars['ID']['input']>;
  issues: Array<AiPostmortemIssueTemplateInput>;
  latestUpdater: Scalars['String']['input'];
  recovery?: InputMaybe<Scalars['String']['input']>;
  rootCause?: InputMaybe<Scalars['String']['input']>;
  rosters: Array<AiPostmortemUserInput>;
  stats: AiPostmortemEventEntryListInput;
  status: AiPostmortemStatus;
  timeframe?: InputMaybe<TimeWindowInput>;
  title: Scalars['String']['input'];
  userNotes: Array<AiPostmortemNoteEventInput>;
  vertexIds: Array<Scalars['ID']['input']>;
  vertices: Array<AiPostmortemVertexTemplateInput>;
};

export type AiPostmortemPostmortemListing = {
  __typename?: 'AiPostmortemPostmortemListing';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  postmortems: Array<AiPostmortemPostmortemTemplate>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
};

export type AiPostmortemPostmortemSortMethod =
  | 'ID'
  | 'LATEST_CREATED';

export type AiPostmortemPostmortemTemplate = {
  __typename?: 'AiPostmortemPostmortemTemplate';
  /** @deprecated This field is experimental and subject to breaking changes. */
  actionItems?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  alertConditionIds: Array<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  alertPolicyIds: Array<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  authors: Array<AiPostmortemUser>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityNames: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  events: AiPostmortemEventEntryList;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  impact?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  impactLevel: AiPostmortemImpactLevel;
  /** @deprecated This field is experimental and subject to breaking changes. */
  issueIds: Array<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  issues: Array<AiPostmortemIssueTemplate>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestUpdater?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  notes: Array<AiPostmortemNoteEvent>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  recovery?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rootCause?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rosters: Array<AiPostmortemUser>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  stats: AiPostmortemEventEntryList;
  /** @deprecated This field is experimental and subject to breaking changes. */
  status: AiPostmortemStatus;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timeframe?: Maybe<TimeWindow>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexIds: Array<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertices: Array<AiPostmortemVertexTemplate>;
};

export type AiPostmortemResultType =
  | 'FAILURE'
  | 'SUCCESS';

export type AiPostmortemStatus =
  | 'COMPLETED'
  | 'DRAFT'
  | 'ONGOING_INCIDENT'
  | 'UNDER_REVIEW';

export type AiPostmortemUser = {
  __typename?: 'AiPostmortemUser';
  /** @deprecated This field is experimental and subject to breaking changes. */
  user?: Maybe<UserReference>;
};

export type AiPostmortemUserComment = {
  __typename?: 'AiPostmortemUserComment';
  /** @deprecated This field is experimental and subject to breaking changes. */
  comment: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['EpochMilliseconds']['output'];
};

export type AiPostmortemUserCommentInput = {
  comment: Scalars['String']['input'];
  creator?: InputMaybe<Scalars['String']['input']>;
  timestamp: Scalars['EpochMilliseconds']['input'];
};

export type AiPostmortemUserInput = {
  user: Scalars['String']['input'];
};

export type AiPostmortemVertexTemplate = {
  __typename?: 'AiPostmortemVertexTemplate';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  metadata: Array<AiPostmortemMetadataEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
};

export type AiPostmortemVertexTemplateInput = {
  id: Scalars['String']['input'];
  metadata: Array<AiPostmortemMetadataEntryInput>;
  name: Scalars['String']['input'];
};

export type AiProfileAnalysisAccountStitchedFields = {
  __typename?: 'AiProfileAnalysisAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeBreakdown: AiProfileAnalysisAttributeBreakdown;
};


export type AiProfileAnalysisAccountStitchedFieldsAttributeBreakdownArgs = {
  breakdown: AiProfileAnalysisAttributeBreakdownInput;
};

export type AiProfileAnalysisAttributeBreakdown = {
  __typename?: 'AiProfileAnalysisAttributeBreakdown';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes: Array<AiProfileAnalysisAttributeDetails>;
};

export type AiProfileAnalysisAttributeBreakdownInput = {
  dataType: Scalars['String']['input'];
  filter?: InputMaybe<Scalars['Nrql']['input']>;
  timeWindow: TimeWindowInput;
};

export type AiProfileAnalysisAttributeDetails = {
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeName: Scalars['String']['output'];
};

export type AiProfileAnalysisCategoricalAttributeDetails = AiProfileAnalysisAttributeDetails & {
  __typename?: 'AiProfileAnalysisCategoricalAttributeDetails';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  distribution: AiProfileAnalysisCategoricalDistribution;
};

export type AiProfileAnalysisCategoricalDistribution = {
  __typename?: 'AiProfileAnalysisCategoricalDistribution';
  /** @deprecated This field is experimental and subject to breaking changes. */
  bins: Array<AiProfileAnalysisCategoricalDistributionBin>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  missingValueCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  otherValuesCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount: Scalars['Int']['output'];
};

export type AiProfileAnalysisCategoricalDistributionBin = {
  __typename?: 'AiProfileAnalysisCategoricalDistributionBin';
  /** @deprecated This field is experimental and subject to breaking changes. */
  binType: AiProfileAnalysisDistributionBinType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  label: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  observedCount: Scalars['Int']['output'];
};

export type AiProfileAnalysisDistributionBinType =
  | 'MISSING_VALUES'
  | 'NUMERIC_RANGE'
  | 'OTHER_VALUES'
  | 'VALUE';

export type AiProfileAnalysisNumericAttributeDetails = AiProfileAnalysisAttributeDetails & {
  __typename?: 'AiProfileAnalysisNumericAttributeDetails';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  distribution: AiProfileAnalysisNumericDistribution;
  /** @deprecated This field is experimental and subject to breaking changes. */
  summaryStats: AiProfileAnalysisNumericSummaryStatistics;
};

export type AiProfileAnalysisNumericDistribution = {
  __typename?: 'AiProfileAnalysisNumericDistribution';
  /** @deprecated This field is experimental and subject to breaking changes. */
  bins: Array<AiProfileAnalysisNumericDistributionBin>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  max: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  min: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  missingValueCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount: Scalars['Int']['output'];
};

export type AiProfileAnalysisNumericDistributionBin = {
  __typename?: 'AiProfileAnalysisNumericDistributionBin';
  /** @deprecated This field is experimental and subject to breaking changes. */
  binType: AiProfileAnalysisDistributionBinType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  label: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  lowerBound?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  observedCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  upperBound?: Maybe<Scalars['Float']['output']>;
};

export type AiProfileAnalysisNumericSummaryStatistics = {
  __typename?: 'AiProfileAnalysisNumericSummaryStatistics';
  /** @deprecated This field is experimental and subject to breaking changes. */
  average: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  max: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  min: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  p25: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  p50: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  p75: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  p95: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  p99: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  standardDeviation: Scalars['Float']['output'];
};

export type AiTopologyAccountStitchedFields = {
  __typename?: 'AiTopologyAccountStitchedFields';
  edges: AiTopologyEdgeListing;
  graph: AiTopologyGraph;
  vertices: AiTopologyVertexListing;
};


export type AiTopologyAccountStitchedFieldsEdgesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  edgeIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type AiTopologyAccountStitchedFieldsVerticesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  vertexClasses?: InputMaybe<Array<AiTopologyVertexClass>>;
  vertexIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AiTopologyCollectorAttributeInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type AiTopologyCollectorEdgeBlueprint = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  fromVertexName: Scalars['String']['input'];
  toVertexName: Scalars['String']['input'];
};

export type AiTopologyCollectorOperationResult = {
  __typename?: 'AiTopologyCollectorOperationResult';
  result: AiTopologyCollectorResultType;
};

export type AiTopologyCollectorResultType =
  | 'FAILURE'
  | 'SUCCESS';

export type AiTopologyCollectorVertexBlueprint = {
  definingAttributes: Array<AiTopologyCollectorAttributeInput>;
  name: Scalars['String']['input'];
  vertexClass: AiTopologyCollectorVertexClass;
};

export type AiTopologyCollectorVertexClass =
  | 'APPLICATION'
  | 'CLOUDSERVICE'
  | 'CLUSTER'
  | 'DATASTORE'
  | 'HOST'
  | 'TEAM';

export type AiTopologyDefiningAttribute = {
  __typename?: 'AiTopologyDefiningAttribute';
  key: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AiTopologyEdge = {
  __typename?: 'AiTopologyEdge';
  directed: Scalars['Boolean']['output'];
  fromVertexId: Scalars['ID']['output'];
  fromVertexName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  toVertexId: Scalars['ID']['output'];
  toVertexName: Scalars['String']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AiTopologyEdgeListing = {
  __typename?: 'AiTopologyEdgeListing';
  count: Scalars['Int']['output'];
  cursor?: Maybe<Scalars['String']['output']>;
  edges: Array<AiTopologyEdge>;
};

export type AiTopologyGraph = {
  __typename?: 'AiTopologyGraph';
  edges: Array<AiTopologyEdge>;
  vertices: Array<AiTopologyVertex>;
};

export type AiTopologyVertex = {
  __typename?: 'AiTopologyVertex';
  definingAttributes: Array<AiTopologyDefiningAttribute>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
  vertexClass: AiTopologyVertexClass;
};

export type AiTopologyVertexClass =
  | 'APPLICATION'
  | 'CLOUDSERVICE'
  | 'CLUSTER'
  | 'DATASTORE'
  | 'HOST'
  | 'TEAM';

export type AiTopologyVertexListing = {
  __typename?: 'AiTopologyVertexListing';
  count: Scalars['Int']['output'];
  cursor?: Maybe<Scalars['String']['output']>;
  vertices: Array<AiTopologyVertex>;
};

export type AiWorkflowsAccountStitchedFields = {
  __typename?: 'AiWorkflowsAccountStitchedFields';
  predictedWorkflowMatches?: Maybe<AiWorkflowsWorkflowMatches>;
  workflows?: Maybe<AiWorkflowsWorkflows>;
};


export type AiWorkflowsAccountStitchedFieldsPredictedWorkflowMatchesArgs = {
  matchCriteria: AiWorkflowsMatchCriteria;
};


export type AiWorkflowsAccountStitchedFieldsWorkflowsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<AiWorkflowsFilters>;
};

export type AiWorkflowsConfiguration = AiWorkflowsNrqlConfiguration;

export type AiWorkflowsCreateErrorType =
  | 'CHANNEL_NOT_FOUND'
  | 'DUPLICATE'
  | 'INVALID_PARAMETER'
  | 'LIMIT_REACHED'
  | 'MISSING_ENTITLEMENT'
  | 'UNAUTHORIZED_ACCOUNT'
  | 'UNSUPPORTED_CHANNEL_TYPE'
  | 'VALIDATION_ERROR';

export type AiWorkflowsCreateResponseError = AiWorkflowsResponseError & {
  __typename?: 'AiWorkflowsCreateResponseError';
  description: Scalars['String']['output'];
  type: AiWorkflowsCreateErrorType;
};

export type AiWorkflowsCreateWorkflowInput = {
  destinationConfigurations: Array<AiWorkflowsDestinationConfigurationInput>;
  destinationsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  enrichments?: InputMaybe<AiWorkflowsEnrichmentsInput>;
  enrichmentsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  issuesFilter?: InputMaybe<AiWorkflowsFilterInput>;
  mutingRulesHandling: AiWorkflowsMutingRulesHandling;
  name: Scalars['String']['input'];
  workflowEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AiWorkflowsCreateWorkflowResponse = {
  __typename?: 'AiWorkflowsCreateWorkflowResponse';
  errors: Array<AiWorkflowsCreateResponseError>;
  workflow?: Maybe<AiWorkflowsWorkflow>;
};

export type AiWorkflowsDeleteErrorType =
  | 'INVALID_PARAMETER'
  | 'UNAUTHORIZED_ACCOUNT'
  | 'VALIDATION_ERROR';

export type AiWorkflowsDeleteResponseError = AiWorkflowsResponseError & {
  __typename?: 'AiWorkflowsDeleteResponseError';
  description: Scalars['String']['output'];
  type: AiWorkflowsDeleteErrorType;
};

export type AiWorkflowsDeleteWorkflowResponse = {
  __typename?: 'AiWorkflowsDeleteWorkflowResponse';
  errors: Array<AiWorkflowsDeleteResponseError>;
  id?: Maybe<Scalars['ID']['output']>;
};

export type AiWorkflowsDestinationConfiguration = {
  __typename?: 'AiWorkflowsDestinationConfiguration';
  channelId: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  notificationTriggers?: Maybe<Array<AiWorkflowsNotificationTrigger>>;
  type: AiWorkflowsDestinationType;
};

export type AiWorkflowsDestinationConfigurationInput = {
  channelId: Scalars['ID']['input'];
  notificationTriggers?: InputMaybe<Array<AiWorkflowsNotificationTrigger>>;
};

export type AiWorkflowsDestinationType =
  | 'EMAIL'
  | 'EVENT_BRIDGE'
  | 'JIRA'
  | 'MOBILE_PUSH'
  | 'PAGERDUTY'
  | 'PAGERDUTY_ACCOUNT_INTEGRATION'
  | 'PAGERDUTY_SERVICE_INTEGRATION'
  | 'SERVICE_NOW'
  | 'SERVICE_NOW_APP'
  | 'SLACK'
  | 'SLACK_LEGACY'
  | 'WEBHOOK';

export type AiWorkflowsEnrichment = {
  __typename?: 'AiWorkflowsEnrichment';
  accountId: Scalars['Int']['output'];
  configurations: Array<AiWorkflowsConfiguration>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AiWorkflowsEnrichmentType;
  updatedAt: Scalars['DateTime']['output'];
};

export type AiWorkflowsEnrichmentType =
  | 'NRQL';

export type AiWorkflowsEnrichmentsInput = {
  nrql: Array<AiWorkflowsNrqlEnrichmentInput>;
};

export type AiWorkflowsFilter = {
  __typename?: 'AiWorkflowsFilter';
  accountId: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  predicates: Array<AiWorkflowsPredicate>;
  type: AiWorkflowsFilterType;
};

export type AiWorkflowsFilterInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  predicates: Array<AiWorkflowsPredicateInput>;
  type: AiWorkflowsFilterType;
};

export type AiWorkflowsFilterType =
  | 'FILTER'
  | 'VIEW';

export type AiWorkflowsFilters = {
  channelId?: InputMaybe<Scalars['ID']['input']>;
  destinationType?: InputMaybe<AiWorkflowsDestinationType>;
  enrichmentId?: InputMaybe<Scalars['ID']['input']>;
  filterId?: InputMaybe<Scalars['ID']['input']>;
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nameLike?: InputMaybe<Scalars['String']['input']>;
  workflowEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AiWorkflowsMatchCriteria = {
  entityGuids: Array<Scalars['EntityGuid']['input']>;
};

export type AiWorkflowsMutingRulesHandling =
  | 'DONT_NOTIFY_FULLY_MUTED_ISSUES'
  | 'DONT_NOTIFY_FULLY_OR_PARTIALLY_MUTED_ISSUES'
  | 'NOTIFY_ALL_ISSUES';

export type AiWorkflowsNotificationTrigger =
  | 'ACKNOWLEDGED'
  | 'ACTIVATED'
  | 'CLOSED'
  | 'OTHER_UPDATES'
  | 'PRIORITY_CHANGED';

export type AiWorkflowsNrqlConfiguration = {
  __typename?: 'AiWorkflowsNrqlConfiguration';
  query: Scalars['String']['output'];
};

export type AiWorkflowsNrqlConfigurationInput = {
  query: Scalars['String']['input'];
};

export type AiWorkflowsNrqlEnrichmentInput = {
  configuration: Array<AiWorkflowsNrqlConfigurationInput>;
  name: Scalars['String']['input'];
};

export type AiWorkflowsNrqlTestEnrichmentInput = {
  configuration: Array<AiWorkflowsNrqlConfigurationInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
};

export type AiWorkflowsNrqlUpdateEnrichmentInput = {
  configuration: Array<AiWorkflowsNrqlConfigurationInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
};

export type AiWorkflowsOperator =
  | 'CONTAINS'
  | 'DOES_NOT_CONTAIN'
  | 'DOES_NOT_EQUAL'
  | 'DOES_NOT_EXACTLY_MATCH'
  | 'ENDS_WITH'
  | 'EQUAL'
  | 'EXACTLY_MATCHES'
  | 'GREATER_OR_EQUAL'
  | 'GREATER_THAN'
  | 'IS'
  | 'IS_NOT'
  | 'LESS_OR_EQUAL'
  | 'LESS_THAN'
  | 'STARTS_WITH';

export type AiWorkflowsPredicate = {
  __typename?: 'AiWorkflowsPredicate';
  attribute: Scalars['String']['output'];
  operator: AiWorkflowsOperator;
  values: Array<Scalars['String']['output']>;
};

export type AiWorkflowsPredicateInput = {
  attribute: Scalars['String']['input'];
  operator: AiWorkflowsOperator;
  values: Array<Scalars['String']['input']>;
};

export type AiWorkflowsResponseError = {
  description: Scalars['String']['output'];
};

export type AiWorkflowsTestEnrichmentsInput = {
  nrql: Array<AiWorkflowsNrqlTestEnrichmentInput>;
};

export type AiWorkflowsTestErrorType =
  | 'CHANNEL_NOT_FOUND'
  | 'FAILED_RUNNING_TEST'
  | 'MISSING_ENTITLEMENT'
  | 'UNAUTHORIZED_ACCOUNT'
  | 'UNSUPPORTED_CHANNEL_TYPE'
  | 'VALIDATION_ERROR'
  | 'WARNING_FAILED_SENDING_NOTIFICATION'
  | 'WARNING_NO_FILTERED_ISSUE_FOUND'
  | 'WARNING_NO_MATCHING_DYNAMIC_VARIABLES_FOUND';

export type AiWorkflowsTestNotificationResponse = {
  __typename?: 'AiWorkflowsTestNotificationResponse';
  channelId: Scalars['ID']['output'];
  evidence?: Maybe<Scalars['String']['output']>;
  status: AiWorkflowsTestNotificationResponseStatus;
};

export type AiWorkflowsTestNotificationResponseStatus =
  | 'FAILURE'
  | 'SUCCESS';

export type AiWorkflowsTestResponseError = AiWorkflowsResponseError & {
  __typename?: 'AiWorkflowsTestResponseError';
  description: Scalars['String']['output'];
  type: AiWorkflowsTestErrorType;
};

export type AiWorkflowsTestResponseStatus =
  | 'FAILURE'
  | 'SUCCESS';

export type AiWorkflowsTestWorkflowInput = {
  destinationConfigurations: Array<AiWorkflowsDestinationConfigurationInput>;
  enrichments?: InputMaybe<AiWorkflowsTestEnrichmentsInput>;
  issuesFilter?: InputMaybe<AiWorkflowsFilterInput>;
};

export type AiWorkflowsTestWorkflowResponse = {
  __typename?: 'AiWorkflowsTestWorkflowResponse';
  errors?: Maybe<Array<AiWorkflowsTestResponseError>>;
  notificationResponses?: Maybe<Array<AiWorkflowsTestNotificationResponse>>;
  status: AiWorkflowsTestResponseStatus;
};

export type AiWorkflowsUpdateEnrichmentsInput = {
  nrql: Array<AiWorkflowsNrqlUpdateEnrichmentInput>;
};

export type AiWorkflowsUpdateErrorType =
  | 'CHANNEL_NOT_FOUND'
  | 'DUPLICATE'
  | 'INVALID_PARAMETER'
  | 'MISSING_ENTITLEMENT'
  | 'UNAUTHORIZED_ACCOUNT'
  | 'UNSUPPORTED_CHANNEL_TYPE'
  | 'VALIDATION_ERROR';

export type AiWorkflowsUpdateResponseError = AiWorkflowsResponseError & {
  __typename?: 'AiWorkflowsUpdateResponseError';
  description: Scalars['String']['output'];
  type: AiWorkflowsUpdateErrorType;
};

export type AiWorkflowsUpdateWorkflowInput = {
  destinationConfigurations?: InputMaybe<Array<AiWorkflowsDestinationConfigurationInput>>;
  destinationsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  enrichments?: InputMaybe<AiWorkflowsUpdateEnrichmentsInput>;
  enrichmentsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  issuesFilter?: InputMaybe<AiWorkflowsUpdatedFilterInput>;
  mutingRulesHandling?: InputMaybe<AiWorkflowsMutingRulesHandling>;
  name?: InputMaybe<Scalars['String']['input']>;
  workflowEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AiWorkflowsUpdateWorkflowResponse = {
  __typename?: 'AiWorkflowsUpdateWorkflowResponse';
  errors: Array<AiWorkflowsUpdateResponseError>;
  workflow?: Maybe<AiWorkflowsWorkflow>;
};

export type AiWorkflowsUpdatedFilterInput = {
  filterInput: AiWorkflowsFilterInput;
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type AiWorkflowsWorkflow = {
  __typename?: 'AiWorkflowsWorkflow';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['DateTime']['output'];
  destinationConfigurations: Array<AiWorkflowsDestinationConfiguration>;
  destinationsEnabled: Scalars['Boolean']['output'];
  enrichments: Array<AiWorkflowsEnrichment>;
  enrichmentsEnabled: Scalars['Boolean']['output'];
  guid: Scalars['EntityGuid']['output'];
  id: Scalars['ID']['output'];
  issuesFilter: AiWorkflowsFilter;
  lastRun?: Maybe<Scalars['DateTime']['output']>;
  mutingRulesHandling: AiWorkflowsMutingRulesHandling;
  name: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
  workflowEnabled: Scalars['Boolean']['output'];
};

export type AiWorkflowsWorkflowMatches = {
  __typename?: 'AiWorkflowsWorkflowMatches';
  matches: Array<AiWorkflowsWorkflowsMatch>;
};

export type AiWorkflowsWorkflows = {
  __typename?: 'AiWorkflowsWorkflows';
  entities: Array<AiWorkflowsWorkflow>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AiWorkflowsWorkflowsMatch = {
  __typename?: 'AiWorkflowsWorkflowsMatch';
  matchedEntityGuid: Scalars['EntityGuid']['output'];
  totalCount: Scalars['Int']['output'];
  workflows: Array<AiWorkflowsWorkflow>;
};

export type AlertAccessTier =
  | 'HYBRID_ALERTS'
  | 'LEGACY_ALERTS'
  | 'NOT_SET'
  | 'NO_ALERTS'
  | 'NR_ALERTS';

export type AlertSettings = {
  __typename?: 'AlertSettings';
  accessTier?: Maybe<AlertAccessTier>;
};

export type AlertStatus =
  | 'GREEN'
  | 'LIGHT_GREEN'
  | 'LIGHT_GREY'
  | 'RED'
  | 'YELLOW';

export type AlertableEntity = {
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
};


export type AlertableEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type AlertableEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};

export type AlertableEntityOutline = {
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
};

export type AlertsAccountStitchedFields = {
  __typename?: 'AlertsAccountStitchedFields';
  /** @deprecated NOT READY FOR PRODUCTION - subject to breaking changes */
  condition?: Maybe<AlertsNrqlCondition>;
  conditionCoverageGapsAskAi?: Maybe<AlertsConditionCoverageGapsAskAiResult>;
  legacyAuthorization?: Maybe<AlertsLegacyAuthorizationResult>;
  mutingRule?: Maybe<AlertsMutingRule>;
  mutingRules?: Maybe<Array<Maybe<AlertsMutingRule>>>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`destinations` query](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-notifications-destinations/) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  notificationChannel?: Maybe<AlertsNotificationChannel>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`destinations` query](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-notifications-destinations/) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  notificationChannels?: Maybe<AlertsNotificationChannelsResultSet>;
  nrqlCondition?: Maybe<AlertsNrqlCondition>;
  nrqlConditionsSearch?: Maybe<AlertsNrqlConditionsSearchResultSet>;
  nrqlQueryFacetCount?: Maybe<AlertsNrqlQueryFacetCount>;
  nrqlQueryFormatAlertable?: Maybe<AlertsNrqlQueryFormatAlertable>;
  policiesSearch?: Maybe<AlertsPoliciesSearchResultSet>;
  policy?: Maybe<AlertsPolicy>;
  recommendConditions?: Maybe<AlertsRecommendConditionsResultSet>;
  recommendConditionsAskAi?: Maybe<AlertsRecommendConditionsAskAiResult>;
};


export type AlertsAccountStitchedFieldsConditionArgs = {
  id: Scalars['ID']['input'];
};


export type AlertsAccountStitchedFieldsConditionCoverageGapsAskAiArgs = {
  entityName?: InputMaybe<Scalars['String']['input']>;
  entityType?: InputMaybe<Scalars['String']['input']>;
  max?: InputMaybe<Scalars['Int']['input']>;
};


export type AlertsAccountStitchedFieldsMutingRuleArgs = {
  id: Scalars['ID']['input'];
};


export type AlertsAccountStitchedFieldsNotificationChannelArgs = {
  id: Scalars['ID']['input'];
};


export type AlertsAccountStitchedFieldsNotificationChannelsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type AlertsAccountStitchedFieldsNrqlConditionArgs = {
  id: Scalars['ID']['input'];
};


export type AlertsAccountStitchedFieldsNrqlConditionsSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  searchCriteria?: InputMaybe<AlertsNrqlConditionsSearchCriteriaInput>;
};


export type AlertsAccountStitchedFieldsNrqlQueryFacetCountArgs = {
  query: Scalars['Nrql']['input'];
};


export type AlertsAccountStitchedFieldsNrqlQueryFormatAlertableArgs = {
  query: Scalars['Nrql']['input'];
};


export type AlertsAccountStitchedFieldsPoliciesSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  searchCriteria?: InputMaybe<AlertsPoliciesSearchCriteriaInput>;
};


export type AlertsAccountStitchedFieldsPolicyArgs = {
  id: Scalars['ID']['input'];
};


export type AlertsAccountStitchedFieldsRecommendConditionsArgs = {
  recommend: AlertsRecommendConditionsInput;
};


export type AlertsAccountStitchedFieldsRecommendConditionsAskAiArgs = {
  entityDomain?: InputMaybe<Scalars['String']['input']>;
  entityNames?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  entityType?: InputMaybe<Scalars['String']['input']>;
  operator?: InputMaybe<Scalars['String']['input']>;
  searchString?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsActorLegacyAuthorizationResult = {
  __typename?: 'AlertsActorLegacyAuthorizationResult';
  isAuthorized: Scalars['Boolean']['output'];
};

export type AlertsActorStitchedFields = {
  __typename?: 'AlertsActorStitchedFields';
  legacyAuthorization?: Maybe<AlertsActorLegacyAuthorizationResult>;
};

export type AlertsAskAiCard = {
  __typename?: 'AlertsAskAiCard';
  actions: Array<AlertsAskAiCardAction>;
  body: Array<AlertsAskAiCardBody>;
  type: Scalars['String']['output'];
  version: Scalars['SemVer']['output'];
};

export type AlertsAskAiCardAction = AlertsAskAiCardActionLink | AlertsAskAiCardActionOpenNerdlet | AlertsAskAiCardActionQuestion;

export type AlertsAskAiCardActionLink = {
  __typename?: 'AlertsAskAiCardActionLink';
  args: AlertsAskAiCardActionLinkArgs;
  title: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type AlertsAskAiCardActionLinkArgs = {
  __typename?: 'AlertsAskAiCardActionLinkArgs';
  to: Scalars['String']['output'];
};

export type AlertsAskAiCardActionOpenNerdlet = {
  __typename?: 'AlertsAskAiCardActionOpenNerdlet';
  args: AlertsAskAiCardActionOpenNerdletArgs;
  title: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type AlertsAskAiCardActionOpenNerdletArgs = {
  __typename?: 'AlertsAskAiCardActionOpenNerdletArgs';
  nerdlet: Scalars['String']['output'];
  urlState: Scalars['AlertsRawNerdletState']['output'];
};

export type AlertsAskAiCardActionQuestion = {
  __typename?: 'AlertsAskAiCardActionQuestion';
  args: AlertsAskAiCardActionQuestionArgs;
  title: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type AlertsAskAiCardActionQuestionArgs = {
  __typename?: 'AlertsAskAiCardActionQuestionArgs';
  prompt: Scalars['String']['output'];
};

export type AlertsAskAiCardBody = AlertsAskAiCardBodyBlockText | AlertsAskAiCardBodyCodeBlock | AlertsAskAiCardBodyForm | AlertsAskAiCardBodyVisualization;

export type AlertsAskAiCardBodyBlockText = {
  __typename?: 'AlertsAskAiCardBodyBlockText';
  type: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyCodeBlock = {
  __typename?: 'AlertsAskAiCardBodyCodeBlock';
  actions: Scalars['String']['output'];
  code: Scalars['String']['output'];
  languageType: Scalars['String']['output'];
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyForm = {
  __typename?: 'AlertsAskAiCardBodyForm';
  items: Array<AlertsAskAiCardBodyFormItem>;
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyFormCheckbox = {
  __typename?: 'AlertsAskAiCardBodyFormCheckbox';
  label: Scalars['String']['output'];
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyFormItem = AlertsAskAiCardBodyFormCheckbox | AlertsAskAiCardBodyFormMultilineTextField | AlertsAskAiCardBodyFormSelect | AlertsAskAiCardBodyFormTextField;

export type AlertsAskAiCardBodyFormMultilineTextField = {
  __typename?: 'AlertsAskAiCardBodyFormMultilineTextField';
  label: Scalars['String']['output'];
  name: Scalars['String']['output'];
  placeholder: Scalars['String']['output'];
  type: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyFormSelect = {
  __typename?: 'AlertsAskAiCardBodyFormSelect';
  items: Array<AlertsAskAiCardBodyFormSelectItem>;
  label: Scalars['String']['output'];
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyFormSelectItem = {
  __typename?: 'AlertsAskAiCardBodyFormSelectItem';
  label: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyFormTextField = {
  __typename?: 'AlertsAskAiCardBodyFormTextField';
  label: Scalars['String']['output'];
  name: Scalars['String']['output'];
  placeholder: Scalars['String']['output'];
  type: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyVisualization = {
  __typename?: 'AlertsAskAiCardBodyVisualization';
  id: Scalars['String']['output'];
  nrqlQueries: Array<AlertsAskAiCardBodyVisualizationNrqlQuery>;
  type: Scalars['String']['output'];
};

export type AlertsAskAiCardBodyVisualizationNrqlQuery = {
  __typename?: 'AlertsAskAiCardBodyVisualizationNrqlQuery';
  accountIds: Array<Scalars['Int']['output']>;
  query: Scalars['String']['output'];
};

export type AlertsCampfireNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsCampfireNotificationChannel';
  /** @deprecated This channel type is deprecated */
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  /** @deprecated This channel type is deprecated */
  config: AlertsCampfireNotificationChannelConfig;
  /** @deprecated This channel type is deprecated */
  id: Scalars['ID']['output'];
  /** @deprecated This channel type is deprecated */
  name: Scalars['String']['output'];
  /** @deprecated This channel type is deprecated */
  type: AlertsNotificationChannelType;
};

export type AlertsCampfireNotificationChannelConfig = {
  __typename?: 'AlertsCampfireNotificationChannelConfig';
  /** @deprecated This channel type is deprecated */
  room: Scalars['String']['output'];
  /** @deprecated This channel type is deprecated */
  subdomain: Scalars['String']['output'];
  /** @deprecated This channel type is deprecated */
  token: Scalars['SecureValue']['output'];
};

export type AlertsConditionCoverageGapsAskAi = {
  __typename?: 'AlertsConditionCoverageGapsAskAi';
  card: AlertsCoverageGapsAskAiCard;
};

export type AlertsConditionCoverageGapsAskAiResult = {
  __typename?: 'AlertsConditionCoverageGapsAskAiResult';
  coverageGaps: AlertsConditionCoverageGapsAskAi;
};

export type AlertsConditionDeleteResponse = {
  __typename?: 'AlertsConditionDeleteResponse';
  id: Scalars['ID']['output'];
};

export type AlertsConditionUpdateEnabledResponse = {
  __typename?: 'AlertsConditionUpdateEnabledResponse';
  enabled: Scalars['Boolean']['output'];
};

export type AlertsCoverageGapsAskAiCard = {
  __typename?: 'AlertsCoverageGapsAskAiCard';
  actions: Array<AlertsCoverageGapsAskAiCardAction>;
  body: Array<AlertsCoverageGapsAskAiCardBody>;
  type: Scalars['String']['output'];
  version: Scalars['SemVer']['output'];
};

export type AlertsCoverageGapsAskAiCardAction = AlertsAskAiCardActionLink | AlertsAskAiCardActionOpenNerdlet | AlertsAskAiCardActionQuestion;

export type AlertsCoverageGapsAskAiCardBody = AlertsAskAiCardBodyBlockText | AlertsAskAiCardBodyCodeBlock | AlertsAskAiCardBodyForm | AlertsAskAiCardBodyVisualization;

export type AlertsDayOfWeek =
  | 'FRIDAY'
  | 'MONDAY'
  | 'SATURDAY'
  | 'SUNDAY'
  | 'THURSDAY'
  | 'TUESDAY'
  | 'WEDNESDAY';

export type AlertsEmailNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsEmailNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsEmailNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsEmailNotificationChannelConfig = {
  __typename?: 'AlertsEmailNotificationChannelConfig';
  emails: Array<Scalars['String']['output']>;
  includeJson: Scalars['Boolean']['output'];
};

export type AlertsEmailNotificationChannelCreateInput = {
  emails: Array<Scalars['String']['input']>;
  includeJson: Scalars['Boolean']['input'];
  name: Scalars['String']['input'];
};

export type AlertsEmailNotificationChannelUpdateInput = {
  emails?: InputMaybe<Array<Scalars['String']['input']>>;
  includeJson?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsFillOption =
  | 'LAST_VALUE'
  | 'NONE'
  | 'STATIC';

export type AlertsHipChatNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsHipChatNotificationChannel';
  /** @deprecated This channel type is deprecated */
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  /** @deprecated This channel type is deprecated */
  config: AlertsHipChatNotificationChannelConfig;
  /** @deprecated This channel type is deprecated */
  id: Scalars['ID']['output'];
  /** @deprecated This channel type is deprecated */
  name: Scalars['String']['output'];
  /** @deprecated This channel type is deprecated */
  type: AlertsNotificationChannelType;
};

export type AlertsHipChatNotificationChannelConfig = {
  __typename?: 'AlertsHipChatNotificationChannelConfig';
  /** @deprecated This channel type is deprecated */
  authToken: Scalars['SecureValue']['output'];
  /** @deprecated This channel type is deprecated */
  baseUrl: Scalars['String']['output'];
  /** @deprecated This channel type is deprecated */
  roomId: Scalars['String']['output'];
};

export type AlertsIncidentPreference =
  | 'PER_CONDITION'
  | 'PER_CONDITION_AND_TARGET'
  | 'PER_POLICY';

export type AlertsLegacyAuthorizationResult = {
  __typename?: 'AlertsLegacyAuthorizationResult';
  isAuthorized: Scalars['Boolean']['output'];
  migrationBlockers?: Maybe<Array<Scalars['String']['output']>>;
  migrationEligible?: Maybe<Scalars['Boolean']['output']>;
  migrationStatus?: Maybe<AlertsMigrationStatus>;
  migrationTimeframe?: Maybe<Scalars['String']['output']>;
};

export type AlertsMigrationStatus =
  | 'BLOCKED'
  | 'COMPLETE'
  | 'FAILED'
  | 'IN_PROGRESS'
  | 'NON_MATCHABLE_MIGRATION_STATUS_VALUE'
  | 'RESET'
  | 'ROLLED_BACK'
  | 'STAGED'
  | 'VALIDATION';

export type AlertsMutingRule = {
  __typename?: 'AlertsMutingRule';
  accountId: Scalars['Int']['output'];
  condition: AlertsMutingRuleConditionGroup;
  createdAt: Scalars['DateTime']['output'];
  /** @deprecated Please use 'createdByUser'. */
  createdBy: Scalars['ID']['output'];
  createdByUser?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  schedule?: Maybe<AlertsMutingRuleSchedule>;
  status: AlertsMutingRuleStatus;
  updatedAt: Scalars['DateTime']['output'];
  /** @deprecated Please use 'updatedByUser'. */
  updatedBy: Scalars['ID']['output'];
  updatedByUser?: Maybe<UserReference>;
};

export type AlertsMutingRuleCondition = {
  __typename?: 'AlertsMutingRuleCondition';
  attribute: Scalars['String']['output'];
  operator: AlertsMutingRuleConditionOperator;
  values: Array<Maybe<Scalars['String']['output']>>;
};

export type AlertsMutingRuleConditionGroup = {
  __typename?: 'AlertsMutingRuleConditionGroup';
  conditions: Array<AlertsMutingRuleCondition>;
  operator: AlertsMutingRuleConditionGroupOperator;
};

export type AlertsMutingRuleConditionGroupInput = {
  conditions: Array<AlertsMutingRuleConditionInput>;
  operator: AlertsMutingRuleConditionGroupOperator;
};

export type AlertsMutingRuleConditionGroupOperator =
  | 'AND'
  | 'OR';

export type AlertsMutingRuleConditionInput = {
  attribute: Scalars['String']['input'];
  operator: AlertsMutingRuleConditionOperator;
  values: Array<InputMaybe<Scalars['String']['input']>>;
};

export type AlertsMutingRuleConditionOperator =
  | 'ANY'
  | 'CONTAINS'
  | 'ENDS_WITH'
  | 'EQUALS'
  | 'IN'
  | 'IS_BLANK'
  | 'IS_NOT_BLANK'
  | 'NOT_CONTAINS'
  | 'NOT_ENDS_WITH'
  | 'NOT_EQUALS'
  | 'NOT_IN'
  | 'NOT_STARTS_WITH'
  | 'STARTS_WITH';

export type AlertsMutingRuleDeleteResponse = {
  __typename?: 'AlertsMutingRuleDeleteResponse';
  id: Scalars['ID']['output'];
};

export type AlertsMutingRuleInput = {
  condition: AlertsMutingRuleConditionGroupInput;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  name: Scalars['String']['input'];
  schedule?: InputMaybe<AlertsMutingRuleScheduleInput>;
};

export type AlertsMutingRuleSchedule = {
  __typename?: 'AlertsMutingRuleSchedule';
  endRepeat?: Maybe<Scalars['DateTime']['output']>;
  endTime?: Maybe<Scalars['DateTime']['output']>;
  nextEndTime?: Maybe<Scalars['DateTime']['output']>;
  nextStartTime?: Maybe<Scalars['DateTime']['output']>;
  repeat?: Maybe<AlertsMutingRuleScheduleRepeat>;
  repeatCount?: Maybe<Scalars['Int']['output']>;
  startTime?: Maybe<Scalars['DateTime']['output']>;
  timeZone: Scalars['String']['output'];
  weeklyRepeatDays?: Maybe<Array<AlertsDayOfWeek>>;
};

export type AlertsMutingRuleScheduleInput = {
  endRepeat?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  endTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  repeat?: InputMaybe<AlertsMutingRuleScheduleRepeat>;
  repeatCount?: InputMaybe<Scalars['Int']['input']>;
  startTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  timeZone: Scalars['String']['input'];
  weeklyRepeatDays?: InputMaybe<Array<AlertsDayOfWeek>>;
};

export type AlertsMutingRuleScheduleRepeat =
  | 'DAILY'
  | 'MONTHLY'
  | 'WEEKLY';

export type AlertsMutingRuleScheduleUpdateInput = {
  endRepeat?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  endTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  repeat?: InputMaybe<AlertsMutingRuleScheduleRepeat>;
  repeatCount?: InputMaybe<Scalars['Int']['input']>;
  startTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  weeklyRepeatDays?: InputMaybe<Array<AlertsDayOfWeek>>;
};

export type AlertsMutingRuleStatus =
  | 'ACTIVE'
  | 'ENDED'
  | 'INACTIVE'
  | 'SCHEDULED';

export type AlertsMutingRuleUpdateInput = {
  condition?: InputMaybe<AlertsMutingRuleConditionGroupInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  schedule?: InputMaybe<AlertsMutingRuleScheduleUpdateInput>;
};

export type AlertsNotificationChannel = {
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsNotificationChannelCreateConfiguration = {
  email?: InputMaybe<AlertsEmailNotificationChannelCreateInput>;
  opsGenie?: InputMaybe<AlertsOpsGenieNotificationChannelCreateInput>;
  pagerDuty?: InputMaybe<AlertsPagerDutyNotificationChannelCreateInput>;
  slack?: InputMaybe<AlertsSlackNotificationChannelCreateInput>;
  victorOps?: InputMaybe<AlertsVictorOpsNotificationChannelCreateInput>;
  webhook?: InputMaybe<AlertsWebhookNotificationChannelCreateInput>;
  xMatters?: InputMaybe<AlertsXMattersNotificationChannelCreateInput>;
};

export type AlertsNotificationChannelCreateError = {
  __typename?: 'AlertsNotificationChannelCreateError';
  description: Scalars['String']['output'];
  errorType: AlertsNotificationChannelCreateErrorType;
};

export type AlertsNotificationChannelCreateErrorType =
  | 'BAD_USER_INPUT'
  | 'FORBIDDEN_ERROR'
  | 'SERVER_ERROR'
  | 'TOO_MANY_REQUESTS_ERROR';

export type AlertsNotificationChannelCreateResponse = {
  __typename?: 'AlertsNotificationChannelCreateResponse';
  error?: Maybe<AlertsNotificationChannelCreateError>;
  notificationChannel?: Maybe<AlertsNotificationChannelMutation>;
};

export type AlertsNotificationChannelDeleteError = {
  __typename?: 'AlertsNotificationChannelDeleteError';
  description: Scalars['String']['output'];
  errorType: AlertsNotificationChannelDeleteErrorType;
  notificationChannelId: Scalars['ID']['output'];
};

export type AlertsNotificationChannelDeleteErrorType =
  | 'BAD_USER_INPUT'
  | 'FORBIDDEN_ERROR'
  | 'NOT_FOUND_ERROR'
  | 'SERVER_ERROR'
  | 'TOO_MANY_REQUESTS_ERROR';

export type AlertsNotificationChannelDeleteResponse = {
  __typename?: 'AlertsNotificationChannelDeleteResponse';
  error?: Maybe<AlertsNotificationChannelDeleteError>;
  id: Scalars['ID']['output'];
};

export type AlertsNotificationChannelId = {
  __typename?: 'AlertsNotificationChannelId';
  /** @deprecated This type will be removed once we add the ability to return full notification channels in addToPolicy */
  id: Scalars['ID']['output'];
};

export type AlertsNotificationChannelMutation = AlertsEmailNotificationChannel | AlertsOpsGenieNotificationChannel | AlertsPagerDutyNotificationChannel | AlertsSlackNotificationChannel | AlertsVictorOpsNotificationChannel | AlertsWebhookNotificationChannel | AlertsXMattersNotificationChannel;

export type AlertsNotificationChannelPoliciesResultSet = {
  __typename?: 'AlertsNotificationChannelPoliciesResultSet';
  policies: Array<AlertsNotificationChannelPolicy>;
  totalCount: Scalars['Int']['output'];
};

export type AlertsNotificationChannelPolicy = {
  __typename?: 'AlertsNotificationChannelPolicy';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type AlertsNotificationChannelType =
  | 'CAMPFIRE'
  | 'EMAIL'
  | 'HIP_CHAT'
  | 'OPSGENIE'
  | 'PAGERDUTY'
  | 'SLACK'
  | 'USER'
  | 'VICTOROPS'
  | 'WEBHOOK'
  | 'XMATTERS';

export type AlertsNotificationChannelUpdateConfiguration = {
  email?: InputMaybe<AlertsEmailNotificationChannelUpdateInput>;
  opsGenie?: InputMaybe<AlertsOpsGenieNotificationChannelUpdateInput>;
  pagerDuty?: InputMaybe<AlertsPagerDutyNotificationChannelUpdateInput>;
  slack?: InputMaybe<AlertsSlackNotificationChannelUpdateInput>;
  victorOps?: InputMaybe<AlertsVictorOpsNotificationChannelUpdateInput>;
  webhook?: InputMaybe<AlertsWebhookNotificationChannelUpdateInput>;
  xMatters?: InputMaybe<AlertsXMattersNotificationChannelUpdateInput>;
};

export type AlertsNotificationChannelUpdateError = {
  __typename?: 'AlertsNotificationChannelUpdateError';
  description: Scalars['String']['output'];
  errorType: AlertsNotificationChannelUpdateErrorType;
  notificationChannelId: Scalars['ID']['output'];
};

export type AlertsNotificationChannelUpdateErrorType =
  | 'BAD_USER_INPUT'
  | 'FORBIDDEN_ERROR'
  | 'NOT_FOUND_ERROR'
  | 'SERVER_ERROR'
  | 'TOO_MANY_REQUESTS_ERROR';

export type AlertsNotificationChannelUpdateResponse = {
  __typename?: 'AlertsNotificationChannelUpdateResponse';
  error?: Maybe<AlertsNotificationChannelUpdateError>;
  notificationChannel?: Maybe<AlertsNotificationChannelMutation>;
};

export type AlertsNotificationChannelsAddToPolicyError = {
  __typename?: 'AlertsNotificationChannelsAddToPolicyError';
  description: Scalars['String']['output'];
  errorType: AlertsNotificationChannelsAddToPolicyErrorType;
  notificationChannelId: Scalars['ID']['output'];
};

export type AlertsNotificationChannelsAddToPolicyErrorType =
  | 'BAD_USER_INPUT'
  | 'FORBIDDEN_ERROR'
  | 'NOT_FOUND_ERROR'
  | 'SERVER_ERROR'
  | 'TOO_MANY_REQUESTS_ERROR';

export type AlertsNotificationChannelsAddToPolicyResponse = {
  __typename?: 'AlertsNotificationChannelsAddToPolicyResponse';
  errors: Array<AlertsNotificationChannelsAddToPolicyError>;
  notificationChannels: Array<AlertsNotificationChannelId>;
  policyId: Scalars['ID']['output'];
};

export type AlertsNotificationChannelsRemoveFromPolicyError = {
  __typename?: 'AlertsNotificationChannelsRemoveFromPolicyError';
  description: Scalars['String']['output'];
  errorType: AlertsNotificationChannelsRemoveFromPolicyErrorType;
  notificationChannelId: Scalars['ID']['output'];
};

export type AlertsNotificationChannelsRemoveFromPolicyErrorType =
  | 'BAD_USER_INPUT'
  | 'FORBIDDEN_ERROR'
  | 'NOT_FOUND_ERROR'
  | 'SERVER_ERROR'
  | 'TOO_MANY_REQUESTS_ERROR';

export type AlertsNotificationChannelsRemoveFromPolicyResponse = {
  __typename?: 'AlertsNotificationChannelsRemoveFromPolicyResponse';
  errors: Array<AlertsNotificationChannelsRemoveFromPolicyError>;
  notificationChannels: Array<AlertsNotificationChannelId>;
  policyId: Scalars['ID']['output'];
};

export type AlertsNotificationChannelsResultSet = {
  __typename?: 'AlertsNotificationChannelsResultSet';
  channels: Array<AlertsNotificationChannel>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AlertsNrqlBaselineCondition = AlertsNrqlCondition & {
  __typename?: 'AlertsNrqlBaselineCondition';
  baselineDirection: AlertsNrqlBaselineDirection;
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  entity?: Maybe<EntityOutline>;
  entityGuid: Scalars['EntityGuid']['output'];
  expiration: AlertsNrqlConditionExpiration;
  id: Scalars['ID']['output'];
  incidentTitleTemplate?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  nrql: AlertsNrqlConditionQuery;
  policyId: Scalars['ID']['output'];
  runbookUrl?: Maybe<Scalars['String']['output']>;
  signal: AlertsNrqlConditionSignal;
  terms: Array<AlertsNrqlConditionTerms>;
  type: AlertsNrqlConditionType;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
  /** @deprecated Replaced by `violationTimeLimitSeconds`. */
  violationTimeLimit?: Maybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: Maybe<Scalars['Seconds']['output']>;
};

export type AlertsNrqlBaselineDirection =
  | 'LOWER_ONLY'
  | 'UPPER_AND_LOWER'
  | 'UPPER_ONLY';

export type AlertsNrqlCondition = {
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  entity?: Maybe<EntityOutline>;
  entityGuid: Scalars['EntityGuid']['output'];
  expiration: AlertsNrqlConditionExpiration;
  id: Scalars['ID']['output'];
  incidentTitleTemplate?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  nrql: AlertsNrqlConditionQuery;
  policyId: Scalars['ID']['output'];
  runbookUrl?: Maybe<Scalars['String']['output']>;
  signal: AlertsNrqlConditionSignal;
  terms: Array<AlertsNrqlConditionTerms>;
  type: AlertsNrqlConditionType;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
  /** @deprecated Replaced by `violationTimeLimitSeconds`. */
  violationTimeLimit?: Maybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: Maybe<Scalars['Seconds']['output']>;
};

export type AlertsNrqlConditionBaselineInput = {
  baselineDirection: AlertsNrqlBaselineDirection;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  expiration?: InputMaybe<AlertsNrqlConditionExpirationInput>;
  incidentTitleTemplate?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  nrql: AlertsNrqlConditionQueryInput;
  runbookUrl?: InputMaybe<Scalars['String']['input']>;
  signal?: InputMaybe<AlertsNrqlConditionSignalInput>;
  terms: Array<AlertsNrqlDynamicConditionTermsInput>;
  violationTimeLimit?: InputMaybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionExpiration = {
  __typename?: 'AlertsNrqlConditionExpiration';
  closeViolationsOnExpiration?: Maybe<Scalars['Boolean']['output']>;
  expirationDuration?: Maybe<Scalars['Seconds']['output']>;
  openViolationOnExpiration?: Maybe<Scalars['Boolean']['output']>;
};

export type AlertsNrqlConditionExpirationInput = {
  closeViolationsOnExpiration?: InputMaybe<Scalars['Boolean']['input']>;
  expirationDuration?: InputMaybe<Scalars['Seconds']['input']>;
  openViolationOnExpiration?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AlertsNrqlConditionOutlierInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  expectedGroups: Scalars['Int']['input'];
  expiration?: InputMaybe<AlertsNrqlConditionExpirationInput>;
  incidentTitleTemplate?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  nrql: AlertsNrqlConditionQueryInput;
  openViolationOnGroupOverlap: Scalars['Boolean']['input'];
  runbookUrl?: InputMaybe<Scalars['String']['input']>;
  signal?: InputMaybe<AlertsNrqlConditionSignalInput>;
  terms: Array<AlertsNrqlDynamicConditionTermsInput>;
  violationTimeLimit?: InputMaybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionPriority =
  | 'CRITICAL'
  | 'WARNING';

export type AlertsNrqlConditionQuery = {
  __typename?: 'AlertsNrqlConditionQuery';
  /** @deprecated Superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`. */
  evaluationOffset?: Maybe<Scalars['Int']['output']>;
  query: Scalars['Nrql']['output'];
};

export type AlertsNrqlConditionQueryInput = {
  evaluationOffset?: InputMaybe<Scalars['Int']['input']>;
  query: Scalars['Nrql']['input'];
};

export type AlertsNrqlConditionSignal = {
  __typename?: 'AlertsNrqlConditionSignal';
  aggregationDelay?: Maybe<Scalars['Seconds']['output']>;
  aggregationMethod?: Maybe<AlertsSignalAggregationMethod>;
  aggregationTimer?: Maybe<Scalars['Seconds']['output']>;
  aggregationWindow?: Maybe<Scalars['Seconds']['output']>;
  evaluationDelay?: Maybe<Scalars['Seconds']['output']>;
  /** @deprecated Superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`. */
  evaluationOffset?: Maybe<Scalars['Int']['output']>;
  fillOption?: Maybe<AlertsFillOption>;
  fillValue?: Maybe<Scalars['Float']['output']>;
  slideBy?: Maybe<Scalars['Seconds']['output']>;
};

export type AlertsNrqlConditionSignalInput = {
  aggregationDelay?: InputMaybe<Scalars['Seconds']['input']>;
  aggregationMethod?: InputMaybe<AlertsSignalAggregationMethod>;
  aggregationTimer?: InputMaybe<Scalars['Seconds']['input']>;
  aggregationWindow?: InputMaybe<Scalars['Seconds']['input']>;
  evaluationDelay?: InputMaybe<Scalars['Seconds']['input']>;
  evaluationOffset?: InputMaybe<Scalars['Int']['input']>;
  fillOption?: InputMaybe<AlertsFillOption>;
  fillValue?: InputMaybe<Scalars['Float']['input']>;
  slideBy?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionStaticInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  expiration?: InputMaybe<AlertsNrqlConditionExpirationInput>;
  incidentTitleTemplate?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  nrql: AlertsNrqlConditionQueryInput;
  runbookUrl?: InputMaybe<Scalars['String']['input']>;
  signal?: InputMaybe<AlertsNrqlConditionSignalInput>;
  terms: Array<AlertsNrqlConditionTermsInput>;
  valueFunction?: InputMaybe<AlertsNrqlStaticConditionValueFunction>;
  violationTimeLimit?: InputMaybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionTerms = {
  __typename?: 'AlertsNrqlConditionTerms';
  operator: AlertsNrqlConditionTermsOperator;
  priority: AlertsNrqlConditionPriority;
  threshold: Scalars['Float']['output'];
  thresholdDuration: Scalars['Int']['output'];
  thresholdOccurrences: AlertsNrqlConditionThresholdOccurrences;
};

export type AlertsNrqlConditionTermsInput = {
  operator: AlertsNrqlConditionTermsOperator;
  priority: AlertsNrqlConditionPriority;
  threshold: Scalars['Float']['input'];
  thresholdDuration: Scalars['Int']['input'];
  thresholdOccurrences: AlertsNrqlConditionThresholdOccurrences;
};

export type AlertsNrqlConditionTermsOperator =
  | 'ABOVE'
  | 'ABOVE_OR_EQUALS'
  | 'BELOW'
  | 'BELOW_OR_EQUALS'
  | 'EQUALS'
  | 'NOT_EQUALS';

export type AlertsNrqlConditionThresholdOccurrences =
  | 'ALL'
  | 'AT_LEAST_ONCE';

export type AlertsNrqlConditionType =
  | 'BASELINE'
  | 'OUTLIER'
  | 'STATIC';

export type AlertsNrqlConditionUpdateBaselineInput = {
  baselineDirection?: InputMaybe<AlertsNrqlBaselineDirection>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  expiration?: InputMaybe<AlertsNrqlConditionExpirationInput>;
  incidentTitleTemplate?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nrql?: InputMaybe<AlertsNrqlConditionUpdateQueryInput>;
  runbookUrl?: InputMaybe<Scalars['String']['input']>;
  signal?: InputMaybe<AlertsNrqlConditionSignalInput>;
  terms?: InputMaybe<Array<AlertsNrqlDynamicConditionTermsInput>>;
  violationTimeLimit?: InputMaybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionUpdateOutlierInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  expectedGroups?: InputMaybe<Scalars['Int']['input']>;
  expiration?: InputMaybe<AlertsNrqlConditionExpirationInput>;
  incidentTitleTemplate?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nrql?: InputMaybe<AlertsNrqlConditionUpdateQueryInput>;
  openViolationOnGroupOverlap?: InputMaybe<Scalars['Boolean']['input']>;
  runbookUrl?: InputMaybe<Scalars['String']['input']>;
  signal?: InputMaybe<AlertsNrqlConditionSignalInput>;
  terms?: InputMaybe<Array<AlertsNrqlDynamicConditionTermsInput>>;
  violationTimeLimit?: InputMaybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionUpdateQueryInput = {
  evaluationOffset?: InputMaybe<Scalars['Int']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsNrqlConditionUpdateStaticInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  expiration?: InputMaybe<AlertsNrqlConditionExpirationInput>;
  incidentTitleTemplate?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nrql?: InputMaybe<AlertsNrqlConditionUpdateQueryInput>;
  runbookUrl?: InputMaybe<Scalars['String']['input']>;
  signal?: InputMaybe<AlertsNrqlConditionSignalInput>;
  terms?: InputMaybe<Array<AlertsNrqlConditionTermsInput>>;
  valueFunction?: InputMaybe<AlertsNrqlStaticConditionValueFunction>;
  violationTimeLimit?: InputMaybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: InputMaybe<Scalars['Seconds']['input']>;
};

export type AlertsNrqlConditionsSearchCriteriaInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  nameLike?: InputMaybe<Scalars['String']['input']>;
  policyId?: InputMaybe<Scalars['ID']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  queryLike?: InputMaybe<Scalars['String']['input']>;
  termsOperator?: InputMaybe<AlertsNrqlConditionTermsOperator>;
};

export type AlertsNrqlConditionsSearchResultSet = {
  __typename?: 'AlertsNrqlConditionsSearchResultSet';
  nextCursor?: Maybe<Scalars['String']['output']>;
  nrqlConditions: Array<AlertsNrqlCondition>;
  totalCount: Scalars['Int']['output'];
};

export type AlertsNrqlDynamicConditionTermsInput = {
  operator: AlertsNrqlDynamicConditionTermsOperator;
  priority: AlertsNrqlConditionPriority;
  threshold: Scalars['Float']['input'];
  thresholdDuration: Scalars['Int']['input'];
  thresholdOccurrences: AlertsNrqlConditionThresholdOccurrences;
};

export type AlertsNrqlDynamicConditionTermsOperator =
  | 'ABOVE';

export type AlertsNrqlOutlierCondition = AlertsNrqlCondition & {
  __typename?: 'AlertsNrqlOutlierCondition';
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  entity?: Maybe<EntityOutline>;
  entityGuid: Scalars['EntityGuid']['output'];
  expectedGroups: Scalars['Int']['output'];
  expiration: AlertsNrqlConditionExpiration;
  id: Scalars['ID']['output'];
  incidentTitleTemplate?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  nrql: AlertsNrqlConditionQuery;
  openViolationOnGroupOverlap: Scalars['Boolean']['output'];
  policyId: Scalars['ID']['output'];
  runbookUrl?: Maybe<Scalars['String']['output']>;
  signal: AlertsNrqlConditionSignal;
  terms: Array<AlertsNrqlConditionTerms>;
  type: AlertsNrqlConditionType;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
  /** @deprecated Replaced by `violationTimeLimitSeconds`. */
  violationTimeLimit?: Maybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: Maybe<Scalars['Seconds']['output']>;
};

export type AlertsNrqlQueryFacetCount = {
  __typename?: 'AlertsNrqlQueryFacetCount';
  count: Scalars['Int']['output'];
};

export type AlertsNrqlQueryFormatAlertable = {
  __typename?: 'AlertsNrqlQueryFormatAlertable';
  alertableNrqlQuery: Scalars['Nrql']['output'];
};

export type AlertsNrqlStaticCondition = AlertsNrqlCondition & {
  __typename?: 'AlertsNrqlStaticCondition';
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  entity?: Maybe<EntityOutline>;
  entityGuid: Scalars['EntityGuid']['output'];
  expiration: AlertsNrqlConditionExpiration;
  id: Scalars['ID']['output'];
  incidentTitleTemplate?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  nrql: AlertsNrqlConditionQuery;
  policyId: Scalars['ID']['output'];
  runbookUrl?: Maybe<Scalars['String']['output']>;
  signal: AlertsNrqlConditionSignal;
  terms: Array<AlertsNrqlConditionTerms>;
  type: AlertsNrqlConditionType;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
  /** @deprecated Replaced by `signal.slideBy`. */
  valueFunction: AlertsNrqlStaticConditionValueFunction;
  /** @deprecated Replaced by `violationTimeLimitSeconds`. */
  violationTimeLimit?: Maybe<AlertsViolationTimeLimit>;
  violationTimeLimitSeconds?: Maybe<Scalars['Seconds']['output']>;
};

export type AlertsNrqlStaticConditionValueFunction =
  | 'SINGLE_VALUE'
  | 'SUM';

export type AlertsOpsGenieDataCenterRegion =
  | 'EU'
  | 'US';

export type AlertsOpsGenieNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsOpsGenieNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsOpsGenieNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsOpsGenieNotificationChannelConfig = {
  __typename?: 'AlertsOpsGenieNotificationChannelConfig';
  apiKey: Scalars['SecureValue']['output'];
  dataCenterRegion: AlertsOpsGenieDataCenterRegion;
  recipients?: Maybe<Array<Scalars['String']['output']>>;
  tags?: Maybe<Array<Scalars['String']['output']>>;
  teams?: Maybe<Array<Scalars['String']['output']>>;
};

export type AlertsOpsGenieNotificationChannelCreateInput = {
  apiKey: Scalars['SecureValue']['input'];
  dataCenterRegion: AlertsOpsGenieDataCenterRegion;
  name: Scalars['String']['input'];
  recipients?: InputMaybe<Array<Scalars['String']['input']>>;
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  teams?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AlertsOpsGenieNotificationChannelUpdateInput = {
  apiKey?: InputMaybe<Scalars['SecureValue']['input']>;
  dataCenterRegion?: InputMaybe<AlertsOpsGenieDataCenterRegion>;
  name?: InputMaybe<Scalars['String']['input']>;
  recipients?: InputMaybe<Array<Scalars['String']['input']>>;
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
  teams?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type AlertsPagerDutyNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsPagerDutyNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsPagerDutyNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsPagerDutyNotificationChannelConfig = {
  __typename?: 'AlertsPagerDutyNotificationChannelConfig';
  apiKey: Scalars['SecureValue']['output'];
};

export type AlertsPagerDutyNotificationChannelCreateInput = {
  apiKey: Scalars['SecureValue']['input'];
  name: Scalars['String']['input'];
};

export type AlertsPagerDutyNotificationChannelUpdateInput = {
  apiKey?: InputMaybe<Scalars['SecureValue']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsPoliciesSearchCriteriaInput = {
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
  nameLike?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsPoliciesSearchResultSet = {
  __typename?: 'AlertsPoliciesSearchResultSet';
  nextCursor?: Maybe<Scalars['String']['output']>;
  policies: Array<AlertsPolicy>;
  totalCount: Scalars['Int']['output'];
};

export type AlertsPolicy = {
  __typename?: 'AlertsPolicy';
  accountId: Scalars['Int']['output'];
  connectedToSources?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  incidentPreference: AlertsIncidentPreference;
  name: Scalars['String']['output'];
};

export type AlertsPolicyDeleteResponse = {
  __typename?: 'AlertsPolicyDeleteResponse';
  id: Scalars['ID']['output'];
};

export type AlertsPolicyInput = {
  connectedToSources?: InputMaybe<Scalars['Boolean']['input']>;
  incidentPreference: AlertsIncidentPreference;
  name: Scalars['String']['input'];
};

export type AlertsPolicyUpdateInput = {
  connectedToSources?: InputMaybe<Scalars['Boolean']['input']>;
  incidentPreference?: InputMaybe<AlertsIncidentPreference>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsRecommendCondition = {
  __typename?: 'AlertsRecommendCondition';
  baselineDirection?: Maybe<AlertsNrqlBaselineDirection>;
  definition: AlertsRecommendConditionDefinition;
  expiration: AlertsNrqlConditionExpiration;
  metric: AlertsRecommendConditionMetric;
  name: Scalars['String']['output'];
  nrql: Scalars['Nrql']['output'];
  signal: AlertsNrqlConditionSignal;
  terms: Array<AlertsNrqlConditionTerms>;
  type: AlertsNrqlConditionType;
  violationTimeLimitSeconds?: Maybe<Scalars['Seconds']['output']>;
};

export type AlertsRecommendConditionDefinition = {
  __typename?: 'AlertsRecommendConditionDefinition';
  entities: Array<Maybe<Scalars['String']['output']>>;
  eventId: Scalars['String']['output'];
  eventName: Scalars['String']['output'];
  eventObjectId: AlertsRecommendConditionEventObjectId;
  facet?: Maybe<Scalars['String']['output']>;
  from: Scalars['String']['output'];
  select: Scalars['String']['output'];
  where?: Maybe<Scalars['String']['output']>;
};

export type AlertsRecommendConditionEventObjectId =
  | 'ENTITY_GUIDS'
  | 'ENTITY_NAMES';

export type AlertsRecommendConditionMetric = {
  __typename?: 'AlertsRecommendConditionMetric';
  title: Scalars['String']['output'];
};

export type AlertsRecommendConditions = {
  __typename?: 'AlertsRecommendConditions';
  condition: AlertsRecommendCondition;
};

export type AlertsRecommendConditionsAskAi = {
  __typename?: 'AlertsRecommendConditionsAskAi';
  card: AlertsAskAiCard;
};

export type AlertsRecommendConditionsAskAiResult = {
  __typename?: 'AlertsRecommendConditionsAskAiResult';
  recommendations: AlertsRecommendConditionsAskAi;
};

export type AlertsRecommendConditionsEntityDomain =
  | 'APM'
  | 'BROWSER'
  | 'EXT'
  | 'INFRA'
  | 'MOBILE'
  | 'SYNTH';

export type AlertsRecommendConditionsEntityTypeInput = {
  domain?: InputMaybe<AlertsRecommendConditionsEntityDomain>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsRecommendConditionsInput = {
  conditionNamePrefix?: InputMaybe<Scalars['String']['input']>;
  entityGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  entityNames?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  entityType?: InputMaybe<AlertsRecommendConditionsEntityTypeInput>;
};

export type AlertsRecommendConditionsResultSet = {
  __typename?: 'AlertsRecommendConditionsResultSet';
  recommendations: Array<AlertsRecommendConditions>;
};

export type AlertsSignalAggregationMethod =
  | 'CADENCE'
  | 'EVENT_FLOW'
  | 'EVENT_TIMER';

export type AlertsSlackNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsSlackNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsSlackNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsSlackNotificationChannelConfig = {
  __typename?: 'AlertsSlackNotificationChannelConfig';
  teamChannel?: Maybe<Scalars['String']['output']>;
  url: Scalars['SecureValue']['output'];
};

export type AlertsSlackNotificationChannelCreateInput = {
  name: Scalars['String']['input'];
  teamChannel?: InputMaybe<Scalars['String']['input']>;
  url: Scalars['SecureValue']['input'];
};

export type AlertsSlackNotificationChannelUpdateInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  teamChannel?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['SecureValue']['input']>;
};

export type AlertsUserNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsUserNotificationChannel';
  /** @deprecated This channel type is deprecated */
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  /** @deprecated This channel type is deprecated */
  config: AlertsUserNotificationChannelConfig;
  /** @deprecated This channel type is deprecated */
  id: Scalars['ID']['output'];
  /** @deprecated This channel type is deprecated */
  name: Scalars['String']['output'];
  /** @deprecated This channel type is deprecated */
  type: AlertsNotificationChannelType;
};

export type AlertsUserNotificationChannelConfig = {
  __typename?: 'AlertsUserNotificationChannelConfig';
  /** @deprecated This channel type is deprecated */
  userId: Scalars['String']['output'];
};

export type AlertsVictorOpsNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsVictorOpsNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsVictorOpsNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsVictorOpsNotificationChannelConfig = {
  __typename?: 'AlertsVictorOpsNotificationChannelConfig';
  key: Scalars['SecureValue']['output'];
  routeKey: Scalars['String']['output'];
};

export type AlertsVictorOpsNotificationChannelCreateInput = {
  key: Scalars['SecureValue']['input'];
  name: Scalars['String']['input'];
  routeKey: Scalars['String']['input'];
};

export type AlertsVictorOpsNotificationChannelUpdateInput = {
  key?: InputMaybe<Scalars['SecureValue']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  routeKey?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsViolationTimeLimit =
  | 'EIGHT_HOURS'
  | 'FOUR_HOURS'
  | 'NON_MATCHABLE_LIMIT_VALUE'
  | 'ONE_HOUR'
  | 'THIRTY_DAYS'
  | 'TWELVE_HOURS'
  | 'TWENTY_FOUR_HOURS'
  | 'TWO_HOURS';

export type AlertsWebhookBasicAuthInput = {
  __typename?: 'AlertsWebhookBasicAuthInput';
  password: Scalars['SecureValue']['output'];
  username: Scalars['String']['output'];
};

export type AlertsWebhookBasicAuthMutationInput = {
  password: Scalars['SecureValue']['input'];
  username: Scalars['String']['input'];
};

export type AlertsWebhookCustomHeaderInput = {
  __typename?: 'AlertsWebhookCustomHeaderInput';
  name: Scalars['String']['output'];
  value: Scalars['SecureValue']['output'];
};

export type AlertsWebhookCustomHeaderMutationInput = {
  name: Scalars['String']['input'];
  value: Scalars['SecureValue']['input'];
};

export type AlertsWebhookCustomPayloadType =
  | 'FORM'
  | 'JSON';

export type AlertsWebhookNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsWebhookNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsWebhookNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsWebhookNotificationChannelConfig = {
  __typename?: 'AlertsWebhookNotificationChannelConfig';
  baseUrl: Scalars['String']['output'];
  basicAuth?: Maybe<AlertsWebhookBasicAuthInput>;
  customHttpHeaders?: Maybe<Array<AlertsWebhookCustomHeaderInput>>;
  customPayloadBody?: Maybe<Scalars['String']['output']>;
  customPayloadType?: Maybe<AlertsWebhookCustomPayloadType>;
};

export type AlertsWebhookNotificationChannelCreateInput = {
  baseUrl: Scalars['String']['input'];
  basicAuth?: InputMaybe<AlertsWebhookBasicAuthMutationInput>;
  customHttpHeaders?: InputMaybe<Array<AlertsWebhookCustomHeaderMutationInput>>;
  customPayloadBody?: InputMaybe<Scalars['String']['input']>;
  customPayloadType?: InputMaybe<AlertsWebhookCustomPayloadType>;
  name: Scalars['String']['input'];
};

export type AlertsWebhookNotificationChannelUpdateInput = {
  baseUrl?: InputMaybe<Scalars['String']['input']>;
  basicAuth?: InputMaybe<AlertsWebhookBasicAuthMutationInput>;
  customHttpHeaders?: InputMaybe<Array<AlertsWebhookCustomHeaderMutationInput>>;
  customPayloadBody?: InputMaybe<Scalars['String']['input']>;
  customPayloadType?: InputMaybe<AlertsWebhookCustomPayloadType>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AlertsXMattersNotificationChannel = AlertsNotificationChannel & {
  __typename?: 'AlertsXMattersNotificationChannel';
  associatedPolicies: AlertsNotificationChannelPoliciesResultSet;
  config: AlertsXMattersNotificationChannelConfig;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: AlertsNotificationChannelType;
};

export type AlertsXMattersNotificationChannelConfig = {
  __typename?: 'AlertsXMattersNotificationChannelConfig';
  integrationUrl: Scalars['SecureValue']['output'];
};

export type AlertsXMattersNotificationChannelCreateInput = {
  integrationUrl: Scalars['SecureValue']['input'];
  name: Scalars['String']['input'];
};

export type AlertsXMattersNotificationChannelUpdateInput = {
  integrationUrl?: InputMaybe<Scalars['SecureValue']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AnomalyDetectorConfigurationsActorStitchedFields = {
  __typename?: 'AnomalyDetectorConfigurationsActorStitchedFields';
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorThresholds?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsThreshold>>>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsAnomalyDetector>>>;
};


export type AnomalyDetectorConfigurationsActorStitchedFieldsAnomalyDetectorThresholdsArgs = {
  filters?: InputMaybe<AnomalyDetectorConfigurationsThresholdFilterInput>;
};


export type AnomalyDetectorConfigurationsActorStitchedFieldsAnomalyDetectorsArgs = {
  filters?: InputMaybe<AnomalyDetectorConfigurationsAnomalyDetectorFilterInput>;
};

export type AnomalyDetectorConfigurationsAnomalyDetector = {
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  demoMode: Scalars['Boolean']['output'];
  deviationSensitivity?: Maybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  status: AnomalyDetectorConfigurationsAnomalyDetectorStatus;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AnomalyDetectorConfigurationsAnomalyDetectorDeleteError = {
  __typename?: 'AnomalyDetectorConfigurationsAnomalyDetectorDeleteError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AnomalyDetectorConfigurationsAnomalyDetectorDeleteErrorType>;
};

export type AnomalyDetectorConfigurationsAnomalyDetectorDeleteErrorType =
  | 'NOT_AUTHORIZED';

export type AnomalyDetectorConfigurationsAnomalyDetectorDeleteResponse = {
  __typename?: 'AnomalyDetectorConfigurationsAnomalyDetectorDeleteResponse';
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsAnomalyDetectorDeleteError>>>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AnomalyDetectorConfigurationsAnomalyDetectorFilterInput = {
  anomalyDetectorIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  workloadGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
};

export type AnomalyDetectorConfigurationsAnomalyDetectorStatus =
  | 'ACTIVE'
  | 'INACTIVE';

export type AnomalyDetectorConfigurationsCreateEntityTypeAnomalyDetectorInput = {
  additionalSourceAccountIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  demoMode?: InputMaybe<Scalars['Boolean']['input']>;
  domainType: DomainTypeInput;
  includedEntityGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name: Scalars['String']['input'];
};

export type AnomalyDetectorConfigurationsCreateNrqlAnomalyDetectorInput = {
  demoMode?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  nrqlSignals: Array<AnomalyDetectorConfigurationsNrqlSignalInput>;
};

export type AnomalyDetectorConfigurationsCreateWorkloadAnomalyDetectorInput = {
  demoMode?: InputMaybe<Scalars['Boolean']['input']>;
  excludedEntityGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name: Scalars['String']['input'];
};

export type AnomalyDetectorConfigurationsDeviationSensitivity =
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM'
  | 'NONE';

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetector = AnomalyDetectorConfigurationsAnomalyDetector & {
  __typename?: 'AnomalyDetectorConfigurationsEntityTypeAnomalyDetector';
  accountId: Scalars['Int']['output'];
  additionalSourceAccountIds?: Maybe<Array<Scalars['Int']['output']>>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  demoMode: Scalars['Boolean']['output'];
  deviationSensitivity?: Maybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  domainType: DomainType;
  id: Scalars['Int']['output'];
  includedEntities?: Maybe<Array<EntityOutline>>;
  name: Scalars['String']['output'];
  status: AnomalyDetectorConfigurationsAnomalyDetectorStatus;
  thresholds?: Maybe<Array<AnomalyDetectorConfigurationsThreshold>>;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateError = {
  __typename?: 'AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateErrorType>;
};

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateErrorType =
  | 'ADDITIONAL_ACCOUNTS_NOT_AUTHORIZED'
  | 'INVALID_ENTITIES';

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateResponse';
  anomalyDetectorId?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateError>>>;
};

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateError = {
  __typename?: 'AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateErrorType>;
};

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateErrorType =
  | 'ADDITIONAL_ACCOUNTS_NOT_AUTHORIZED'
  | 'INVALID_ENTITIES'
  | 'NOT_AUTHORIZED';

export type AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateResponse';
  anomalyDetectorId?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateError>>>;
};

export type AnomalyDetectorConfigurationsNrqlAnomalyDetector = AnomalyDetectorConfigurationsAnomalyDetector & {
  __typename?: 'AnomalyDetectorConfigurationsNrqlAnomalyDetector';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  demoMode: Scalars['Boolean']['output'];
  deviationSensitivity?: Maybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  nrqlSignals: Array<AnomalyDetectorConfigurationsNrqlSignal>;
  status: AnomalyDetectorConfigurationsAnomalyDetectorStatus;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateError = {
  __typename?: 'AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsNrqlErrorType>>>;
};

export type AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateResponse';
  anomalyDetectorId?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateError>>>;
};

export type AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateError = {
  __typename?: 'AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsNrqlErrorType>>>;
};

export type AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateResponse';
  anomalyDetectorId?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateError>>>;
  nrqlSignals?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsNrqlSignal>>>;
};

export type AnomalyDetectorConfigurationsNrqlErrorType =
  | 'CASES_NOT_SUPPORTED'
  | 'COMPARE_WITH_NOT_SUPPORTED'
  | 'COULDNT_COMPLETE_QUERY'
  | 'DAQS_NOT_ALLOWED'
  | 'INVALID_NRQL'
  | 'LIMIT_NOT_SUPPORTED'
  | 'MISSING_FACET'
  | 'MULTIPLE_FACET_NOT_SUPPORTED'
  | 'MULTISELECT_NOT_SUPPORTED'
  | 'NON_NUMERIC_AGGREGATE_NOT_SUPPORTED'
  | 'NON_UNIQUE_SIGNAL_ACCOUNT'
  | 'NOT_AUTHORIZED'
  | 'SINCE_NOT_SUPPORTED'
  | 'TIMESERIES_NOT_SUPPORTED'
  | 'TOO_MANY_FACET_VALUES'
  | 'UNTIL_NOT_SUPPORTED';

export type AnomalyDetectorConfigurationsNrqlSignal = {
  __typename?: 'AnomalyDetectorConfigurationsNrqlSignal';
  accountId: Scalars['Int']['output'];
  mutedFacetValues?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  name: Scalars['String']['output'];
  nrql: Scalars['Nrql']['output'];
  queryId: Scalars['Int']['output'];
  threshold?: Maybe<AnomalyDetectorConfigurationsThreshold>;
};

export type AnomalyDetectorConfigurationsNrqlSignalInput = {
  accountId: Scalars['Int']['input'];
  mutedFacetValues?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name: Scalars['String']['input'];
  nrql: Scalars['Nrql']['input'];
};

export type AnomalyDetectorConfigurationsNrqlValidatorResponse = {
  __typename?: 'AnomalyDetectorConfigurationsNrqlValidatorResponse';
  invalidNrqlReasons?: Maybe<Array<AnomalyDetectorConfigurationsNrqlErrorType>>;
};

export type AnomalyDetectorConfigurationsSignificantDeviationDirection =
  | 'HIGHER'
  | 'HIGHER_LOWER'
  | 'LOWER';

export type AnomalyDetectorConfigurationsStatusUpdateError = {
  __typename?: 'AnomalyDetectorConfigurationsStatusUpdateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AnomalyDetectorConfigurationsStatusUpdateErrorType>;
};

export type AnomalyDetectorConfigurationsStatusUpdateErrorType =
  | 'NOT_AUTHORIZED';

export type AnomalyDetectorConfigurationsStatusUpdateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsStatusUpdateResponse';
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsStatusUpdateError>>>;
  status?: Maybe<AnomalyDetectorConfigurationsAnomalyDetectorStatus>;
};

export type AnomalyDetectorConfigurationsThreshold = {
  __typename?: 'AnomalyDetectorConfigurationsThreshold';
  deviationSensitivity?: Maybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  domainType?: Maybe<DomainType>;
  lowerLimit?: Maybe<AnomalyDetectorConfigurationsThresholdLimitValue>;
  lowerRelativePercent?: Maybe<AnomalyDetectorConfigurationsThresholdRelativePercentValue>;
  signalName: Scalars['String']['output'];
  significantDeviationDirection?: Maybe<AnomalyDetectorConfigurationsSignificantDeviationDirection>;
  upperLimit?: Maybe<AnomalyDetectorConfigurationsThresholdLimitValue>;
  upperRelativePercent?: Maybe<AnomalyDetectorConfigurationsThresholdRelativePercentValue>;
};

export type AnomalyDetectorConfigurationsThresholdFilterInput = {
  createdAt?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  domainTypes?: InputMaybe<Array<DomainTypeInput>>;
};

export type AnomalyDetectorConfigurationsThresholdInput = {
  deviationSensitivity?: InputMaybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  domainType?: InputMaybe<DomainTypeInput>;
  lowerLimit?: InputMaybe<AnomalyDetectorConfigurationsThresholdLimitValueInput>;
  lowerRelativePercent?: InputMaybe<AnomalyDetectorConfigurationsThresholdRelativePercentValueInput>;
  signalName: Scalars['String']['input'];
  significantDeviationDirection?: InputMaybe<AnomalyDetectorConfigurationsSignificantDeviationDirection>;
  upperLimit?: InputMaybe<AnomalyDetectorConfigurationsThresholdLimitValueInput>;
  upperRelativePercent?: InputMaybe<AnomalyDetectorConfigurationsThresholdRelativePercentValueInput>;
};

export type AnomalyDetectorConfigurationsThresholdLimitValue = {
  __typename?: 'AnomalyDetectorConfigurationsThresholdLimitValue';
  active?: Maybe<Scalars['Boolean']['output']>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type AnomalyDetectorConfigurationsThresholdLimitValueInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  value?: InputMaybe<Scalars['Float']['input']>;
};

export type AnomalyDetectorConfigurationsThresholdRelativePercentValue = {
  __typename?: 'AnomalyDetectorConfigurationsThresholdRelativePercentValue';
  active?: Maybe<Scalars['Boolean']['output']>;
  value?: Maybe<Scalars['Int']['output']>;
};

export type AnomalyDetectorConfigurationsThresholdRelativePercentValueInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
};

export type AnomalyDetectorConfigurationsUpdateEntityTypeAnomalyDetectorInput = {
  additionalSourceAccountIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  demoMode?: InputMaybe<Scalars['Boolean']['input']>;
  deviationSensitivity?: InputMaybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  includedEntityGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<AnomalyDetectorConfigurationsAnomalyDetectorStatus>;
  thresholds?: InputMaybe<Array<InputMaybe<AnomalyDetectorConfigurationsThresholdInput>>>;
};

export type AnomalyDetectorConfigurationsUpdateNrqlAnomalyDetectorInput = {
  deletedQueries?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  demoMode?: InputMaybe<Scalars['Boolean']['input']>;
  deviationSensitivity?: InputMaybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  name?: InputMaybe<Scalars['String']['input']>;
  newSignals?: InputMaybe<Array<InputMaybe<AnomalyDetectorConfigurationsNrqlSignalInput>>>;
  status?: InputMaybe<AnomalyDetectorConfigurationsAnomalyDetectorStatus>;
  updatedSignals?: InputMaybe<Array<InputMaybe<AnomalyDetectorConfigurationsUpdateNrqlSignalInput>>>;
};

export type AnomalyDetectorConfigurationsUpdateNrqlSignalInput = {
  mutedFacetValues?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  queryId: Scalars['Int']['input'];
  threshold?: InputMaybe<AnomalyDetectorConfigurationsThresholdInput>;
};

export type AnomalyDetectorConfigurationsUpdateWorkloadAnomalyDetectorInput = {
  demoMode?: InputMaybe<Scalars['Boolean']['input']>;
  deviationSensitivity?: InputMaybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  excludedEntityGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<AnomalyDetectorConfigurationsAnomalyDetectorStatus>;
  thresholds?: InputMaybe<Array<InputMaybe<AnomalyDetectorConfigurationsThresholdInput>>>;
};

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetector = AnomalyDetectorConfigurationsAnomalyDetector & {
  __typename?: 'AnomalyDetectorConfigurationsWorkloadAnomalyDetector';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  demoMode: Scalars['Boolean']['output'];
  deviationSensitivity?: Maybe<AnomalyDetectorConfigurationsDeviationSensitivity>;
  excludedEntities?: Maybe<Array<EntityOutline>>;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  status: AnomalyDetectorConfigurationsAnomalyDetectorStatus;
  thresholds?: Maybe<Array<AnomalyDetectorConfigurationsThreshold>>;
  updatedAt: Scalars['EpochMilliseconds']['output'];
  workloadGuid: EntityOutline;
};

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateError = {
  __typename?: 'AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateErrorType>;
};

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateErrorType =
  | 'INVALID_ENTITIES';

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateResponse';
  anomalyDetectorId?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateError>>>;
};

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateError = {
  __typename?: 'AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateErrorType>;
};

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateErrorType =
  | 'INVALID_ENTITIES'
  | 'NOT_AUTHORIZED';

export type AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateResponse = {
  __typename?: 'AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateResponse';
  anomalyDetectorId?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Maybe<AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateError>>>;
};

export type ApiAccessActorStitchedFields = {
  __typename?: 'ApiAccessActorStitchedFields';
  key?: Maybe<ApiAccessKey>;
  keySearch?: Maybe<ApiAccessKeySearchResult>;
};


export type ApiAccessActorStitchedFieldsKeyArgs = {
  id: Scalars['ID']['input'];
  keyType: ApiAccessKeyType;
};


export type ApiAccessActorStitchedFieldsKeySearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  query: ApiAccessKeySearchQuery;
};

export type ApiAccessCreateIngestKeyInput = {
  accountId: Scalars['Int']['input'];
  ingestType: ApiAccessIngestKeyType;
  name?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
};

export type ApiAccessCreateInput = {
  ingest?: InputMaybe<Array<InputMaybe<ApiAccessCreateIngestKeyInput>>>;
  user?: InputMaybe<Array<InputMaybe<ApiAccessCreateUserKeyInput>>>;
};

export type ApiAccessCreateKeyResponse = {
  __typename?: 'ApiAccessCreateKeyResponse';
  createdKeys?: Maybe<Array<Maybe<ApiAccessKey>>>;
  errors?: Maybe<Array<Maybe<ApiAccessKeyError>>>;
};

export type ApiAccessCreateUserKeyInput = {
  accountId: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['Int']['input'];
};

export type ApiAccessDeleteInput = {
  ingestKeyIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  userKeyIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ApiAccessDeleteKeyResponse = {
  __typename?: 'ApiAccessDeleteKeyResponse';
  deletedKeys?: Maybe<Array<Maybe<ApiAccessDeletedKey>>>;
  errors?: Maybe<Array<Maybe<ApiAccessKeyError>>>;
};

export type ApiAccessDeletedKey = {
  __typename?: 'ApiAccessDeletedKey';
  id?: Maybe<Scalars['String']['output']>;
};

export type ApiAccessIngestKey = ApiAccessKey & {
  __typename?: 'ApiAccessIngestKey';
  account?: Maybe<AccountReference>;
  accountId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['EpochSeconds']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  ingestType?: Maybe<ApiAccessIngestKeyType>;
  key?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  obfuscatedKey?: Maybe<Scalars['String']['output']>;
  type?: Maybe<ApiAccessKeyType>;
};

export type ApiAccessIngestKeyError = ApiAccessKeyError & {
  __typename?: 'ApiAccessIngestKeyError';
  accountId?: Maybe<Scalars['Int']['output']>;
  errorType?: Maybe<ApiAccessIngestKeyErrorType>;
  id?: Maybe<Scalars['String']['output']>;
  ingestType?: Maybe<ApiAccessIngestKeyType>;
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<ApiAccessKeyType>;
};

export type ApiAccessIngestKeyErrorType =
  | 'FORBIDDEN'
  | 'INVALID'
  | 'NOT_FOUND';

export type ApiAccessIngestKeyType =
  | 'BROWSER'
  | 'LICENSE';

export type ApiAccessKey = {
  createdAt?: Maybe<Scalars['EpochSeconds']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  obfuscatedKey?: Maybe<Scalars['String']['output']>;
  type?: Maybe<ApiAccessKeyType>;
};

export type ApiAccessKeyError = {
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<ApiAccessKeyType>;
};

export type ApiAccessKeySearchQuery = {
  scope?: InputMaybe<ApiAccessKeySearchScope>;
  types: Array<InputMaybe<ApiAccessKeyType>>;
};

export type ApiAccessKeySearchResult = {
  __typename?: 'ApiAccessKeySearchResult';
  count?: Maybe<Scalars['Int']['output']>;
  keys?: Maybe<Array<Maybe<ApiAccessKey>>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type ApiAccessKeySearchScope = {
  accountIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  ingestTypes?: InputMaybe<Array<InputMaybe<ApiAccessIngestKeyType>>>;
  userIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type ApiAccessKeyType =
  | 'INGEST'
  | 'USER';

export type ApiAccessUpdateIngestKeyInput = {
  keyId: Scalars['String']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
};

export type ApiAccessUpdateInput = {
  ingest?: InputMaybe<Array<InputMaybe<ApiAccessUpdateIngestKeyInput>>>;
  user?: InputMaybe<Array<InputMaybe<ApiAccessUpdateUserKeyInput>>>;
};

export type ApiAccessUpdateKeyResponse = {
  __typename?: 'ApiAccessUpdateKeyResponse';
  errors?: Maybe<Array<Maybe<ApiAccessKeyError>>>;
  updatedKeys?: Maybe<Array<Maybe<ApiAccessKey>>>;
};

export type ApiAccessUpdateUserKeyInput = {
  keyId: Scalars['String']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
};

export type ApiAccessUserKey = ApiAccessKey & {
  __typename?: 'ApiAccessUserKey';
  account?: Maybe<AccountReference>;
  accountId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['EpochSeconds']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  obfuscatedKey?: Maybe<Scalars['String']['output']>;
  type?: Maybe<ApiAccessKeyType>;
  user?: Maybe<UserReference>;
  userId?: Maybe<Scalars['Int']['output']>;
};

export type ApiAccessUserKeyError = ApiAccessKeyError & {
  __typename?: 'ApiAccessUserKeyError';
  accountId?: Maybe<Scalars['Int']['output']>;
  errorType?: Maybe<ApiAccessUserKeyErrorType>;
  id?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<ApiAccessKeyType>;
  userId?: Maybe<Scalars['Int']['output']>;
};

export type ApiAccessUserKeyErrorType =
  | 'FORBIDDEN'
  | 'INVALID'
  | 'NOT_FOUND';

export type ApmApplicationDeployment = {
  __typename?: 'ApmApplicationDeployment';
  changelog?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  revision?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
  user?: Maybe<Scalars['String']['output']>;
};

export type ApmApplicationEntity = AlertableEntity & ApmBrowserApplicationEntity & Entity & {
  __typename?: 'ApmApplicationEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  apmBrowserSummary?: Maybe<ApmBrowserApplicationSummaryData>;
  apmSettings?: Maybe<AgentApplicationSettingsApmBase>;
  apmSummary?: Maybe<ApmApplicationSummaryData>;
  applicationId?: Maybe<Scalars['Int']['output']>;
  applicationInstances?: Maybe<Array<AgentEnvironmentApplicationInstance>>;
  applicationInstancesV2: AgentEnvironmentApplicationInstancesResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  connections?: Maybe<RelatedExternalsEntityResult>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  /** @deprecated This field is deprecated and no longer returns data. Please use `deploymentSearch`. */
  deployments?: Maybe<Array<Maybe<ApmApplicationDeployment>>>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroup?: Maybe<ErrorTrackingErrorGroup>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupCount?: Maybe<ErrorTrackingErrorGroupCount>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupListing?: Maybe<Array<ErrorTrackingErrorGroup>>;
  errorTrace?: Maybe<AgentTracesErrorTrace>;
  errorTraces?: Maybe<Array<Maybe<AgentTracesErrorTrace>>>;
  exception?: Maybe<StackTraceApmException>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  flamegraph?: Maybe<JavaFlightRecorderFlamegraph>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  language?: Maybe<Scalars['String']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  metricGroupingIssues?: Maybe<Array<MetricNormalizationRuleMetricGroupingIssue>>;
  metricNormalizationRule?: Maybe<MetricNormalizationRule>;
  metricNormalizationRules?: Maybe<Array<MetricNormalizationRule>>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  proactiveDetection?: Maybe<AiOpsProactiveDetection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rcairResults?: Maybe<RootCauseAnalysisResult>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relatedTransactions?: Maybe<RelatedExternalsTransactionResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  runningAgentVersions?: Maybe<ApmApplicationRunningAgentVersions>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  settings?: Maybe<ApmApplicationSettings>;
  sqlTrace?: Maybe<AgentTracesSqlTrace>;
  sqlTraces?: Maybe<Array<Maybe<AgentTracesSqlTrace>>>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadProfiles: ThreadProfilerMetadataCollection;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  transactionTrace?: Maybe<AgentTracesTransactionTrace>;
  transactionTraces?: Maybe<Array<Maybe<AgentTracesTransactionTrace>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ApmApplicationEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type ApmApplicationEntityApplicationInstancesArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  host?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};


export type ApmApplicationEntityApplicationInstancesV2Args = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type ApmApplicationEntityConnectionsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type ApmApplicationEntityDeploymentsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityErrorGroupArgs = {
  id: Scalars['ID']['input'];
};


export type ApmApplicationEntityErrorGroupCountArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityErrorGroupListingArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type ApmApplicationEntityErrorTraceArgs = {
  traceId: Scalars['String']['input'];
};


export type ApmApplicationEntityErrorTracesArgs = {
  query: AgentTracesErrorTraceQuery;
};


export type ApmApplicationEntityExceptionArgs = {
  occurrenceId: Scalars['String']['input'];
};


export type ApmApplicationEntityFlamegraphArgs = {
  hostName: Scalars['String']['input'];
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ApmApplicationEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ApmApplicationEntityMetricGroupingIssuesArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  metricNormalizationRuleIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  startTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};


export type ApmApplicationEntityMetricNormalizationRuleArgs = {
  id: Scalars['Int']['input'];
};


export type ApmApplicationEntityMetricNormalizationRulesArgs = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmApplicationEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmApplicationEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmApplicationEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type ApmApplicationEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type ApmApplicationEntityRcairResultsArgs = {
  requestId: Scalars['String']['input'];
};


export type ApmApplicationEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmApplicationEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmApplicationEntityRelatedTransactionsArgs = {
  search: RelatedExternalsSearch;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmApplicationEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type ApmApplicationEntitySqlTraceArgs = {
  traceId: Scalars['String']['input'];
};


export type ApmApplicationEntitySqlTracesArgs = {
  query: AgentTracesSqlTraceQuery;
};


export type ApmApplicationEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityThreadProfilesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmApplicationEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityTransactionTraceArgs = {
  filter?: InputMaybe<AgentTracesTransactionTraceFilter>;
  traceId: Scalars['String']['input'];
};


export type ApmApplicationEntityTransactionTracesArgs = {
  query: AgentTracesTransactionTraceQuery;
};

export type ApmApplicationEntityOutline = AlertableEntityOutline & ApmBrowserApplicationEntityOutline & EntityOutline & {
  __typename?: 'ApmApplicationEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  apmBrowserSummary?: Maybe<ApmBrowserApplicationSummaryData>;
  apmSummary?: Maybe<ApmApplicationSummaryData>;
  applicationId?: Maybe<Scalars['Int']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  language?: Maybe<Scalars['String']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  runningAgentVersions?: Maybe<ApmApplicationRunningAgentVersions>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  settings?: Maybe<ApmApplicationSettings>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ApmApplicationEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ApmApplicationEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmApplicationEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ApmApplicationEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ApmApplicationEntitySettings = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
};

export type ApmApplicationEntitySettingsResult = {
  __typename?: 'ApmApplicationEntitySettingsResult';
  entity?: Maybe<ApmApplicationEntity>;
};

export type ApmApplicationRunningAgentVersions = {
  __typename?: 'ApmApplicationRunningAgentVersions';
  maxVersion?: Maybe<Scalars['String']['output']>;
  minVersion?: Maybe<Scalars['String']['output']>;
};

export type ApmApplicationSettings = {
  __typename?: 'ApmApplicationSettings';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
  serverSideConfig?: Maybe<Scalars['Boolean']['output']>;
};

export type ApmApplicationSummaryData = {
  __typename?: 'ApmApplicationSummaryData';
  apdexScore?: Maybe<Scalars['Float']['output']>;
  errorRate?: Maybe<Scalars['Float']['output']>;
  hostCount?: Maybe<Scalars['Int']['output']>;
  instanceCount?: Maybe<Scalars['Int']['output']>;
  nonWebResponseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  nonWebThroughput?: Maybe<Scalars['Float']['output']>;
  responseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  throughput?: Maybe<Scalars['Float']['output']>;
  webResponseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  webThroughput?: Maybe<Scalars['Float']['output']>;
};

export type ApmBrowserApplicationEntity = {
  apmBrowserSummary?: Maybe<ApmBrowserApplicationSummaryData>;
};

export type ApmBrowserApplicationEntityOutline = {
  apmBrowserSummary?: Maybe<ApmBrowserApplicationSummaryData>;
};

export type ApmBrowserApplicationSummaryData = {
  __typename?: 'ApmBrowserApplicationSummaryData';
  ajaxRequestThroughput?: Maybe<Scalars['Float']['output']>;
  ajaxResponseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  jsErrorRate?: Maybe<Scalars['Float']['output']>;
  pageLoadThroughput?: Maybe<Scalars['Float']['output']>;
  pageLoadTimeAverage?: Maybe<Scalars['Float']['output']>;
};

export type ApmDatabaseInstanceEntity = AlertableEntity & Entity & {
  __typename?: 'ApmDatabaseInstanceEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  portOrPath?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  vendor?: Maybe<Scalars['String']['output']>;
};


export type ApmDatabaseInstanceEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type ApmDatabaseInstanceEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type ApmDatabaseInstanceEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ApmDatabaseInstanceEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ApmDatabaseInstanceEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmDatabaseInstanceEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmDatabaseInstanceEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type ApmDatabaseInstanceEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type ApmDatabaseInstanceEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmDatabaseInstanceEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmDatabaseInstanceEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmDatabaseInstanceEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type ApmDatabaseInstanceEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ApmDatabaseInstanceEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'ApmDatabaseInstanceEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  portOrPath?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  vendor?: Maybe<Scalars['String']['output']>;
};


export type ApmDatabaseInstanceEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ApmDatabaseInstanceEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmDatabaseInstanceEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ApmDatabaseInstanceEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ApmExternalServiceEntity = AlertableEntity & Entity & {
  __typename?: 'ApmExternalServiceEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  /** @deprecated This field is deprecated. */
  externalSummary?: Maybe<ApmExternalServiceSummaryData>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ApmExternalServiceEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type ApmExternalServiceEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type ApmExternalServiceEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ApmExternalServiceEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ApmExternalServiceEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmExternalServiceEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ApmExternalServiceEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type ApmExternalServiceEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type ApmExternalServiceEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmExternalServiceEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmExternalServiceEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ApmExternalServiceEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type ApmExternalServiceEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ApmExternalServiceEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'ApmExternalServiceEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  /** @deprecated This field is deprecated. */
  externalSummary?: Maybe<ApmExternalServiceSummaryData>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ApmExternalServiceEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ApmExternalServiceEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ApmExternalServiceEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ApmExternalServiceEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ApmExternalServiceSummaryData = {
  __typename?: 'ApmExternalServiceSummaryData';
  responseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  throughput?: Maybe<Scalars['Float']['output']>;
};

export type AuthorizationAttributes = {
  accountId: Scalars['Int']['input'];
};

export type AuthorizationAuthorizeEntityResult = {
  __typename?: 'AuthorizationAuthorizeEntityResult';
  allowed?: Maybe<Scalars['Boolean']['output']>;
};

export type AuthorizationBillableCoreUserAccount = {
  __typename?: 'AuthorizationBillableCoreUserAccount';
  accountId: Scalars['Int']['output'];
  accountName: Scalars['String']['output'];
  organizationId: Scalars['ID']['output'];
};

export type AuthorizationCapability = {
  __typename?: 'AuthorizationCapability';
  name: Scalars['String']['output'];
};

export type AuthorizationContext = {
  attributes: AuthorizationAttributes;
  relations?: InputMaybe<Array<InputMaybe<AuthorizationRelation>>>;
};

export type AuthorizationFilter = {
  names: Array<InputMaybe<Scalars['String']['input']>>;
};

export type AuthorizationManagementAccountAccessGrant = {
  accountId: Scalars['Int']['input'];
  roleId: Scalars['ID']['input'];
};

export type AuthorizationManagementAuthenticationDomain = {
  __typename?: 'AuthorizationManagementAuthenticationDomain';
  groups: AuthorizationManagementGroupSearch;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};


export type AuthorizationManagementAuthenticationDomainGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AuthorizationManagementAuthenticationDomainSearch = {
  __typename?: 'AuthorizationManagementAuthenticationDomainSearch';
  authenticationDomains: Array<AuthorizationManagementAuthenticationDomain>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AuthorizationManagementGrantAccess = {
  accountAccessGrants?: InputMaybe<Array<AuthorizationManagementAccountAccessGrant>>;
  groupAccessGrants?: InputMaybe<Array<AuthorizationManagementGroupAccessGrant>>;
  groupId: Scalars['ID']['input'];
  organizationAccessGrants?: InputMaybe<Array<AuthorizationManagementOrganizationAccessGrant>>;
};

export type AuthorizationManagementGrantAccessPayload = {
  __typename?: 'AuthorizationManagementGrantAccessPayload';
  roles: Array<AuthorizationManagementGrantedRole>;
};

export type AuthorizationManagementGrantedRole = {
  __typename?: 'AuthorizationManagementGrantedRole';
  accountId?: Maybe<Scalars['Int']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  groupId?: Maybe<Scalars['ID']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  organizationId?: Maybe<Scalars['ID']['output']>;
  roleId: Scalars['Int']['output'];
  type: Scalars['ID']['output'];
};

export type AuthorizationManagementGrantedRoleSearch = {
  __typename?: 'AuthorizationManagementGrantedRoleSearch';
  nextCursor?: Maybe<Scalars['String']['output']>;
  roles: Array<AuthorizationManagementGrantedRole>;
  totalCount: Scalars['Int']['output'];
};

export type AuthorizationManagementGroup = {
  __typename?: 'AuthorizationManagementGroup';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  roles: AuthorizationManagementGrantedRoleSearch;
};


export type AuthorizationManagementGroupRolesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
  roleId?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AuthorizationManagementGroupAccessGrant = {
  groupId: Scalars['ID']['input'];
  roleId: Scalars['ID']['input'];
};

export type AuthorizationManagementGroupSearch = {
  __typename?: 'AuthorizationManagementGroupSearch';
  groups: Array<AuthorizationManagementGroup>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type AuthorizationManagementOrganizationAccessGrant = {
  roleId: Scalars['ID']['input'];
};

export type AuthorizationManagementOrganizationStitchedFields = {
  __typename?: 'AuthorizationManagementOrganizationStitchedFields';
  authenticationDomains?: Maybe<AuthorizationManagementAuthenticationDomainSearch>;
  roles?: Maybe<AuthorizationManagementRoleSearch>;
};


export type AuthorizationManagementOrganizationStitchedFieldsAuthenticationDomainsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type AuthorizationManagementOrganizationStitchedFieldsRolesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type AuthorizationManagementRevokeAccess = {
  accountAccessGrants?: InputMaybe<Array<AuthorizationManagementAccountAccessGrant>>;
  groupAccessGrants?: InputMaybe<Array<AuthorizationManagementGroupAccessGrant>>;
  groupId: Scalars['ID']['input'];
  organizationAccessGrants?: InputMaybe<Array<AuthorizationManagementOrganizationAccessGrant>>;
};

export type AuthorizationManagementRevokeAccessPayload = {
  __typename?: 'AuthorizationManagementRevokeAccessPayload';
  roles: Array<AuthorizationManagementGrantedRole>;
};

export type AuthorizationManagementRole = {
  __typename?: 'AuthorizationManagementRole';
  displayName?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  scope: Scalars['String']['output'];
  type: Scalars['ID']['output'];
};

export type AuthorizationManagementRoleSearch = {
  __typename?: 'AuthorizationManagementRoleSearch';
  nextCursor?: Maybe<Scalars['String']['output']>;
  roles: Array<AuthorizationManagementRole>;
  totalCount: Scalars['Int']['output'];
};

export type AuthorizationObject = {
  path: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type AuthorizationRelation = {
  relation: Scalars['String']['input'];
  source: AuthorizationObject;
  target: AuthorizationObject;
};

export type AuthorizationScopeType =
  | 'ACCOUNT'
  | 'ACTOR'
  | 'GLOBAL'
  | 'GROUP'
  | 'ORGANIZATION';

export type AuthorizedAccountsFilter = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type BrowserAgentInstallType =
  | 'LITE'
  | 'PRO'
  | 'PRO_SPA';

export type BrowserApplicationEntity = AlertableEntity & Entity & {
  __typename?: 'BrowserApplicationEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  agentInstallType?: Maybe<BrowserAgentInstallType>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  applicationId?: Maybe<Scalars['Int']['output']>;
  browserProperties?: Maybe<AgentApplicationSettingsBrowserProperties>;
  browserSettings?: Maybe<AgentApplicationSettingsBrowserBase>;
  browserSummary?: Maybe<BrowserApplicationSummaryData>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  connections?: Maybe<RelatedExternalsEntityResult>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  exception?: Maybe<StackTraceBrowserException>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  metricGroupingIssues?: Maybe<Array<MetricNormalizationRuleMetricGroupingIssue>>;
  metricNormalizationRule?: Maybe<MetricNormalizationRule>;
  metricNormalizationRules?: Maybe<Array<MetricNormalizationRule>>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relatedTransactions?: Maybe<RelatedExternalsTransactionResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  runningAgentVersions?: Maybe<BrowserApplicationRunningAgentVersions>;
  segmentAllowListAggregate?: Maybe<AgentApplicationSegmentsBrowserSegmentAllowList>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  servingApmApplicationId?: Maybe<Scalars['Int']['output']>;
  settings?: Maybe<BrowserApplicationSettings>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type BrowserApplicationEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type BrowserApplicationEntityConnectionsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type BrowserApplicationEntityExceptionArgs = {
  fingerprint: Scalars['Int']['input'];
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type BrowserApplicationEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type BrowserApplicationEntityMetricGroupingIssuesArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  metricNormalizationRuleIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  startTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};


export type BrowserApplicationEntityMetricNormalizationRuleArgs = {
  id: Scalars['Int']['input'];
};


export type BrowserApplicationEntityMetricNormalizationRulesArgs = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};


export type BrowserApplicationEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type BrowserApplicationEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type BrowserApplicationEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type BrowserApplicationEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type BrowserApplicationEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type BrowserApplicationEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type BrowserApplicationEntityRelatedTransactionsArgs = {
  search: RelatedExternalsSearch;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type BrowserApplicationEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type BrowserApplicationEntitySegmentAllowListAggregateArgs = {
  filters?: InputMaybe<AgentApplicationSegmentsSegmentAllowListFilters>;
};


export type BrowserApplicationEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type BrowserApplicationEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'BrowserApplicationEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  agentInstallType?: Maybe<BrowserAgentInstallType>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  applicationId?: Maybe<Scalars['Int']['output']>;
  browserSummary?: Maybe<BrowserApplicationSummaryData>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  runningAgentVersions?: Maybe<BrowserApplicationRunningAgentVersions>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  servingApmApplicationId?: Maybe<Scalars['Int']['output']>;
  settings?: Maybe<BrowserApplicationSettings>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type BrowserApplicationEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type BrowserApplicationEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type BrowserApplicationEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type BrowserApplicationEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type BrowserApplicationRunningAgentVersions = {
  __typename?: 'BrowserApplicationRunningAgentVersions';
  maxSemanticVersion?: Maybe<Scalars['SemVer']['output']>;
  maxVersion?: Maybe<Scalars['Int']['output']>;
  minSemanticVersion?: Maybe<Scalars['SemVer']['output']>;
  minVersion?: Maybe<Scalars['Int']['output']>;
};

export type BrowserApplicationSettings = {
  __typename?: 'BrowserApplicationSettings';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
};

export type BrowserApplicationSummaryData = {
  __typename?: 'BrowserApplicationSummaryData';
  ajaxRequestThroughput?: Maybe<Scalars['Float']['output']>;
  ajaxResponseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  jsErrorRate?: Maybe<Scalars['Float']['output']>;
  pageLoadThroughput?: Maybe<Scalars['Float']['output']>;
  pageLoadTimeAverage?: Maybe<Scalars['Float']['output']>;
  pageLoadTimeMedian?: Maybe<Scalars['Float']['output']>;
  spaResponseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  spaResponseTimeMedian?: Maybe<Scalars['Seconds']['output']>;
};

export type Capability = {
  __typename?: 'Capability';
  name?: Maybe<Scalars['String']['output']>;
};

export type CartographerAccountStitchedFields = {
  __typename?: 'CartographerAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  edges: CartographerEdgeListing;
  /** @deprecated This field is experimental and subject to breaking changes. */
  graph: CartographerGraph;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertices: CartographerVertexListing;
};


export type CartographerAccountStitchedFieldsEdgesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  edgeIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  graphId?: InputMaybe<Scalars['ID']['input']>;
};


export type CartographerAccountStitchedFieldsGraphArgs = {
  graphId?: InputMaybe<Scalars['ID']['input']>;
};


export type CartographerAccountStitchedFieldsVerticesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  graphId?: InputMaybe<Scalars['ID']['input']>;
  vertexClasses?: InputMaybe<Array<CartographerVertexClass>>;
  vertexIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type CartographerCollectorAttributeInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type CartographerCollectorEdgeBlueprint = {
  directed?: InputMaybe<Scalars['Boolean']['input']>;
  fromVertexName: Scalars['String']['input'];
  graphId: Scalars['String']['input'];
  toVertexName: Scalars['String']['input'];
};

export type CartographerCollectorOperationResult = {
  __typename?: 'CartographerCollectorOperationResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  result: CartographerCollectorResultType;
};

export type CartographerCollectorResultType =
  | 'FAILURE'
  | 'SUCCESS';

export type CartographerCollectorVertexBlueprint = {
  definingAttributes: Array<CartographerCollectorAttributeInput>;
  name: Scalars['String']['input'];
  vertexClass: CartographerCollectorVertexClass;
};

export type CartographerCollectorVertexClass =
  | 'APPLICATION'
  | 'CLOUDSERVICE'
  | 'CLUSTER'
  | 'DATASTORE'
  | 'HOST'
  | 'TEAM';

export type CartographerDefiningAttribute = {
  __typename?: 'CartographerDefiningAttribute';
  /** @deprecated This field is experimental and subject to breaking changes. */
  key: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Scalars['String']['output'];
};

export type CartographerEdge = {
  __typename?: 'CartographerEdge';
  /** @deprecated This field is experimental and subject to breaking changes. */
  directed: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  fromVertexId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  graphId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  toVertexId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type CartographerEdgeListing = {
  __typename?: 'CartographerEdgeListing';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  cursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  edges: Array<CartographerEdge>;
};

export type CartographerGraph = {
  __typename?: 'CartographerGraph';
  /** @deprecated This field is experimental and subject to breaking changes. */
  edges: Array<CartographerEdge>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertices: Array<CartographerVertex>;
};

export type CartographerVertex = {
  __typename?: 'CartographerVertex';
  /** @deprecated This field is experimental and subject to breaking changes. */
  definingAttributes: Array<CartographerDefiningAttribute>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexClass: CartographerVertexClass;
};

export type CartographerVertexClass =
  | 'APPLICATION'
  | 'CLOUDSERVICE'
  | 'CLUSTER'
  | 'DATASTORE'
  | 'HOST'
  | 'TEAM';

export type CartographerVertexListing = {
  __typename?: 'CartographerVertexListing';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  cursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertices: Array<CartographerVertex>;
};

export type ChangeTrackingAccountSummary = {
  __typename?: 'ChangeTrackingAccountSummary';
  account?: Maybe<AccountReference>;
  count: Scalars['Int']['output'];
  countIncludedInResults: Scalars['Int']['output'];
};

export type ChangeTrackingActorStitchedFields = {
  __typename?: 'ChangeTrackingActorStitchedFields';
  changeTrackingSearch?: Maybe<ChangeTrackingChangeTrackingSearchResult>;
};


export type ChangeTrackingActorStitchedFieldsChangeTrackingSearchArgs = {
  filter?: InputMaybe<ChangeTrackingChangeTrackingSearchFilter>;
};

export type ChangeTrackingCategoryType =
  | 'BUSINESS_EVENT__CONVENTION'
  | 'BUSINESS_EVENT__MARKETING_CAMPAIGN'
  | 'BUSINESS_EVENT__OTHER'
  | 'CUSTOMER_DEFINED__CUSTOM'
  | 'DEPLOYMENT_LIFECYCLE__ARTIFACT_COPY'
  | 'DEPLOYMENT_LIFECYCLE__ARTIFACT_DELETION'
  | 'DEPLOYMENT_LIFECYCLE__ARTIFACT_DEPLOYMENT'
  | 'DEPLOYMENT_LIFECYCLE__ARTIFACT_MOVE'
  | 'DEPLOYMENT_LIFECYCLE__BUILD_DELETION'
  | 'DEPLOYMENT_LIFECYCLE__BUILD_PROMOTION'
  | 'DEPLOYMENT_LIFECYCLE__BUILD_UPLOAD'
  | 'DEPLOYMENT_LIFECYCLE__IMAGE_DELETION'
  | 'DEPLOYMENT_LIFECYCLE__IMAGE_PROMOTION'
  | 'DEPLOYMENT_LIFECYCLE__IMAGE_PUSH'
  | 'DEPLOYMENT_LIFECYCLE__RELEASE_BUNDLE_CREATION'
  | 'DEPLOYMENT_LIFECYCLE__RELEASE_BUNDLE_DELETION'
  | 'DEPLOYMENT_LIFECYCLE__RELEASE_BUNDLE_SIGN'
  | 'DEPLOYMENT__BASIC'
  | 'DEPLOYMENT__BLUE_GREEN'
  | 'DEPLOYMENT__CANARY'
  | 'DEPLOYMENT__OTHER'
  | 'DEPLOYMENT__ROLLING'
  | 'DEPLOYMENT__SHADOW'
  | 'OPERATIONAL__CRASH'
  | 'OPERATIONAL__OTHER'
  | 'OPERATIONAL__SCHEDULED_MAINTENANCE_PERIOD'
  | 'OPERATIONAL__SERVER_REBOOT';

export type ChangeTrackingCategoryTypeSummary = {
  __typename?: 'ChangeTrackingCategoryTypeSummary';
  categoryType: ChangeTrackingCategoryType;
  count: Scalars['Int']['output'];
  countIncludedInResults: Scalars['Int']['output'];
};

export type ChangeTrackingChangeTrackingEvent = {
  __typename?: 'ChangeTrackingChangeTrackingEvent';
  category: Scalars['String']['output'];
  categoryType: ChangeTrackingCategoryType;
  changeTrackingId: Scalars['String']['output'];
  customAttributes?: Maybe<Scalars['ChangeTrackingRawCustomAttributesMap']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  entity?: Maybe<EntityOutline>;
  groupId?: Maybe<Scalars['String']['output']>;
  timestamp: Scalars['EpochMilliseconds']['output'];
  type: Scalars['String']['output'];
  user?: Maybe<Scalars['String']['output']>;
};

export type ChangeTrackingChangeTrackingInput = {
  categoryType: ChangeTrackingCategoryType;
  customAttributes?: InputMaybe<Scalars['ChangeTrackingRawCustomAttributesMap']['input']>;
  customType?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
};

export type ChangeTrackingChangeTrackingResponse = {
  __typename?: 'ChangeTrackingChangeTrackingResponse';
  changeTrackingEvent?: Maybe<ChangeTrackingChangeTrackingEvent>;
  messages?: Maybe<Array<Scalars['String']['output']>>;
};

export type ChangeTrackingChangeTrackingSearchFilter = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  timeWindow?: InputMaybe<ChangeTrackingTimeWindowInputWithDefaults>;
};

export type ChangeTrackingChangeTrackingSearchResult = {
  __typename?: 'ChangeTrackingChangeTrackingSearchResult';
  results: Array<Maybe<ChangeTrackingChangeTrackingEvent>>;
  summary?: Maybe<ChangeTrackingResultSummary>;
};

export type ChangeTrackingDataHandlingRules = {
  validationFlags?: InputMaybe<Array<ChangeTrackingValidationFlag>>;
};

export type ChangeTrackingDeployment = {
  __typename?: 'ChangeTrackingDeployment';
  changelog?: Maybe<Scalars['String']['output']>;
  commit?: Maybe<Scalars['String']['output']>;
  customAttributes?: Maybe<Scalars['ChangeTrackingRawCustomAttributesMap']['output']>;
  deepLink?: Maybe<Scalars['String']['output']>;
  deploymentId?: Maybe<Scalars['String']['output']>;
  deploymentType?: Maybe<ChangeTrackingDeploymentType>;
  description?: Maybe<Scalars['String']['output']>;
  entityGuid: Scalars['EntityGuid']['output'];
  groupId?: Maybe<Scalars['String']['output']>;
  timestamp: Scalars['EpochMilliseconds']['output'];
  user?: Maybe<Scalars['String']['output']>;
  version: Scalars['String']['output'];
};

export type ChangeTrackingDeploymentInput = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  commit?: InputMaybe<Scalars['String']['input']>;
  customAttributes?: InputMaybe<Scalars['ChangeTrackingRawCustomAttributesMap']['input']>;
  deepLink?: InputMaybe<Scalars['String']['input']>;
  deploymentType?: InputMaybe<ChangeTrackingDeploymentType>;
  description?: InputMaybe<Scalars['String']['input']>;
  entityGuid: Scalars['EntityGuid']['input'];
  groupId?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  user?: InputMaybe<Scalars['String']['input']>;
  version: Scalars['String']['input'];
};

export type ChangeTrackingDeploymentSearchResult = {
  __typename?: 'ChangeTrackingDeploymentSearchResult';
  results?: Maybe<Array<Maybe<ChangeTrackingDeployment>>>;
};

export type ChangeTrackingDeploymentType =
  | 'BASIC'
  | 'BLUE_GREEN'
  | 'CANARY'
  | 'OTHER'
  | 'ROLLING'
  | 'SHADOW';

export type ChangeTrackingEntitySummary = {
  __typename?: 'ChangeTrackingEntitySummary';
  count: Scalars['Int']['output'];
  countIncludedInResults: Scalars['Int']['output'];
  entity?: Maybe<EntityOutline>;
};

export type ChangeTrackingResultSummary = {
  __typename?: 'ChangeTrackingResultSummary';
  accountSummary: Array<ChangeTrackingAccountSummary>;
  categoryTypeSummary: Array<ChangeTrackingCategoryTypeSummary>;
  entitySummary: Array<ChangeTrackingEntitySummary>;
};

export type ChangeTrackingSearchFilter = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  rpmIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  timeWindow?: InputMaybe<ChangeTrackingTimeWindowInputWithDefaults>;
};

export type ChangeTrackingTimeWindowInputWithDefaults = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  startTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};

export type ChangeTrackingValidationFlag =
  | 'FAIL_ON_FIELD_LENGTH'
  | 'FAIL_ON_REST_API_FAILURES';

export type ChaosConfiguration = {
  fieldErrors?: InputMaybe<Array<InputMaybe<ChaosFieldError>>>;
  latency?: InputMaybe<Scalars['Milliseconds']['input']>;
  nerdGraphKey?: InputMaybe<Scalars['String']['input']>;
};

export type ChaosFieldError = {
  name: Scalars['String']['input'];
  probability?: InputMaybe<Scalars['Float']['input']>;
};

export type ChartFormatType =
  | 'PDF'
  | 'PNG';

export type ChartImageType =
  | 'APDEX'
  | 'AREA'
  | 'BAR'
  | 'BASELINE'
  | 'BILLBOARD'
  | 'BULLET'
  | 'EVENT_FEED'
  | 'FUNNEL'
  | 'HEATMAP'
  | 'HISTOGRAM'
  | 'LINE'
  | 'PIE'
  | 'SCATTER'
  | 'STACKED_HORIZONTAL_BAR'
  | 'TABLE'
  | 'VERTICAL_BAR';

export type ClassicNavigationFeature = {
  __typename?: 'ClassicNavigationFeature';
  group?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pathPattern?: Maybe<Scalars['String']['output']>;
  section?: Maybe<Scalars['Boolean']['output']>;
};

export type ClassicNavigationProduct = {
  __typename?: 'ClassicNavigationProduct';
  alignment?: Maybe<Scalars['String']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  urlPattern?: Maybe<Scalars['String']['output']>;
};

export type CloudAccountFields = {
  __typename?: 'CloudAccountFields';
  linkedAccount?: Maybe<CloudLinkedAccount>;
  linkedAccounts?: Maybe<Array<Maybe<CloudLinkedAccount>>>;
  provider?: Maybe<CloudProvider>;
  providers?: Maybe<Array<Maybe<CloudProvider>>>;
};


export type CloudAccountFieldsLinkedAccountArgs = {
  id?: InputMaybe<Scalars['Int']['input']>;
};


export type CloudAccountFieldsProviderArgs = {
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type CloudAccountMutationError = {
  __typename?: 'CloudAccountMutationError';
  linkedAccountId?: Maybe<Scalars['Int']['output']>;
  message: Scalars['String']['output'];
  nrAccountId: Scalars['Int']['output'];
  providerSlug?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type CloudActorFields = {
  __typename?: 'CloudActorFields';
  linkedAccounts?: Maybe<Array<Maybe<CloudLinkedAccount>>>;
};


export type CloudActorFieldsLinkedAccountsArgs = {
  provider?: InputMaybe<Scalars['String']['input']>;
};

export type CloudAlbIntegration = CloudIntegration & {
  __typename?: 'CloudAlbIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  loadBalancerPrefixes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAlbIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  loadBalancerPrefixes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudApigatewayIntegration = CloudIntegration & {
  __typename?: 'CloudApigatewayIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  stagePrefixes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudApigatewayIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  stagePrefixes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudAutoscalingIntegration = CloudIntegration & {
  __typename?: 'CloudAutoscalingIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAutoscalingIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsAppsyncIntegration = CloudIntegration & {
  __typename?: 'CloudAwsAppsyncIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsAppsyncIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsAthenaIntegration = CloudIntegration & {
  __typename?: 'CloudAwsAthenaIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsAthenaIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsCognitoIntegration = CloudIntegration & {
  __typename?: 'CloudAwsCognitoIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsCognitoIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsConnectIntegration = CloudIntegration & {
  __typename?: 'CloudAwsConnectIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsConnectIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsDirectconnectIntegration = CloudIntegration & {
  __typename?: 'CloudAwsDirectconnectIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsDirectconnectIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsDisableIntegrationsInput = {
  alb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  apigateway?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  autoscaling?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsAppsync?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsAthena?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsCognito?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsConnect?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsDirectconnect?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsDocdb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsFsx?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsGlue?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsKinesisanalytics?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsMediaconvert?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsMediapackagevod?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsMetadata?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsMq?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsMsk?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsNeptune?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsQldb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsRoute53resolver?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsStates?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsTagsGlobal?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsTransitgateway?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsWaf?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsWafv2?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsXray?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  billing?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  cloudfront?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  cloudtrail?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  dynamodb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  ebs?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  ec2?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  ecs?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  efs?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  elasticache?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  elasticbeanstalk?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  elasticsearch?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  elb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  emr?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  health?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  iam?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  iot?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  kinesis?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  kinesisFirehose?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  lambda?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  rds?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  redshift?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  route53?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  s3?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  ses?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  sns?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  sqs?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  trustedadvisor?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  vpc?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
};

export type CloudAwsDocdbIntegration = CloudIntegration & {
  __typename?: 'CloudAwsDocdbIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsDocdbIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsFsxIntegration = CloudIntegration & {
  __typename?: 'CloudAwsFsxIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsFsxIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsGlueIntegration = CloudIntegration & {
  __typename?: 'CloudAwsGlueIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsGlueIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsGovCloudLinkAccountInput = {
  accessKeyId: Scalars['String']['input'];
  awsAccountId: Scalars['String']['input'];
  metricCollectionMode?: InputMaybe<CloudMetricCollectionMode>;
  name: Scalars['String']['input'];
  secretAccessKey: Scalars['SecureValue']['input'];
};

export type CloudAwsGovCloudMigrateToAssumeroleInput = {
  arn: Scalars['String']['input'];
  linkedAccountId: Scalars['Int']['input'];
};

export type CloudAwsGovCloudProvider = CloudProvider & {
  __typename?: 'CloudAwsGovCloudProvider';
  awsAccountId: Scalars['String']['output'];
  createdAt: Scalars['EpochSeconds']['output'];
  icon: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  service?: Maybe<CloudService>;
  services: Array<CloudService>;
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};


export type CloudAwsGovCloudProviderServiceArgs = {
  slug: Scalars['String']['input'];
};

export type CloudAwsGovcloudDisableIntegrationsInput = {
  alb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  apigateway?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  autoscaling?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsDirectconnect?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  awsStates?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  cloudtrail?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  dynamodb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  ebs?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  ec2?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  elasticsearch?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  elb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  emr?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  iam?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  lambda?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  rds?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  redshift?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  route53?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  s3?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  sns?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  sqs?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
};

export type CloudAwsGovcloudIntegrationsInput = {
  alb?: InputMaybe<Array<InputMaybe<CloudAlbIntegrationInput>>>;
  apigateway?: InputMaybe<Array<InputMaybe<CloudApigatewayIntegrationInput>>>;
  autoscaling?: InputMaybe<Array<InputMaybe<CloudAutoscalingIntegrationInput>>>;
  awsDirectconnect?: InputMaybe<Array<InputMaybe<CloudAwsDirectconnectIntegrationInput>>>;
  awsStates?: InputMaybe<Array<InputMaybe<CloudAwsStatesIntegrationInput>>>;
  cloudtrail?: InputMaybe<Array<InputMaybe<CloudCloudtrailIntegrationInput>>>;
  dynamodb?: InputMaybe<Array<InputMaybe<CloudDynamodbIntegrationInput>>>;
  ebs?: InputMaybe<Array<InputMaybe<CloudEbsIntegrationInput>>>;
  ec2?: InputMaybe<Array<InputMaybe<CloudEc2IntegrationInput>>>;
  elasticsearch?: InputMaybe<Array<InputMaybe<CloudElasticsearchIntegrationInput>>>;
  elb?: InputMaybe<Array<InputMaybe<CloudElbIntegrationInput>>>;
  emr?: InputMaybe<Array<InputMaybe<CloudEmrIntegrationInput>>>;
  iam?: InputMaybe<Array<InputMaybe<CloudIamIntegrationInput>>>;
  lambda?: InputMaybe<Array<InputMaybe<CloudLambdaIntegrationInput>>>;
  rds?: InputMaybe<Array<InputMaybe<CloudRdsIntegrationInput>>>;
  redshift?: InputMaybe<Array<InputMaybe<CloudRedshiftIntegrationInput>>>;
  route53?: InputMaybe<Array<InputMaybe<CloudRoute53IntegrationInput>>>;
  s3?: InputMaybe<Array<InputMaybe<CloudS3IntegrationInput>>>;
  sns?: InputMaybe<Array<InputMaybe<CloudSnsIntegrationInput>>>;
  sqs?: InputMaybe<Array<InputMaybe<CloudSqsIntegrationInput>>>;
};

export type CloudAwsIntegrationsInput = {
  alb?: InputMaybe<Array<InputMaybe<CloudAlbIntegrationInput>>>;
  apigateway?: InputMaybe<Array<InputMaybe<CloudApigatewayIntegrationInput>>>;
  autoscaling?: InputMaybe<Array<InputMaybe<CloudAutoscalingIntegrationInput>>>;
  awsAppsync?: InputMaybe<Array<InputMaybe<CloudAwsAppsyncIntegrationInput>>>;
  awsAthena?: InputMaybe<Array<InputMaybe<CloudAwsAthenaIntegrationInput>>>;
  awsCognito?: InputMaybe<Array<InputMaybe<CloudAwsCognitoIntegrationInput>>>;
  awsConnect?: InputMaybe<Array<InputMaybe<CloudAwsConnectIntegrationInput>>>;
  awsDirectconnect?: InputMaybe<Array<InputMaybe<CloudAwsDirectconnectIntegrationInput>>>;
  awsDocdb?: InputMaybe<Array<InputMaybe<CloudAwsDocdbIntegrationInput>>>;
  awsFsx?: InputMaybe<Array<InputMaybe<CloudAwsFsxIntegrationInput>>>;
  awsGlue?: InputMaybe<Array<InputMaybe<CloudAwsGlueIntegrationInput>>>;
  awsKinesisanalytics?: InputMaybe<Array<InputMaybe<CloudAwsKinesisanalyticsIntegrationInput>>>;
  awsMediaconvert?: InputMaybe<Array<InputMaybe<CloudAwsMediaconvertIntegrationInput>>>;
  awsMediapackagevod?: InputMaybe<Array<InputMaybe<CloudAwsMediapackagevodIntegrationInput>>>;
  awsMetadata?: InputMaybe<Array<InputMaybe<CloudAwsMetadataIntegrationInput>>>;
  awsMq?: InputMaybe<Array<InputMaybe<CloudAwsMqIntegrationInput>>>;
  awsMsk?: InputMaybe<Array<InputMaybe<CloudAwsMskIntegrationInput>>>;
  awsNeptune?: InputMaybe<Array<InputMaybe<CloudAwsNeptuneIntegrationInput>>>;
  awsQldb?: InputMaybe<Array<InputMaybe<CloudAwsQldbIntegrationInput>>>;
  awsRoute53resolver?: InputMaybe<Array<InputMaybe<CloudAwsRoute53resolverIntegrationInput>>>;
  awsStates?: InputMaybe<Array<InputMaybe<CloudAwsStatesIntegrationInput>>>;
  awsTagsGlobal?: InputMaybe<Array<InputMaybe<CloudAwsTagsGlobalIntegrationInput>>>;
  awsTransitgateway?: InputMaybe<Array<InputMaybe<CloudAwsTransitgatewayIntegrationInput>>>;
  awsWaf?: InputMaybe<Array<InputMaybe<CloudAwsWafIntegrationInput>>>;
  awsWafv2?: InputMaybe<Array<InputMaybe<CloudAwsWafv2IntegrationInput>>>;
  awsXray?: InputMaybe<Array<InputMaybe<CloudAwsXrayIntegrationInput>>>;
  billing?: InputMaybe<Array<InputMaybe<CloudBillingIntegrationInput>>>;
  cloudfront?: InputMaybe<Array<InputMaybe<CloudCloudfrontIntegrationInput>>>;
  cloudtrail?: InputMaybe<Array<InputMaybe<CloudCloudtrailIntegrationInput>>>;
  dynamodb?: InputMaybe<Array<InputMaybe<CloudDynamodbIntegrationInput>>>;
  ebs?: InputMaybe<Array<InputMaybe<CloudEbsIntegrationInput>>>;
  ec2?: InputMaybe<Array<InputMaybe<CloudEc2IntegrationInput>>>;
  ecs?: InputMaybe<Array<InputMaybe<CloudEcsIntegrationInput>>>;
  efs?: InputMaybe<Array<InputMaybe<CloudEfsIntegrationInput>>>;
  elasticache?: InputMaybe<Array<InputMaybe<CloudElasticacheIntegrationInput>>>;
  elasticbeanstalk?: InputMaybe<Array<InputMaybe<CloudElasticbeanstalkIntegrationInput>>>;
  elasticsearch?: InputMaybe<Array<InputMaybe<CloudElasticsearchIntegrationInput>>>;
  elb?: InputMaybe<Array<InputMaybe<CloudElbIntegrationInput>>>;
  emr?: InputMaybe<Array<InputMaybe<CloudEmrIntegrationInput>>>;
  health?: InputMaybe<Array<InputMaybe<CloudHealthIntegrationInput>>>;
  iam?: InputMaybe<Array<InputMaybe<CloudIamIntegrationInput>>>;
  iot?: InputMaybe<Array<InputMaybe<CloudIotIntegrationInput>>>;
  kinesis?: InputMaybe<Array<InputMaybe<CloudKinesisIntegrationInput>>>;
  kinesisFirehose?: InputMaybe<Array<InputMaybe<CloudKinesisFirehoseIntegrationInput>>>;
  lambda?: InputMaybe<Array<InputMaybe<CloudLambdaIntegrationInput>>>;
  rds?: InputMaybe<Array<InputMaybe<CloudRdsIntegrationInput>>>;
  redshift?: InputMaybe<Array<InputMaybe<CloudRedshiftIntegrationInput>>>;
  route53?: InputMaybe<Array<InputMaybe<CloudRoute53IntegrationInput>>>;
  s3?: InputMaybe<Array<InputMaybe<CloudS3IntegrationInput>>>;
  ses?: InputMaybe<Array<InputMaybe<CloudSesIntegrationInput>>>;
  sns?: InputMaybe<Array<InputMaybe<CloudSnsIntegrationInput>>>;
  sqs?: InputMaybe<Array<InputMaybe<CloudSqsIntegrationInput>>>;
  trustedadvisor?: InputMaybe<Array<InputMaybe<CloudTrustedadvisorIntegrationInput>>>;
  vpc?: InputMaybe<Array<InputMaybe<CloudVpcIntegrationInput>>>;
};

export type CloudAwsKinesisanalyticsIntegration = CloudIntegration & {
  __typename?: 'CloudAwsKinesisanalyticsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsKinesisanalyticsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsLinkAccountInput = {
  arn: Scalars['String']['input'];
  metricCollectionMode?: InputMaybe<CloudMetricCollectionMode>;
  name: Scalars['String']['input'];
};

export type CloudAwsMediaconvertIntegration = CloudIntegration & {
  __typename?: 'CloudAwsMediaconvertIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsMediaconvertIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsMediapackagevodIntegration = CloudIntegration & {
  __typename?: 'CloudAwsMediapackagevodIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsMediapackagevodIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsMetadataIntegration = CloudIntegration & {
  __typename?: 'CloudAwsMetadataIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsMetadataIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsMqIntegration = CloudIntegration & {
  __typename?: 'CloudAwsMqIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsMqIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsMskIntegration = CloudIntegration & {
  __typename?: 'CloudAwsMskIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsMskIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsNeptuneIntegration = CloudIntegration & {
  __typename?: 'CloudAwsNeptuneIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsNeptuneIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsProvider = CloudProvider & {
  __typename?: 'CloudAwsProvider';
  createdAt: Scalars['EpochSeconds']['output'];
  icon: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  roleAccountId: Scalars['String']['output'];
  roleExternalId: Scalars['String']['output'];
  service?: Maybe<CloudService>;
  services: Array<CloudService>;
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};


export type CloudAwsProviderServiceArgs = {
  slug: Scalars['String']['input'];
};

export type CloudAwsQldbIntegration = CloudIntegration & {
  __typename?: 'CloudAwsQldbIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsQldbIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsRoute53resolverIntegration = CloudIntegration & {
  __typename?: 'CloudAwsRoute53resolverIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsRoute53resolverIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsStatesIntegration = CloudIntegration & {
  __typename?: 'CloudAwsStatesIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsStatesIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsTagsGlobalIntegration = CloudIntegration & {
  __typename?: 'CloudAwsTagsGlobalIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsTagsGlobalIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsTransitgatewayIntegration = CloudIntegration & {
  __typename?: 'CloudAwsTransitgatewayIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsTransitgatewayIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsWafIntegration = CloudIntegration & {
  __typename?: 'CloudAwsWafIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsWafIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsWafv2Integration = CloudIntegration & {
  __typename?: 'CloudAwsWafv2Integration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsWafv2IntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAwsXrayIntegration = CloudIntegration & {
  __typename?: 'CloudAwsXrayIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAwsXrayIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudAzureApimanagementIntegration = CloudIntegration & {
  __typename?: 'CloudAzureApimanagementIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureApimanagementIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureAppgatewayIntegration = CloudIntegration & {
  __typename?: 'CloudAzureAppgatewayIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureAppgatewayIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureAppserviceIntegration = CloudIntegration & {
  __typename?: 'CloudAzureAppserviceIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureAppserviceIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureContainersIntegration = CloudIntegration & {
  __typename?: 'CloudAzureContainersIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureContainersIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureCosmosdbIntegration = CloudIntegration & {
  __typename?: 'CloudAzureCosmosdbIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureCosmosdbIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureCostmanagementIntegration = CloudIntegration & {
  __typename?: 'CloudAzureCostmanagementIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKeys?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureCostmanagementIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKeys?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureDatafactoryIntegration = CloudIntegration & {
  __typename?: 'CloudAzureDatafactoryIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureDatafactoryIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureDisableIntegrationsInput = {
  azureApimanagement?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureAppgateway?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureAppservice?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureContainers?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureCosmosdb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureCostmanagement?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureDatafactory?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureEventhub?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureExpressroute?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureFirewalls?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureFrontdoor?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureFunctions?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureKeyvault?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureLoadbalancer?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureLogicapps?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureMachinelearning?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureMariadb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureMonitor?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureMysql?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureMysqlflexible?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azurePostgresql?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azurePostgresqlflexible?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azurePowerbidedicated?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureRediscache?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureServicebus?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureSql?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureSqlmanaged?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureStorage?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureVirtualmachine?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureVirtualnetworks?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureVms?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  azureVpngateways?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
};

export type CloudAzureEventhubIntegration = CloudIntegration & {
  __typename?: 'CloudAzureEventhubIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureEventhubIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureExpressrouteIntegration = CloudIntegration & {
  __typename?: 'CloudAzureExpressrouteIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureExpressrouteIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureFirewallsIntegration = CloudIntegration & {
  __typename?: 'CloudAzureFirewallsIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureFirewallsIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureFrontdoorIntegration = CloudIntegration & {
  __typename?: 'CloudAzureFrontdoorIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureFrontdoorIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureFunctionsIntegration = CloudIntegration & {
  __typename?: 'CloudAzureFunctionsIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureFunctionsIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureIntegrationsInput = {
  azureApimanagement?: InputMaybe<Array<InputMaybe<CloudAzureApimanagementIntegrationInput>>>;
  azureAppgateway?: InputMaybe<Array<InputMaybe<CloudAzureAppgatewayIntegrationInput>>>;
  azureAppservice?: InputMaybe<Array<InputMaybe<CloudAzureAppserviceIntegrationInput>>>;
  azureContainers?: InputMaybe<Array<InputMaybe<CloudAzureContainersIntegrationInput>>>;
  azureCosmosdb?: InputMaybe<Array<InputMaybe<CloudAzureCosmosdbIntegrationInput>>>;
  azureCostmanagement?: InputMaybe<Array<InputMaybe<CloudAzureCostmanagementIntegrationInput>>>;
  azureDatafactory?: InputMaybe<Array<InputMaybe<CloudAzureDatafactoryIntegrationInput>>>;
  azureEventhub?: InputMaybe<Array<InputMaybe<CloudAzureEventhubIntegrationInput>>>;
  azureExpressroute?: InputMaybe<Array<InputMaybe<CloudAzureExpressrouteIntegrationInput>>>;
  azureFirewalls?: InputMaybe<Array<InputMaybe<CloudAzureFirewallsIntegrationInput>>>;
  azureFrontdoor?: InputMaybe<Array<InputMaybe<CloudAzureFrontdoorIntegrationInput>>>;
  azureFunctions?: InputMaybe<Array<InputMaybe<CloudAzureFunctionsIntegrationInput>>>;
  azureKeyvault?: InputMaybe<Array<InputMaybe<CloudAzureKeyvaultIntegrationInput>>>;
  azureLoadbalancer?: InputMaybe<Array<InputMaybe<CloudAzureLoadbalancerIntegrationInput>>>;
  azureLogicapps?: InputMaybe<Array<InputMaybe<CloudAzureLogicappsIntegrationInput>>>;
  azureMachinelearning?: InputMaybe<Array<InputMaybe<CloudAzureMachinelearningIntegrationInput>>>;
  azureMariadb?: InputMaybe<Array<InputMaybe<CloudAzureMariadbIntegrationInput>>>;
  azureMonitor?: InputMaybe<Array<InputMaybe<CloudAzureMonitorIntegrationInput>>>;
  azureMysql?: InputMaybe<Array<InputMaybe<CloudAzureMysqlIntegrationInput>>>;
  azureMysqlflexible?: InputMaybe<Array<InputMaybe<CloudAzureMysqlflexibleIntegrationInput>>>;
  azurePostgresql?: InputMaybe<Array<InputMaybe<CloudAzurePostgresqlIntegrationInput>>>;
  azurePostgresqlflexible?: InputMaybe<Array<InputMaybe<CloudAzurePostgresqlflexibleIntegrationInput>>>;
  azurePowerbidedicated?: InputMaybe<Array<InputMaybe<CloudAzurePowerbidedicatedIntegrationInput>>>;
  azureRediscache?: InputMaybe<Array<InputMaybe<CloudAzureRediscacheIntegrationInput>>>;
  azureServicebus?: InputMaybe<Array<InputMaybe<CloudAzureServicebusIntegrationInput>>>;
  azureSql?: InputMaybe<Array<InputMaybe<CloudAzureSqlIntegrationInput>>>;
  azureSqlmanaged?: InputMaybe<Array<InputMaybe<CloudAzureSqlmanagedIntegrationInput>>>;
  azureStorage?: InputMaybe<Array<InputMaybe<CloudAzureStorageIntegrationInput>>>;
  azureVirtualmachine?: InputMaybe<Array<InputMaybe<CloudAzureVirtualmachineIntegrationInput>>>;
  azureVirtualnetworks?: InputMaybe<Array<InputMaybe<CloudAzureVirtualnetworksIntegrationInput>>>;
  azureVms?: InputMaybe<Array<InputMaybe<CloudAzureVmsIntegrationInput>>>;
  azureVpngateways?: InputMaybe<Array<InputMaybe<CloudAzureVpngatewaysIntegrationInput>>>;
};

export type CloudAzureKeyvaultIntegration = CloudIntegration & {
  __typename?: 'CloudAzureKeyvaultIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureKeyvaultIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureLinkAccountInput = {
  applicationId: Scalars['String']['input'];
  clientSecret: Scalars['SecureValue']['input'];
  name: Scalars['String']['input'];
  subscriptionId: Scalars['String']['input'];
  tenantId: Scalars['String']['input'];
};

export type CloudAzureLoadbalancerIntegration = CloudIntegration & {
  __typename?: 'CloudAzureLoadbalancerIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureLoadbalancerIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureLogicappsIntegration = CloudIntegration & {
  __typename?: 'CloudAzureLogicappsIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureLogicappsIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureMachinelearningIntegration = CloudIntegration & {
  __typename?: 'CloudAzureMachinelearningIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureMachinelearningIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureMariadbIntegration = CloudIntegration & {
  __typename?: 'CloudAzureMariadbIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureMariadbIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureMonitorIntegration = CloudIntegration & {
  __typename?: 'CloudAzureMonitorIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  enabled?: Maybe<Scalars['Boolean']['output']>;
  excludeTags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id?: Maybe<Scalars['Int']['output']>;
  includeTags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  resourceTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureMonitorIntegrationInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  excludeTags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  includeTags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  resourceTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureMysqlIntegration = CloudIntegration & {
  __typename?: 'CloudAzureMysqlIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureMysqlIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureMysqlflexibleIntegration = CloudIntegration & {
  __typename?: 'CloudAzureMysqlflexibleIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureMysqlflexibleIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzurePostgresqlIntegration = CloudIntegration & {
  __typename?: 'CloudAzurePostgresqlIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzurePostgresqlIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzurePostgresqlflexibleIntegration = CloudIntegration & {
  __typename?: 'CloudAzurePostgresqlflexibleIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzurePostgresqlflexibleIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzurePowerbidedicatedIntegration = CloudIntegration & {
  __typename?: 'CloudAzurePowerbidedicatedIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzurePowerbidedicatedIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureRediscacheIntegration = CloudIntegration & {
  __typename?: 'CloudAzureRediscacheIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureRediscacheIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureServicebusIntegration = CloudIntegration & {
  __typename?: 'CloudAzureServicebusIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureServicebusIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureSqlIntegration = CloudIntegration & {
  __typename?: 'CloudAzureSqlIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureSqlIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureSqlmanagedIntegration = CloudIntegration & {
  __typename?: 'CloudAzureSqlmanagedIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureSqlmanagedIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureStorageIntegration = CloudIntegration & {
  __typename?: 'CloudAzureStorageIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureStorageIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureVirtualmachineIntegration = CloudIntegration & {
  __typename?: 'CloudAzureVirtualmachineIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureVirtualmachineIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureVirtualnetworksIntegration = CloudIntegration & {
  __typename?: 'CloudAzureVirtualnetworksIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureVirtualnetworksIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureVmsIntegration = CloudIntegration & {
  __typename?: 'CloudAzureVmsIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureVmsIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudAzureVpngatewaysIntegration = CloudIntegration & {
  __typename?: 'CloudAzureVpngatewaysIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  resourceGroups?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudAzureVpngatewaysIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  resourceGroups?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CloudBaseIntegration = CloudIntegration & {
  __typename?: 'CloudBaseIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudBaseProvider = CloudProvider & {
  __typename?: 'CloudBaseProvider';
  createdAt: Scalars['EpochSeconds']['output'];
  icon: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  service?: Maybe<CloudService>;
  services: Array<CloudService>;
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};


export type CloudBaseProviderServiceArgs = {
  slug: Scalars['String']['input'];
};

export type CloudBillingIntegration = CloudIntegration & {
  __typename?: 'CloudBillingIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudBillingIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudCloudfrontIntegration = CloudIntegration & {
  __typename?: 'CloudCloudfrontIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchLambdasAtEdge?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudCloudfrontIntegrationInput = {
  fetchLambdasAtEdge?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudCloudtrailIntegration = CloudIntegration & {
  __typename?: 'CloudCloudtrailIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudCloudtrailIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudConfigField = {
  __typename?: 'CloudConfigField';
  default?: Maybe<Scalars['String']['output']>;
  deprecated?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  fetchOptions?: Maybe<Scalars['Boolean']['output']>;
  label: Scalars['String']['output'];
  multiple?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  options?: Maybe<Array<CloudConfigFieldOption>>;
  placeholder?: Maybe<Scalars['String']['output']>;
  required: Scalars['Boolean']['output'];
  type: Scalars['String']['output'];
};

export type CloudConfigFieldOption = {
  __typename?: 'CloudConfigFieldOption';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type CloudConfigureIntegrationPayload = {
  __typename?: 'CloudConfigureIntegrationPayload';
  errors: Array<CloudIntegrationMutationError>;
  integrations: Array<CloudIntegration>;
};

export type CloudDashboardTemplate = {
  __typename?: 'CloudDashboardTemplate';
  createdAt: Scalars['EpochSeconds']['output'];
  layout: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudDisableAccountIntegrationInput = {
  linkedAccountId: Scalars['Int']['input'];
};

export type CloudDisableIntegrationPayload = {
  __typename?: 'CloudDisableIntegrationPayload';
  disabledIntegrations: Array<CloudIntegration>;
  errors: Array<CloudIntegrationMutationError>;
};

export type CloudDisableIntegrationsInput = {
  aws?: InputMaybe<CloudAwsDisableIntegrationsInput>;
  awsGovcloud?: InputMaybe<CloudAwsGovcloudDisableIntegrationsInput>;
  azure?: InputMaybe<CloudAzureDisableIntegrationsInput>;
  gcp?: InputMaybe<CloudGcpDisableIntegrationsInput>;
};

export type CloudDynamodbIntegration = CloudIntegration & {
  __typename?: 'CloudDynamodbIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudDynamodbIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudEbsIntegration = CloudIntegration & {
  __typename?: 'CloudEbsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudEbsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudEc2Integration = CloudIntegration & {
  __typename?: 'CloudEc2Integration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  duplicateEc2Tags?: Maybe<Scalars['Boolean']['output']>;
  fetchIpAddresses?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudEc2IntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  duplicateEc2Tags?: InputMaybe<Scalars['Boolean']['input']>;
  fetchIpAddresses?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudEcsIntegration = CloudIntegration & {
  __typename?: 'CloudEcsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudEcsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudEfsIntegration = CloudIntegration & {
  __typename?: 'CloudEfsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudEfsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudElasticacheIntegration = CloudIntegration & {
  __typename?: 'CloudElasticacheIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudElasticacheIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudElasticbeanstalkIntegration = CloudIntegration & {
  __typename?: 'CloudElasticbeanstalkIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudElasticbeanstalkIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudElasticsearchIntegration = CloudIntegration & {
  __typename?: 'CloudElasticsearchIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchNodes?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudElasticsearchIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchNodes?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudElbIntegration = CloudIntegration & {
  __typename?: 'CloudElbIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudElbIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudEmrIntegration = CloudIntegration & {
  __typename?: 'CloudEmrIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudEmrIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudGcpAiplatformIntegration = CloudIntegration & {
  __typename?: 'CloudGcpAiplatformIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpAiplatformIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpAlloydbIntegration = CloudIntegration & {
  __typename?: 'CloudGcpAlloydbIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpAlloydbIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpAppengineIntegration = CloudIntegration & {
  __typename?: 'CloudGcpAppengineIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpAppengineIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpBigqueryIntegration = CloudIntegration & {
  __typename?: 'CloudGcpBigqueryIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTableMetrics?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpBigqueryIntegrationInput = {
  fetchTableMetrics?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpBigtableIntegration = CloudIntegration & {
  __typename?: 'CloudGcpBigtableIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpBigtableIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpComposerIntegration = CloudIntegration & {
  __typename?: 'CloudGcpComposerIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpComposerIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpDataflowIntegration = CloudIntegration & {
  __typename?: 'CloudGcpDataflowIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpDataflowIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpDataprocIntegration = CloudIntegration & {
  __typename?: 'CloudGcpDataprocIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpDataprocIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpDatastoreIntegration = CloudIntegration & {
  __typename?: 'CloudGcpDatastoreIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpDatastoreIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpDisableIntegrationsInput = {
  gcpAiplatform?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpAlloydb?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpAppengine?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpBigquery?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpBigtable?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpComposer?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpDataflow?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpDataproc?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpDatastore?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpFirebasedatabase?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpFirebasehosting?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpFirebasestorage?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpFirestore?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpFunctions?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpInterconnect?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpKubernetes?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpLoadbalancing?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpMemcache?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpPubsub?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpRedis?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpRouter?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpRun?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpSpanner?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpSql?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpStorage?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpVms?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
  gcpVpcaccess?: InputMaybe<Array<InputMaybe<CloudDisableAccountIntegrationInput>>>;
};

export type CloudGcpFirebasedatabaseIntegration = CloudIntegration & {
  __typename?: 'CloudGcpFirebasedatabaseIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpFirebasedatabaseIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpFirebasehostingIntegration = CloudIntegration & {
  __typename?: 'CloudGcpFirebasehostingIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpFirebasehostingIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpFirebasestorageIntegration = CloudIntegration & {
  __typename?: 'CloudGcpFirebasestorageIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpFirebasestorageIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpFirestoreIntegration = CloudIntegration & {
  __typename?: 'CloudGcpFirestoreIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpFirestoreIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpFunctionsIntegration = CloudIntegration & {
  __typename?: 'CloudGcpFunctionsIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpFunctionsIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpIntegrationsInput = {
  gcpAiplatform?: InputMaybe<Array<InputMaybe<CloudGcpAiplatformIntegrationInput>>>;
  gcpAlloydb?: InputMaybe<Array<InputMaybe<CloudGcpAlloydbIntegrationInput>>>;
  gcpAppengine?: InputMaybe<Array<InputMaybe<CloudGcpAppengineIntegrationInput>>>;
  gcpBigquery?: InputMaybe<Array<InputMaybe<CloudGcpBigqueryIntegrationInput>>>;
  gcpBigtable?: InputMaybe<Array<InputMaybe<CloudGcpBigtableIntegrationInput>>>;
  gcpComposer?: InputMaybe<Array<InputMaybe<CloudGcpComposerIntegrationInput>>>;
  gcpDataflow?: InputMaybe<Array<InputMaybe<CloudGcpDataflowIntegrationInput>>>;
  gcpDataproc?: InputMaybe<Array<InputMaybe<CloudGcpDataprocIntegrationInput>>>;
  gcpDatastore?: InputMaybe<Array<InputMaybe<CloudGcpDatastoreIntegrationInput>>>;
  gcpFirebasedatabase?: InputMaybe<Array<InputMaybe<CloudGcpFirebasedatabaseIntegrationInput>>>;
  gcpFirebasehosting?: InputMaybe<Array<InputMaybe<CloudGcpFirebasehostingIntegrationInput>>>;
  gcpFirebasestorage?: InputMaybe<Array<InputMaybe<CloudGcpFirebasestorageIntegrationInput>>>;
  gcpFirestore?: InputMaybe<Array<InputMaybe<CloudGcpFirestoreIntegrationInput>>>;
  gcpFunctions?: InputMaybe<Array<InputMaybe<CloudGcpFunctionsIntegrationInput>>>;
  gcpInterconnect?: InputMaybe<Array<InputMaybe<CloudGcpInterconnectIntegrationInput>>>;
  gcpKubernetes?: InputMaybe<Array<InputMaybe<CloudGcpKubernetesIntegrationInput>>>;
  gcpLoadbalancing?: InputMaybe<Array<InputMaybe<CloudGcpLoadbalancingIntegrationInput>>>;
  gcpMemcache?: InputMaybe<Array<InputMaybe<CloudGcpMemcacheIntegrationInput>>>;
  gcpPubsub?: InputMaybe<Array<InputMaybe<CloudGcpPubsubIntegrationInput>>>;
  gcpRedis?: InputMaybe<Array<InputMaybe<CloudGcpRedisIntegrationInput>>>;
  gcpRouter?: InputMaybe<Array<InputMaybe<CloudGcpRouterIntegrationInput>>>;
  gcpRun?: InputMaybe<Array<InputMaybe<CloudGcpRunIntegrationInput>>>;
  gcpSpanner?: InputMaybe<Array<InputMaybe<CloudGcpSpannerIntegrationInput>>>;
  gcpSql?: InputMaybe<Array<InputMaybe<CloudGcpSqlIntegrationInput>>>;
  gcpStorage?: InputMaybe<Array<InputMaybe<CloudGcpStorageIntegrationInput>>>;
  gcpVms?: InputMaybe<Array<InputMaybe<CloudGcpVmsIntegrationInput>>>;
  gcpVpcaccess?: InputMaybe<Array<InputMaybe<CloudGcpVpcaccessIntegrationInput>>>;
};

export type CloudGcpInterconnectIntegration = CloudIntegration & {
  __typename?: 'CloudGcpInterconnectIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpInterconnectIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpKubernetesIntegration = CloudIntegration & {
  __typename?: 'CloudGcpKubernetesIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpKubernetesIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpLinkAccountInput = {
  name: Scalars['String']['input'];
  projectId: Scalars['String']['input'];
};

export type CloudGcpLoadbalancingIntegration = CloudIntegration & {
  __typename?: 'CloudGcpLoadbalancingIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpLoadbalancingIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpMemcacheIntegration = CloudIntegration & {
  __typename?: 'CloudGcpMemcacheIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpMemcacheIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpProject = {
  __typename?: 'CloudGcpProject';
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  registered: Scalars['Boolean']['output'];
  state: Scalars['String']['output'];
};

export type CloudGcpProvider = CloudProvider & {
  __typename?: 'CloudGcpProvider';
  createdAt: Scalars['EpochSeconds']['output'];
  icon: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  projects: Array<CloudGcpProject>;
  service?: Maybe<CloudService>;
  serviceAccountId: Scalars['String']['output'];
  services: Array<CloudService>;
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};


export type CloudGcpProviderProjectsArgs = {
  state: Scalars['String']['input'];
};


export type CloudGcpProviderServiceArgs = {
  slug: Scalars['String']['input'];
};

export type CloudGcpPubsubIntegration = CloudIntegration & {
  __typename?: 'CloudGcpPubsubIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpPubsubIntegrationInput = {
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpRedisIntegration = CloudIntegration & {
  __typename?: 'CloudGcpRedisIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpRedisIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpRouterIntegration = CloudIntegration & {
  __typename?: 'CloudGcpRouterIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpRouterIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpRunIntegration = CloudIntegration & {
  __typename?: 'CloudGcpRunIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpRunIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpServiceAccountAuthPayload = {
  __typename?: 'CloudGcpServiceAccountAuthPayload';
  state: Scalars['String']['output'];
};

export type CloudGcpSpannerIntegration = CloudIntegration & {
  __typename?: 'CloudGcpSpannerIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpSpannerIntegrationInput = {
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpSqlIntegration = CloudIntegration & {
  __typename?: 'CloudGcpSqlIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpSqlIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpStorageIntegration = CloudIntegration & {
  __typename?: 'CloudGcpStorageIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpStorageIntegrationInput = {
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpVmsIntegration = CloudIntegration & {
  __typename?: 'CloudGcpVmsIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpVmsIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudGcpVpcaccessIntegration = CloudIntegration & {
  __typename?: 'CloudGcpVpcaccessIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudGcpVpcaccessIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudHealthIntegration = CloudIntegration & {
  __typename?: 'CloudHealthIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudHealthIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudIamIntegration = CloudIntegration & {
  __typename?: 'CloudIamIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudIamIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudIntegration = {
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudIntegrationMutationError = {
  __typename?: 'CloudIntegrationMutationError';
  integrationSlug?: Maybe<Scalars['String']['output']>;
  linkedAccountId?: Maybe<Scalars['Int']['output']>;
  message: Scalars['String']['output'];
  nrAccountId: Scalars['Int']['output'];
  type: Scalars['String']['output'];
};

export type CloudIntegrationsInput = {
  aws?: InputMaybe<CloudAwsIntegrationsInput>;
  awsGovcloud?: InputMaybe<CloudAwsGovcloudIntegrationsInput>;
  azure?: InputMaybe<CloudAzureIntegrationsInput>;
  gcp?: InputMaybe<CloudGcpIntegrationsInput>;
};

export type CloudIotIntegration = CloudIntegration & {
  __typename?: 'CloudIotIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudIotIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudKinesisFirehoseIntegration = CloudIntegration & {
  __typename?: 'CloudKinesisFirehoseIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudKinesisFirehoseIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudKinesisIntegration = CloudIntegration & {
  __typename?: 'CloudKinesisIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchShards?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudKinesisIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchShards?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudLambdaIntegration = CloudIntegration & {
  __typename?: 'CloudLambdaIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudLambdaIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudLinkAccountPayload = {
  __typename?: 'CloudLinkAccountPayload';
  errors: Array<CloudAccountMutationError>;
  linkedAccounts: Array<CloudLinkedAccount>;
};

export type CloudLinkCloudAccountsInput = {
  aws?: InputMaybe<Array<CloudAwsLinkAccountInput>>;
  awsGovcloud?: InputMaybe<Array<CloudAwsGovCloudLinkAccountInput>>;
  azure?: InputMaybe<Array<CloudAzureLinkAccountInput>>;
  gcp?: InputMaybe<Array<CloudGcpLinkAccountInput>>;
};

export type CloudLinkedAccount = {
  __typename?: 'CloudLinkedAccount';
  authLabel: Scalars['String']['output'];
  createdAt: Scalars['EpochSeconds']['output'];
  disabled?: Maybe<Scalars['Boolean']['output']>;
  externalId?: Maybe<Scalars['String']['output']>;
  id: Scalars['Int']['output'];
  integration: CloudIntegration;
  integrations: Array<CloudIntegration>;
  metricCollectionMode: CloudMetricCollectionMode;
  name: Scalars['String']['output'];
  nrAccountId: Scalars['Int']['output'];
  provider: CloudProvider;
  updatedAt: Scalars['EpochSeconds']['output'];
};


export type CloudLinkedAccountIntegrationArgs = {
  id: Scalars['Int']['input'];
};


export type CloudLinkedAccountIntegrationsArgs = {
  service?: InputMaybe<Scalars['String']['input']>;
};

export type CloudMetricCollectionMode =
  | 'PULL'
  | 'PUSH';

export type CloudMigrateAwsGovCloudToAssumeRolePayload = {
  __typename?: 'CloudMigrateAwsGovCloudToAssumeRolePayload';
  errors: Array<CloudAccountMutationError>;
  linkedAccounts: Array<CloudLinkedAccount>;
};

export type CloudProvider = {
  createdAt: Scalars['EpochSeconds']['output'];
  icon: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  service?: Maybe<CloudService>;
  services: Array<CloudService>;
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};


export type CloudProviderServiceArgs = {
  slug: Scalars['String']['input'];
};

export type CloudRdsIntegration = CloudIntegration & {
  __typename?: 'CloudRdsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudRdsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudRedshiftIntegration = CloudIntegration & {
  __typename?: 'CloudRedshiftIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudRedshiftIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudRenameAccountPayload = {
  __typename?: 'CloudRenameAccountPayload';
  errors: Array<CloudAccountMutationError>;
  linkedAccounts: Array<CloudLinkedAccount>;
};

export type CloudRenameAccountsInput = {
  linkedAccountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type CloudRoute53Integration = CloudIntegration & {
  __typename?: 'CloudRoute53Integration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudRoute53IntegrationInput = {
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudS3Integration = CloudIntegration & {
  __typename?: 'CloudS3Integration';
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudS3IntegrationInput = {
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudService = {
  __typename?: 'CloudService';
  configFields: Array<CloudConfigField>;
  createdAt: Scalars['EpochSeconds']['output'];
  dashboards: Array<CloudDashboardTemplate>;
  icon: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  isEnabled: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  provider: CloudProvider;
  slug: Scalars['String']['output'];
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudSesIntegration = CloudIntegration & {
  __typename?: 'CloudSesIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudSesIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudSnsIntegration = CloudIntegration & {
  __typename?: 'CloudSnsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudSnsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudSqsIntegration = CloudIntegration & {
  __typename?: 'CloudSqsIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchExtendedInventory?: Maybe<Scalars['Boolean']['output']>;
  fetchTags?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  queuePrefixes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudSqsIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchExtendedInventory?: InputMaybe<Scalars['Boolean']['input']>;
  fetchTags?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  queuePrefixes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CloudTrustedadvisorIntegration = CloudIntegration & {
  __typename?: 'CloudTrustedadvisorIntegration';
  createdAt: Scalars['EpochSeconds']['output'];
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudTrustedadvisorIntegrationInput = {
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
};

export type CloudUnlinkAccountPayload = {
  __typename?: 'CloudUnlinkAccountPayload';
  errors: Array<CloudAccountMutationError>;
  unlinkedAccounts: Array<CloudLinkedAccount>;
};

export type CloudUnlinkAccountsInput = {
  linkedAccountId: Scalars['Int']['input'];
};

export type CloudVpcIntegration = CloudIntegration & {
  __typename?: 'CloudVpcIntegration';
  awsRegions?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  createdAt: Scalars['EpochSeconds']['output'];
  fetchNatGateway?: Maybe<Scalars['Boolean']['output']>;
  fetchVpn?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  /** @deprecated [DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval */
  inventoryPollingInterval?: Maybe<Scalars['Int']['output']>;
  linkedAccount?: Maybe<CloudLinkedAccount>;
  metricsPollingInterval?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nrAccountId: Scalars['Int']['output'];
  service?: Maybe<CloudService>;
  tagKey?: Maybe<Scalars['String']['output']>;
  tagValue?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['EpochSeconds']['output'];
};

export type CloudVpcIntegrationInput = {
  awsRegions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fetchNatGateway?: InputMaybe<Scalars['Boolean']['input']>;
  fetchVpn?: InputMaybe<Scalars['Boolean']['input']>;
  inventoryPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  linkedAccountId: Scalars['Int']['input'];
  metricsPollingInterval?: InputMaybe<Scalars['Int']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagValue?: InputMaybe<Scalars['String']['input']>;
};

export type CollaborationActorStitchedFields = {
  __typename?: 'CollaborationActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  botResponsesByIds?: Maybe<Array<Maybe<CollaborationBotResponse>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  codeMarksByIds?: Maybe<Array<Maybe<CollaborationCodeMark>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentById?: Maybe<CollaborationComment>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentsByIds?: Maybe<Array<Maybe<CollaborationComment>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentsByThreadId?: Maybe<CollaborationCommentConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentsByThreadIds?: Maybe<Array<Maybe<CollaborationCommentConnection>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextById?: Maybe<CollaborationContext>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextsByEntityGuid?: Maybe<CollaborationLinkedContexts>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextsByIds?: Maybe<Array<Maybe<CollaborationContext>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  emailByAddress?: Maybe<CollaborationEmail>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  emailById?: Maybe<CollaborationEmail>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  emailsByIds?: Maybe<Array<Maybe<CollaborationEmail>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalServiceConnectionById?: Maybe<CollaborationExternalServiceConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fileById?: Maybe<CollaborationFile>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  grokMessagesByIds?: Maybe<Array<Maybe<CollaborationGrokMessage>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentionById?: Maybe<CollaborationMention>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentionsByIds?: Maybe<Array<Maybe<CollaborationMention>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscriberById?: Maybe<CollaborationSubscriber>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscribersByThreadId?: Maybe<CollaborationSubscriberConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscribersByUserId?: Maybe<CollaborationSubscriberConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscriptions?: Maybe<CollaborationSubscriberConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscriptionsUnread?: Maybe<CollaborationSubscriptionsWithUnread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadById?: Maybe<CollaborationThread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadsAll?: Maybe<CollaborationThreadConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadsByContextId?: Maybe<CollaborationThreadConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadsByContextIds?: Maybe<Array<Maybe<CollaborationThreadConnection>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadsByIds?: Maybe<Array<Maybe<CollaborationThread>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadsCountByContextId?: Maybe<CollaborationThreadsCount>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  webSocketConnectUrl?: Maybe<CollaborationSocketConnection>;
};


export type CollaborationActorStitchedFieldsBotResponsesByIdsArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type CollaborationActorStitchedFieldsCodeMarksByIdsArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type CollaborationActorStitchedFieldsCommentByIdArgs = {
  id: Scalars['ID']['input'];
};


export type CollaborationActorStitchedFieldsCommentsByIdsArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type CollaborationActorStitchedFieldsCommentsByThreadIdArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
  threadId: Scalars['ID']['input'];
};


export type CollaborationActorStitchedFieldsCommentsByThreadIdsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  threadIds: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type CollaborationActorStitchedFieldsContextByIdArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationActorStitchedFieldsContextsByEntityGuidArgs = {
  entityGuid?: InputMaybe<Scalars['EntityGuid']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
};


export type CollaborationActorStitchedFieldsContextsByIdsArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
};


export type CollaborationActorStitchedFieldsEmailByAddressArgs = {
  emailAddress: Scalars['String']['input'];
};


export type CollaborationActorStitchedFieldsEmailByIdArgs = {
  id: Scalars['ID']['input'];
};


export type CollaborationActorStitchedFieldsEmailsByIdsArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type CollaborationActorStitchedFieldsExternalServiceConnectionByIdArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationActorStitchedFieldsFileByIdArgs = {
  id: Scalars['ID']['input'];
  thumbnail?: InputMaybe<Scalars['Boolean']['input']>;
};


export type CollaborationActorStitchedFieldsGrokMessagesByIdsArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type CollaborationActorStitchedFieldsMentionByIdArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationActorStitchedFieldsMentionsByIdsArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
};


export type CollaborationActorStitchedFieldsSubscriberByIdArgs = {
  id: Scalars['ID']['input'];
};


export type CollaborationActorStitchedFieldsSubscribersByThreadIdArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
  threadId: Scalars['ID']['input'];
};


export type CollaborationActorStitchedFieldsSubscribersByUserIdArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
  subscriberId: Scalars['ID']['input'];
};


export type CollaborationActorStitchedFieldsSubscriptionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
};


export type CollaborationActorStitchedFieldsSubscriptionsUnreadArgs = {
  contextId?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationActorStitchedFieldsThreadByIdArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationActorStitchedFieldsThreadsAllArgs = {
  filter?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
};


export type CollaborationActorStitchedFieldsThreadsByContextIdArgs = {
  contextId?: InputMaybe<Scalars['ID']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
  visibility?: InputMaybe<Scalars['String']['input']>;
};


export type CollaborationActorStitchedFieldsThreadsByContextIdsArgs = {
  contextIds?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  visibility?: InputMaybe<Scalars['String']['input']>;
};


export type CollaborationActorStitchedFieldsThreadsByIdsArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
};


export type CollaborationActorStitchedFieldsThreadsCountByContextIdArgs = {
  contextId?: InputMaybe<Scalars['ID']['input']>;
};

export type CollaborationAssistantConfigInput = {
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type CollaborationBotResponse = {
  __typename?: 'CollaborationBotResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  payload?: Maybe<Scalars['String']['output']>;
};

export type CollaborationBotResponseFeedback = {
  __typename?: 'CollaborationBotResponseFeedback';
  /** @deprecated This field is experimental and subject to breaking changes. */
  rating?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  responseId?: Maybe<Scalars['ID']['output']>;
};

export type CollaborationCodeMark = {
  __typename?: 'CollaborationCodeMark';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  code?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  file?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  permalink?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  repo?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sha?: Maybe<Scalars['String']['output']>;
};

export type CollaborationComment = {
  __typename?: 'CollaborationComment';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  body: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextMetadata?: Maybe<Scalars['CollaborationRawContextMetadata']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator?: Maybe<CollaborationCommentCreator>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  edited?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalApplicationType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalCreator?: Maybe<CollaborationExternalCommentCreator>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalCreatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentions?: Maybe<Array<Maybe<CollaborationMention>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  referenceUrl?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  replyTo?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  syncStatuses?: Maybe<Array<Maybe<CollaborationCommentSyncStatus>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  systemMessageType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timePickerFrom?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timePickerTo?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type CollaborationCommentConnection = {
  __typename?: 'CollaborationCommentConnection';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entities?: Maybe<Array<Maybe<CollaborationComment>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasNextPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasPreviousPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type CollaborationCommentCreator = {
  __typename?: 'CollaborationCommentCreator';
  /** @deprecated This field is experimental and subject to breaking changes. */
  email?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userId: Scalars['ID']['output'];
};

export type CollaborationCommentSyncStatus = {
  __typename?: 'CollaborationCommentSyncStatus';
  /** @deprecated This field is experimental and subject to breaking changes. */
  appType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  error?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export type CollaborationContext = {
  __typename?: 'CollaborationContext';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextMetadata?: Maybe<Scalars['CollaborationRawContextMetadata']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityGuid?: Maybe<Scalars['EntityGuid']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestThreadCommentCreatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestThreadCommentId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestThreadCommentTime?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestThreadId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  referenceUrl?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  thread?: Maybe<CollaborationThread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  threads?: Maybe<CollaborationThreadConnection>;
};


export type CollaborationContextThreadArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationContextThreadsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type CollaborationEmail = {
  __typename?: 'CollaborationEmail';
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  emailAddress: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  registeredAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  status: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  userId?: Maybe<Scalars['ID']['output']>;
};

export type CollaborationExternalApplicationType =
  | 'CODESTREAM'
  | 'EMAIL'
  | 'SLACK'
  | 'TEAMS';

export type CollaborationExternalCommentCreator = {
  __typename?: 'CollaborationExternalCommentCreator';
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  emailAddress?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userName?: Maybe<Scalars['String']['output']>;
};

export type CollaborationExternalServiceConnection = {
  __typename?: 'CollaborationExternalServiceConnection';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  channelId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sessionId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: Scalars['String']['output'];
};

export type CollaborationExternalServiceConnectionGroup = {
  __typename?: 'CollaborationExternalServiceConnectionGroup';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entities?: Maybe<Array<Maybe<CollaborationExternalServiceConnection>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasNextPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasPreviousPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type CollaborationFile = {
  __typename?: 'CollaborationFile';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalApplicationType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalCreatorId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fileName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  filePath?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasThumbnail?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  isScreenshot?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  uploadUrl?: Maybe<Scalars['String']['output']>;
};

export type CollaborationGrokMessage = {
  __typename?: 'CollaborationGrokMessage';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  card?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  content?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  context?: Maybe<Scalars['CollaborationRawContextMetadata']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  role?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadId?: Maybe<Scalars['ID']['output']>;
};

export type CollaborationLinkedContexts = {
  __typename?: 'CollaborationLinkedContexts';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entities?: Maybe<Array<Maybe<CollaborationContext>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type CollaborationMention = {
  __typename?: 'CollaborationMention';
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  email?: Maybe<CollaborationEmail>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalApplicationType?: Maybe<CollaborationExternalApplicationType>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalCreatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentionableItemId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: Scalars['String']['output'];
};

export type CollaborationMessageSent = {
  __typename?: 'CollaborationMessageSent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sentAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  syncStatuses?: Maybe<Array<Maybe<CollaborationCommentSyncStatus>>>;
};

export type CollaborationSocketConnection = {
  __typename?: 'CollaborationSocketConnection';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nrConnectionId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  url?: Maybe<Scalars['SecureValue']['output']>;
};

export type CollaborationStatus =
  | 'ARCHIVED'
  | 'CLOSED'
  | 'OPEN';

export type CollaborationSubscriber = {
  __typename?: 'CollaborationSubscriber';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  activelySubscribed?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentsReadCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalApplicationType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalCreatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastCommentReadId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentionCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentionsReadCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  thread?: Maybe<CollaborationThread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  threadId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  unreadCommentDeletedCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userId: Scalars['ID']['output'];
};

export type CollaborationSubscriberConnection = {
  __typename?: 'CollaborationSubscriberConnection';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entities?: Maybe<Array<Maybe<CollaborationSubscriber>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasNextPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasPreviousPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type CollaborationSubscriptionsWithUnread = {
  __typename?: 'CollaborationSubscriptionsWithUnread';
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscriptions?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  unreadCommentCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  unreadThreadCount?: Maybe<Scalars['Int']['output']>;
};

export type CollaborationThread = {
  __typename?: 'CollaborationThread';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  comment?: Maybe<CollaborationComment>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  commentCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  comments?: Maybe<CollaborationCommentConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contextMetadata?: Maybe<Scalars['CollaborationRawContextMetadata']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deletedCommentCount: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalApplicationType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  externalServiceConnections?: Maybe<CollaborationExternalServiceConnectionGroup>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  firstCommentId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestCommentCreatorId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestCommentId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestCommentTime?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  referenceUrl?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscriber?: Maybe<CollaborationSubscriber>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  subscribers?: Maybe<CollaborationSubscriberConnection>;
};


export type CollaborationThreadCommentArgs = {
  id: Scalars['ID']['input'];
};


export type CollaborationThreadCommentsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type CollaborationThreadExternalServiceConnectionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};


export type CollaborationThreadSubscriberArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type CollaborationThreadSubscribersArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type CollaborationThreadConnection = {
  __typename?: 'CollaborationThreadConnection';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entities?: Maybe<Array<Maybe<CollaborationThread>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasNextPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasPreviousPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type CollaborationThreadsCount = {
  __typename?: 'CollaborationThreadsCount';
  /** @deprecated This field is experimental and subject to breaking changes. */
  closed?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  open?: Maybe<Scalars['Int']['output']>;
};

export type CollectionEntity = {
  collection?: Maybe<EntityCollection>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
};


export type CollectionEntityCollectionArgs = {
  name: Scalars['String']['input'];
};

export type CommerceAccountStitchedFields = {
  __typename?: 'CommerceAccountStitchedFields';
  annualPool?: Maybe<CommerceAnnualPool>;
  billingInfo?: Maybe<CommerceBillingInfo>;
  dunningMetadata?: Maybe<CommerceDunningMetadata>;
  eligibleOffers?: Maybe<Array<Maybe<CommerceOffer>>>;
  invoices?: Maybe<Array<Maybe<CommerceInvoice>>>;
  paymentFormEmbedInfo?: Maybe<CommercePaymentFormEmbedInfo>;
  paymentInfo?: Maybe<CommercePaymentInfo>;
  paymentType?: Maybe<CommercePaymentType>;
  subscriptions?: Maybe<Array<Maybe<CommerceBillingSubscription>>>;
  validatedAddresses?: Maybe<CommerceValidatedAddressesResult>;
};


export type CommerceAccountStitchedFieldsPaymentFormEmbedInfoArgs = {
  location: CommerceLocation;
};


export type CommerceAccountStitchedFieldsValidatedAddressesArgs = {
  address: CommerceAddressInput;
};

export type CommerceAddress = {
  __typename?: 'CommerceAddress';
  address1?: Maybe<Scalars['String']['output']>;
  address2?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  postalCode?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
};

export type CommerceAddressError = {
  __typename?: 'CommerceAddressError';
  field?: Maybe<CommerceAddressField>;
  message?: Maybe<Scalars['String']['output']>;
};

export type CommerceAddressErrors = {
  __typename?: 'CommerceAddressErrors';
  errors?: Maybe<Array<Maybe<CommerceAddressError>>>;
};

export type CommerceAddressField =
  | 'ADDRESS'
  | 'ADDRESS1'
  | 'ADDRESS2'
  | 'CITY'
  | 'COUNTRY'
  | 'POSTAL_CODE'
  | 'STATE';

export type CommerceAddressInput = {
  address1?: InputMaybe<Scalars['String']['input']>;
  address2?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  postalCode?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
};

export type CommerceAddresses = {
  __typename?: 'CommerceAddresses';
  addresses?: Maybe<Array<Maybe<CommerceAddress>>>;
};

export type CommerceAnnualPool = {
  __typename?: 'CommerceAnnualPool';
  balance?: Maybe<Scalars['String']['output']>;
  contractStartDate?: Maybe<Scalars['Date']['output']>;
  prepaidBalance?: Maybe<Scalars['String']['output']>;
  prepaidTotal?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['String']['output']>;
};

export type CommerceBaseOfferPricing = {
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
};

export type CommerceBasePricing = {
  endDate?: Maybe<Scalars['Date']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  startDate?: Maybe<Scalars['Date']['output']>;
};

export type CommerceBillingCycle =
  | 'ANNUAL'
  | 'MONTHLY';

export type CommerceBillingInfo = {
  __typename?: 'CommerceBillingInfo';
  billToAddress?: Maybe<CommerceAddress>;
  billToContact?: Maybe<CommerceContactInfo>;
  taxInfo?: Maybe<CommerceTaxInfo>;
};

export type CommerceBillingInfoInput = {
  billToAddress?: InputMaybe<CommerceAddressInput>;
  billToContact?: InputMaybe<CommerceContactInfoInput>;
  taxInfo?: InputMaybe<CommerceTaxInfoInput>;
};

export type CommerceBillingSubscription = {
  __typename?: 'CommerceBillingSubscription';
  commitments?: Maybe<Array<Maybe<CommerceCommitment>>>;
  endDate?: Maybe<Scalars['Date']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  status?: Maybe<CommerceSubscriptionStatus>;
  term?: Maybe<CommerceSubscriptionTerm>;
  termType?: Maybe<CommerceSubscriptionTermType>;
  type?: Maybe<CommerceSubscriptionType>;
};

export type CommerceBuyingProgram =
  | 'APOF'
  | 'LEGACY'
  | 'PAYG'
  | 'SAVINGS'
  | 'SITE_LICENSE'
  | 'VOLUME';

export type CommerceCancelConfirmation = {
  __typename?: 'CommerceCancelConfirmation';
  id: Scalars['String']['output'];
};

export type CommerceCancelFailure = {
  __typename?: 'CommerceCancelFailure';
  reasons?: Maybe<Array<Maybe<CommerceValidationFailure>>>;
};

export type CommerceCancelResult = CommerceCancelConfirmation | CommerceCancelFailure;

export type CommerceCardTypes =
  | 'AMERICANEXPRESS'
  | 'DISCOVER'
  | 'MASTERCARD'
  | 'VISA';

export type CommerceCategory =
  | 'ADDON'
  | 'PLAN'
  | 'PROMO'
  | 'TRIAL';

export type CommerceChannel =
  | 'SALES_LED'
  | 'SELF_SERVE';

export type CommerceCommitment = {
  __typename?: 'CommerceCommitment';
  chargedPrices?: Maybe<Array<Maybe<CommercePricing>>>;
  id?: Maybe<Scalars['ID']['output']>;
  productName?: Maybe<Scalars['String']['output']>;
  status?: Maybe<CommerceCommitmentStatus>;
};

export type CommerceCommitmentStatus =
  | 'CURRENT'
  | 'PENDING_CANCEL'
  | 'PENDING_CHANGE'
  | 'PENDING_START';

export type CommerceContactInfo = {
  __typename?: 'CommerceContactInfo';
  ccEmails?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  companyName?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
};

export type CommerceContactInfoInput = {
  ccEmails?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
};

export type CommerceDiscountOfferPricing = CommerceBaseOfferPricing & {
  __typename?: 'CommerceDiscountOfferPricing';
  discount?: Maybe<Scalars['Float']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
};

export type CommerceDiscountPricing = CommerceBaseOfferPricing & CommerceBasePricing & {
  __typename?: 'CommerceDiscountPricing';
  discount?: Maybe<Scalars['Float']['output']>;
  endDate?: Maybe<Scalars['Date']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  startDate?: Maybe<Scalars['Date']['output']>;
};

export type CommerceDunningMetadata = {
  __typename?: 'CommerceDunningMetadata';
  extendedGraceDate?: Maybe<Scalars['Date']['output']>;
  writeOffDate?: Maybe<Scalars['Date']['output']>;
};

export type CommerceFreeOfferPricing = CommerceBaseOfferPricing & {
  __typename?: 'CommerceFreeOfferPricing';
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  uom?: Maybe<Scalars['String']['output']>;
};

export type CommerceFreePricing = CommerceBaseOfferPricing & CommerceBasePricing & {
  __typename?: 'CommerceFreePricing';
  endDate?: Maybe<Scalars['Date']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  startDate?: Maybe<Scalars['Date']['output']>;
  uom?: Maybe<Scalars['String']['output']>;
};

export type CommerceInvalidOffer = {
  __typename?: 'CommerceInvalidOffer';
  message: Scalars['String']['output'];
};

export type CommerceInvalidOption = {
  __typename?: 'CommerceInvalidOption';
  message: Scalars['String']['output'];
};

export type CommerceInvoice = {
  __typename?: 'CommerceInvoice';
  amount?: Maybe<Scalars['Float']['output']>;
  balance?: Maybe<Scalars['Float']['output']>;
  date?: Maybe<Scalars['Date']['output']>;
  downloadLink?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  number?: Maybe<Scalars['String']['output']>;
  status?: Maybe<CommerceInvoiceStatus>;
};

export type CommerceInvoiceStatus =
  | 'PAID'
  | 'PAST_DUE'
  | 'UNPAID';

export type CommerceKeyValueValidationFailureDetails = {
  __typename?: 'CommerceKeyValueValidationFailureDetails';
  key: Scalars['String']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

export type CommerceLocation =
  | 'CC_DETAILS_DARK_THEME'
  | 'CC_DETAILS_LIGHT_THEME'
  | 'DEV_CC_DETAILS_DARK_THEME'
  | 'DEV_CC_DETAILS_LIGHT_THEME';

export type CommerceMetadataMap = {
  __typename?: 'CommerceMetadataMap';
  key: Scalars['String']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

export type CommerceNotificationsAccountStitchedFields = {
  __typename?: 'CommerceNotificationsAccountStitchedFields';
  banners?: Maybe<Array<Maybe<CommerceNotificationsBanner>>>;
  ctas?: Maybe<Array<Maybe<CommerceNotificationsCta>>>;
  paywall?: Maybe<CommerceNotificationsPaywall>;
};

export type CommerceNotificationsBanner = {
  __typename?: 'CommerceNotificationsBanner';
  id: Scalars['String']['output'];
};

export type CommerceNotificationsCta = {
  __typename?: 'CommerceNotificationsCta';
  id: Scalars['String']['output'];
};

export type CommerceNotificationsMute = {
  __typename?: 'CommerceNotificationsMute';
  expires: Scalars['DateTime']['output'];
};

export type CommerceNotificationsMuteNotificationResult = CommerceNotificationsMuted | CommerceNotificationsNotMuted;

export type CommerceNotificationsMuted = {
  __typename?: 'CommerceNotificationsMuted';
  mute: CommerceNotificationsMute;
};

export type CommerceNotificationsNotMuted = {
  __typename?: 'CommerceNotificationsNotMuted';
  reason: Scalars['String']['output'];
};

export type CommerceNotificationsNotificationType =
  | 'BANNER'
  | 'CTA'
  | 'PAYWALL';

export type CommerceNotificationsPaywall = {
  __typename?: 'CommerceNotificationsPaywall';
  id: Scalars['String']['output'];
  type: CommerceNotificationsPaywallType;
};

export type CommerceNotificationsPaywallType =
  | 'DISMISSIBLE'
  | 'NON_DISMISSIBLE';

export type CommerceOffer = {
  __typename?: 'CommerceOffer';
  buyingProgram: CommerceBuyingProgram;
  channels: Array<Maybe<CommerceChannel>>;
  id: Scalars['String']['output'];
  metadata: Array<Maybe<CommerceMetadataMap>>;
  name: Scalars['String']['output'];
  pricedProducts: Array<Maybe<CommercePricedProduct>>;
  productLevel?: Maybe<CommerceProductLevel>;
  type: CommerceOfferType;
};

export type CommerceOfferPricing = CommerceDiscountOfferPricing | CommerceFreeOfferPricing | CommerceStandardOfferPricing | CommerceTieredOfferPricing;

export type CommerceOfferType = {
  __typename?: 'CommerceOfferType';
  category?: Maybe<CommerceCategory>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CommerceOptionsInput = {
  additionalDaysRetention?: InputMaybe<Scalars['Int']['input']>;
  billingCycle?: InputMaybe<CommerceBillingCycle>;
  extraPool?: InputMaybe<Scalars['Int']['input']>;
  termLength?: InputMaybe<Scalars['Int']['input']>;
  topUpAmount?: InputMaybe<Scalars['Int']['input']>;
};

export type CommercePaymentFormEmbedInfo = {
  __typename?: 'CommercePaymentFormEmbedInfo';
  accountKey?: Maybe<Scalars['String']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  pageId?: Maybe<Scalars['String']['output']>;
  signature?: Maybe<Scalars['String']['output']>;
  tenantId?: Maybe<Scalars['String']['output']>;
  token?: Maybe<Scalars['SecureValue']['output']>;
  uri?: Maybe<Scalars['String']['output']>;
};

export type CommercePaymentInfo = {
  __typename?: 'CommercePaymentInfo';
  cardHolderName?: Maybe<Scalars['String']['output']>;
  cardType?: Maybe<CommerceCardTypes>;
  ccNumberLastFour?: Maybe<Scalars['String']['output']>;
  expirationMonth?: Maybe<Scalars['String']['output']>;
  expirationYear?: Maybe<Scalars['String']['output']>;
};

export type CommercePaymentType =
  | 'ACH'
  | 'CREDIT_CARD'
  | 'DEBIT_CARD'
  | 'OTHER'
  | 'PAYPAL';

export type CommercePricedProduct = {
  __typename?: 'CommercePricedProduct';
  metadata: Array<Maybe<CommerceMetadataMap>>;
  name: Scalars['String']['output'];
  prices: Array<Maybe<CommerceOfferPricing>>;
  productLine: CommerceProductLine;
  region?: Maybe<CommerceRegion>;
};

export type CommercePricing = CommerceDiscountPricing | CommerceFreePricing | CommerceStandardPricing | CommerceTieredPricing;

export type CommercePricingModel =
  | 'DISCOUNT'
  | 'FLAT_FEE'
  | 'PER_UNIT'
  | 'TIERED'
  | 'VOLUME';

export type CommercePricingTier = {
  __typename?: 'CommercePricingTier';
  endUnit?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  priceFormat?: Maybe<Scalars['String']['output']>;
  startUnit?: Maybe<Scalars['Float']['output']>;
  tier?: Maybe<Scalars['Int']['output']>;
};

export type CommercePricingType =
  | 'ONE_TIME'
  | 'RECURRING'
  | 'USAGE';

export type CommerceProductLevel =
  | 'ENTERPRISE'
  | 'FREE'
  | 'PRO'
  | 'STANDARD';

export type CommerceProductLine =
  | 'AI'
  | 'APM'
  | 'BROWSER'
  | 'COMPUTE'
  | 'DATA'
  | 'FINANCE'
  | 'INFRASTRUCTURE'
  | 'INSIGHTS'
  | 'LOGS'
  | 'METRICS'
  | 'MOBILE'
  | 'OTHER'
  | 'SCANNED_EVENTS'
  | 'SERVERLESS'
  | 'SYNTHETICS'
  | 'TRACES'
  | 'USERS';

export type CommercePurchaseConfirmation = {
  __typename?: 'CommercePurchaseConfirmation';
  id: Scalars['String']['output'];
};

export type CommercePurchaseFailure = {
  __typename?: 'CommercePurchaseFailure';
  reasons?: Maybe<Array<Maybe<CommercePurchaseFailureReason>>>;
};

export type CommercePurchaseFailureReason = CommerceInvalidOffer | CommerceInvalidOption | CommerceValidationFailure;

export type CommercePurchaseResult = CommercePurchaseConfirmation | CommercePurchaseFailure;

export type CommerceRegion =
  | 'EU'
  | 'US';

export type CommerceStandardOfferPricing = CommerceBaseOfferPricing & {
  __typename?: 'CommerceStandardOfferPricing';
  price?: Maybe<Scalars['Float']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  uom?: Maybe<Scalars['String']['output']>;
};

export type CommerceStandardPricing = CommerceBaseOfferPricing & CommerceBasePricing & {
  __typename?: 'CommerceStandardPricing';
  chargedThroughDate?: Maybe<Scalars['Date']['output']>;
  endDate?: Maybe<Scalars['Date']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  quantity?: Maybe<Scalars['Float']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  uom?: Maybe<Scalars['String']['output']>;
};

export type CommerceSubscriptionStatus =
  | 'ACTIVE'
  | 'CANCELLED';

export type CommerceSubscriptionTerm =
  | 'ANNUAL'
  | 'MONTHLY'
  | 'OTHER'
  | 'TERMED';

export type CommerceSubscriptionTermType =
  | 'EVERGREEN'
  | 'TERMED';

export type CommerceSubscriptionType =
  | 'ENTERPRISE_APOF'
  | 'ENTERPRISE_PAYG'
  | 'ENTERPRISE_SAVINGS'
  | 'ENTERPRISE_VOLUME'
  | 'FREE_PAYG'
  | 'LEGACY'
  | 'OTHER'
  | 'PRO_APOF'
  | 'PRO_PAYG'
  | 'PRO_SAVINGS'
  | 'PRO_VOLUME'
  | 'STANDARD_PAYG';

export type CommerceTaxInfo = {
  __typename?: 'CommerceTaxInfo';
  vatId?: Maybe<Scalars['String']['output']>;
  vatStatus?: Maybe<CommerceVatStatus>;
};

export type CommerceTaxInfoInput = {
  vatId?: InputMaybe<Scalars['String']['input']>;
  vatStatus?: InputMaybe<CommerceVatStatus>;
};

export type CommerceTieredOfferPricing = CommerceBaseOfferPricing & {
  __typename?: 'CommerceTieredOfferPricing';
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  tiers?: Maybe<Array<Maybe<CommercePricingTier>>>;
  uom?: Maybe<Scalars['String']['output']>;
};

export type CommerceTieredPricing = CommerceBaseOfferPricing & CommerceBasePricing & {
  __typename?: 'CommerceTieredPricing';
  endDate?: Maybe<Scalars['Date']['output']>;
  pricingModel?: Maybe<CommercePricingModel>;
  pricingName?: Maybe<Scalars['String']['output']>;
  pricingType?: Maybe<CommercePricingType>;
  startDate?: Maybe<Scalars['Date']['output']>;
  tiers?: Maybe<Array<Maybe<CommercePricingTier>>>;
  uom?: Maybe<Scalars['String']['output']>;
};

export type CommerceValidatedAddressesResult = CommerceAddressErrors | CommerceAddresses;

export type CommerceValidationFailure = {
  __typename?: 'CommerceValidationFailure';
  code: Scalars['String']['output'];
  details?: Maybe<Array<Maybe<CommerceKeyValueValidationFailureDetails>>>;
  message: Scalars['String']['output'];
};

export type CommerceVatStatus =
  | 'BUSINESS'
  | 'BUSINESS_NO_VAT_ID'
  | 'GOVT_OR_NON_PROFIT'
  | 'PERSONAL';

export type Consumption = {
  __typename?: 'Consumption';
  accounts?: Maybe<ProductRatingV2IngestAccountsResultV2>;
  customerId?: Maybe<Scalars['ID']['output']>;
  organizations?: Maybe<ProductRatingV2IngestOrganizationsResult>;
  userConsumption?: Maybe<UserConsumptionConsumptionStitchedFields>;
};


export type ConsumptionAccountsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: ProductRatingV2AccountFilterInput;
};


export type ConsumptionOrganizationsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: ProductRatingV2OrganizationFilterInput;
};

export type ContentSharingAccountContent = {
  accountIds: Array<Scalars['Int']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  url: Scalars['String']['input'];
};

export type ContentSharingContentInput = {
  accountContent?: InputMaybe<ContentSharingAccountContent>;
  entityContent?: InputMaybe<ContentSharingEntityContent>;
};

export type ContentSharingEmailRecipient = {
  emailAddress: Scalars['String']['input'];
};

export type ContentSharingEntityContent = {
  guids: Array<Scalars['EntityGuid']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  url: Scalars['String']['input'];
};

export type ContentSharingRecipientInput = {
  emailRecipient?: InputMaybe<ContentSharingEmailRecipient>;
};

export type ContentSharingShareContentResponse = {
  __typename?: 'ContentSharingShareContentResponse';
  message?: Maybe<Scalars['String']['output']>;
};

export type CorrelationAccountStitchedFields = {
  __typename?: 'CorrelationAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntersections?: Maybe<CorrelationIntersectionResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentSearchOperation?: Maybe<CorrelationApplicableIncidentSearch>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentSimilarity?: Maybe<CorrelationSimilarAttributeResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mergeEntriesByIssue?: Maybe<CorrelationMergeEntries>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mergeFeedback?: Maybe<Array<CorrelationMergeFeedback>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mergeFeedbackByRule?: Maybe<Array<CorrelationMergeFeedback>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rule?: Maybe<CorrelationRule>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rules?: Maybe<CorrelationRuleListing>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rulesCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  simulation?: Maybe<CorrelationSimulation>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  suggestion?: Maybe<CorrelationSuggestion>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  suggestions?: Maybe<CorrelationSuggestionListing>;
};


export type CorrelationAccountStitchedFieldsIncidentIntersectionsArgs = {
  incidentIds: Array<Scalars['ID']['input']>;
};


export type CorrelationAccountStitchedFieldsIncidentSearchOperationArgs = {
  searchId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsIncidentSimilarityArgs = {
  incidentIds: Array<Scalars['ID']['input']>;
  similarityAlgorithm: CorrelationSimilarityAlgorithm;
  similarityDistance: Scalars['Float']['input'];
};


export type CorrelationAccountStitchedFieldsMergeEntriesByIssueArgs = {
  issueId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsMergeFeedbackArgs = {
  issueId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsMergeFeedbackByRuleArgs = {
  ruleId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsRuleArgs = {
  ruleId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsRulesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  ruleStates?: InputMaybe<Array<CorrelationRuleState>>;
  ruleTypes?: InputMaybe<Array<CorrelationRuleType>>;
  sortMethod?: InputMaybe<CorrelationRuleSortMethod>;
};


export type CorrelationAccountStitchedFieldsSimulationArgs = {
  simulationId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsSuggestionArgs = {
  suggestionId: Scalars['ID']['input'];
};


export type CorrelationAccountStitchedFieldsSuggestionsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  sortMethod?: InputMaybe<CorrelationSuggestionSortMethod>;
  suggestionStates?: InputMaybe<Array<CorrelationSuggestionState>>;
};

export type CorrelationAllInput = {
  children: Array<CorrelationRuleExpressionInput>;
};

export type CorrelationAndInput = {
  left: CorrelationRuleExpressionInput;
  right: CorrelationRuleExpressionInput;
};

export type CorrelationAnnotationEntry = {
  __typename?: 'CorrelationAnnotationEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  key: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Scalars['String']['output'];
};

export type CorrelationAnnotationInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationApplicableIncidentSearch = {
  __typename?: 'CorrelationApplicableIncidentSearch';
  /** @deprecated This field is experimental and subject to breaking changes. */
  completedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorMessage?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsScanned: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  results: Array<CorrelationSelectorExamples>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type CorrelationAttributeData = {
  __typename?: 'CorrelationAttributeData';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Scalars['String']['output'];
};

export type CorrelationAttributeExistsInput = {
  incident: CorrelationIncidentObjectInput;
};

export type CorrelationAttributeKey = {
  __typename?: 'CorrelationAttributeKey';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  numValues: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  occurrences: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topValues: Array<CorrelationAttributeValue>;
};

export type CorrelationAttributeValue = {
  __typename?: 'CorrelationAttributeValue';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  occurrences: Scalars['Int']['output'];
};

export type CorrelationCategoricalClusteringInput = {
  threshold: Scalars['Float']['input'];
};

export type CorrelationCommonAttribute = {
  __typename?: 'CorrelationCommonAttribute';
  /** @deprecated This field is experimental and subject to breaking changes. */
  firstAttr: CorrelationAttributeData;
  /** @deprecated This field is experimental and subject to breaking changes. */
  operator: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  secondAttr: CorrelationAttributeData;
};

export type CorrelationEntityData = {
  __typename?: 'CorrelationEntityData';
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertexType?: Maybe<Scalars['String']['output']>;
};

export type CorrelationEntityReason = {
  __typename?: 'CorrelationEntityReason';
  /** @deprecated This field is experimental and subject to breaking changes. */
  firstEntity: CorrelationEntityData;
  /** @deprecated This field is experimental and subject to breaking changes. */
  operator: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  secondEntity: CorrelationEntityData;
};

export type CorrelationFilter = {
  __typename?: 'CorrelationFilter';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  operator: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Array<Scalars['String']['output']>;
};

export type CorrelationFilterPair = {
  __typename?: 'CorrelationFilterPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  firstFilter?: Maybe<CorrelationFilter>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  secondFilter?: Maybe<CorrelationFilter>;
};

export type CorrelationFixedContainsInput = {
  container: CorrelationIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type CorrelationFixedCosineDistanceInput = {
  incident: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedEndsWithInput = {
  incident: CorrelationIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type CorrelationFixedEqualInput = {
  incident: CorrelationIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type CorrelationFixedFuzzyScoreInput = {
  incident: CorrelationIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedFuzzyWuzzyAdaptiveRatioInput = {
  incident: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedFuzzyWuzzyPartialRatioInput = {
  incident: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedFuzzyWuzzyRatioInput = {
  incident: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedFuzzyWuzzyTokenSetRatioInput = {
  incident: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedGreaterThanInput = {
  compared: Scalars['Float']['input'];
  incident: CorrelationIncidentObjectInput;
};

export type CorrelationFixedGreaterThanOrEqualInput = {
  compared: Scalars['Float']['input'];
  incident: CorrelationIncidentObjectInput;
};

export type CorrelationFixedHammingDistanceInput = {
  incident: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedJaccardDistanceInput = {
  incident: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedJaroWinklerInput = {
  incident: CorrelationIncidentObjectInput;
  minDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedLessThanInput = {
  compared: Scalars['Float']['input'];
  incident: CorrelationIncidentObjectInput;
};

export type CorrelationFixedLessThanOrEqualInput = {
  compared: Scalars['Float']['input'];
  incident: CorrelationIncidentObjectInput;
};

export type CorrelationFixedLevenshteinInput = {
  incident: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedLongestCommonSubsequenceDistanceInput = {
  incident: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedNumericalEqualInput = {
  compared: Scalars['Float']['input'];
  incident: CorrelationIncidentObjectInput;
};

export type CorrelationFixedRegularExpressionInput = {
  incident: CorrelationIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type CorrelationFixedSoundExInput = {
  incident: CorrelationIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  value: Scalars['String']['input'];
};

export type CorrelationFixedStartsWithInput = {
  incident: CorrelationIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type CorrelationIncidentObjectInput = {
  attribute: Scalars['String']['input'];
  select: CorrelationIncidentSelect;
};

export type CorrelationIncidentSelect =
  | 'FIRST_INCIDENT'
  | 'SECOND_INCIDENT';

export type CorrelationIngestAccountStitchedFields = {
  __typename?: 'CorrelationIngestAccountStitchedFields';
  passiveIntegration?: Maybe<CorrelationIngestPassiveIntegration>;
  passiveIntegrations?: Maybe<Array<Maybe<CorrelationIngestPassiveIntegration>>>;
};


export type CorrelationIngestAccountStitchedFieldsPassiveIntegrationArgs = {
  origin: Scalars['String']['input'];
};

export type CorrelationIngestPassiveIntegration = {
  __typename?: 'CorrelationIngestPassiveIntegration';
  auth?: Maybe<CorrelationIngestPassiveIntegrationAuth>;
  origin?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type CorrelationIngestPassiveIntegrationAuth = {
  __typename?: 'CorrelationIngestPassiveIntegrationAuth';
  type?: Maybe<CorrelationIngestPassiveIntegrationAuthTypeEnum>;
  value?: Maybe<Scalars['String']['output']>;
};

export type CorrelationIngestPassiveIntegrationAuthTypeEnum =
  | 'EMAIL'
  | 'HEADER'
  | 'URL';

export type CorrelationIntersectionAttribute = {
  __typename?: 'CorrelationIntersectionAttribute';
  /** @deprecated This field is experimental and subject to breaking changes. */
  key: CorrelationAttributeKey;
  /** @deprecated This field is experimental and subject to breaking changes. */
  values: Array<CorrelationAttributeValue>;
};

export type CorrelationIntersectionResult = {
  __typename?: 'CorrelationIntersectionResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes: Array<CorrelationIntersectionAttribute>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalIncidents: Scalars['Int']['output'];
};

export type CorrelationIssuePriority =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type CorrelationMergeEntries = {
  __typename?: 'CorrelationMergeEntries';
  /** @deprecated This field is experimental and subject to breaking changes. */
  mergeEntries: Array<CorrelationMergeEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  parentIssueId: Scalars['ID']['output'];
};

export type CorrelationMergeEntry = {
  __typename?: 'CorrelationMergeEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  childIssueId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  mergeFeedbacks: Array<CorrelationMergeFeedback>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleMetadata: Array<CorrelationRuleMergeMetadata>;
};

export type CorrelationMergeFeedback = {
  __typename?: 'CorrelationMergeFeedback';
  /** @deprecated This field is experimental and subject to breaking changes. */
  childIssueId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  opinion: CorrelationOpinion;
  /** @deprecated This field is experimental and subject to breaking changes. */
  parentIssueId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  userId: Scalars['ID']['output'];
};

export type CorrelationNotInput = {
  child: CorrelationRuleExpressionInput;
};

export type CorrelationOneInput = {
  children: Array<CorrelationRuleExpressionInput>;
};

export type CorrelationOperationResult = {
  __typename?: 'CorrelationOperationResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  result: CorrelationResultType;
};

export type CorrelationOpinion =
  | 'DISLIKE'
  | 'LIKE';

export type CorrelationOpinionEntry = {
  __typename?: 'CorrelationOpinionEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  opinion: CorrelationOpinion;
};

export type CorrelationOrInput = {
  left: CorrelationRuleExpressionInput;
  right: CorrelationRuleExpressionInput;
};

export type CorrelationOverrideConfiguration = {
  __typename?: 'CorrelationOverrideConfiguration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority?: Maybe<CorrelationIssuePriority>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title?: Maybe<Scalars['String']['output']>;
};

export type CorrelationOverrideConfigurationInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  priority?: InputMaybe<CorrelationIssuePriority>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type CorrelationRelativeCommonPrefixInput = {
  value: Scalars['String']['input'];
};

export type CorrelationRelativeContainsInput = {
  contained: CorrelationIncidentObjectInput;
  container: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeCosineDistanceInput = {
  left: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeEndsWithInput = {
  contained: CorrelationIncidentObjectInput;
  container: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeEqualInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeFuzzyScoreInput = {
  left: CorrelationIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeFuzzyWuzzyAdaptiveRatioInput = {
  left: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeFuzzyWuzzyPartialRatioInput = {
  left: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeFuzzyWuzzyRatioInput = {
  left: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeFuzzyWuzzyTokenSetRatioInput = {
  left: CorrelationIncidentObjectInput;
  minSimilarity: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeGreaterThanInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeGreaterThanOrEqualInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeHammingDistanceInput = {
  left: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeJaccardDistanceInput = {
  left: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeJaroWinklerInput = {
  left: CorrelationIncidentObjectInput;
  minDistance: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeLessThanInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeLessThanOrEqualInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeLevenshteinInput = {
  left: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Int']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeLongestCommonSubsequenceDistanceInput = {
  left: CorrelationIncidentObjectInput;
  maxDistance: Scalars['Float']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeNumericalEqualInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeRegularExpressionInput = {
  left: CorrelationIncidentObjectInput;
  right: CorrelationIncidentObjectInput;
  value: Scalars['String']['input'];
};

export type CorrelationRelativeSoundExInput = {
  left: CorrelationIncidentObjectInput;
  minDistance: Scalars['Int']['input'];
  right: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeStartsWithInput = {
  contained: CorrelationIncidentObjectInput;
  container: CorrelationIncidentObjectInput;
};

export type CorrelationRelativeTopologicallyCommonAncestorInput = {
  ancestor?: InputMaybe<Scalars['String']['input']>;
  graphId?: InputMaybe<Scalars['ID']['input']>;
  maxHops?: InputMaybe<Scalars['Int']['input']>;
  requiredAttributes: Array<Scalars['String']['input']>;
  requiredClasses: Array<CorrelationVertexClass>;
};

export type CorrelationRelativeTopologicallyConnectedInput = {
  graphId?: InputMaybe<Scalars['ID']['input']>;
  maxHops?: InputMaybe<Scalars['Int']['input']>;
  required?: InputMaybe<Array<Scalars['String']['input']>>;
  requiredAttributes: Array<Scalars['String']['input']>;
  requiredClasses: Array<CorrelationVertexClass>;
  through?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CorrelationRelativeTopologicallyDependentInput = {
  from: Array<Scalars['ID']['input']>;
  graphId?: InputMaybe<Scalars['ID']['input']>;
  maxHops?: InputMaybe<Scalars['Int']['input']>;
  requiredAttributes: Array<Scalars['String']['input']>;
  requiredClasses: Array<CorrelationVertexClass>;
  to: Array<Scalars['ID']['input']>;
};

export type CorrelationResultType =
  | 'FAILURE'
  | 'SUCCESS';

export type CorrelationRule = {
  __typename?: 'CorrelationRule';
  /** @deprecated This field is experimental and subject to breaking changes. */
  annotations: Array<CorrelationAnnotationEntry>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationWindowLength?: Maybe<Scalars['Milliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  metadata: CorrelationRuleMetadata;
  /** @deprecated This field is experimental and subject to breaking changes. */
  minCorrelationThreshold: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  overrideConfiguration?: Maybe<CorrelationOverrideConfiguration>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleExpression: Scalars['CorrelationRuleExpression']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleType: CorrelationRuleType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  source: CorrelationRuleSource;
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: CorrelationRuleState;
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type CorrelationRuleBlueprint = {
  correlationWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  minCorrelationThreshold?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  overrideConfiguration?: InputMaybe<CorrelationOverrideConfigurationInput>;
  ruleExpression: CorrelationRuleExpressionInput;
  ruleType: CorrelationRuleType;
  source: CorrelationRuleSource;
};

export type CorrelationRuleExpressionInput = {
  all?: InputMaybe<CorrelationAllInput>;
  and?: InputMaybe<CorrelationAndInput>;
  attributeExists?: InputMaybe<CorrelationAttributeExistsInput>;
  categoricalClustering?: InputMaybe<CorrelationCategoricalClusteringInput>;
  fixedContains?: InputMaybe<CorrelationFixedContainsInput>;
  fixedCosineDistance?: InputMaybe<CorrelationFixedCosineDistanceInput>;
  fixedEndsWith?: InputMaybe<CorrelationFixedEndsWithInput>;
  fixedEqual?: InputMaybe<CorrelationFixedEqualInput>;
  fixedFuzzyScore?: InputMaybe<CorrelationFixedFuzzyScoreInput>;
  fixedFuzzyWuzzyAdaptiveRatio?: InputMaybe<CorrelationFixedFuzzyWuzzyAdaptiveRatioInput>;
  fixedFuzzyWuzzyPartialRatio?: InputMaybe<CorrelationFixedFuzzyWuzzyPartialRatioInput>;
  fixedFuzzyWuzzyRatio?: InputMaybe<CorrelationFixedFuzzyWuzzyRatioInput>;
  fixedFuzzyWuzzyTokenSetRatio?: InputMaybe<CorrelationFixedFuzzyWuzzyTokenSetRatioInput>;
  fixedGreaterThan?: InputMaybe<CorrelationFixedGreaterThanInput>;
  fixedGreaterThanOrEqual?: InputMaybe<CorrelationFixedGreaterThanOrEqualInput>;
  fixedHammingDistance?: InputMaybe<CorrelationFixedHammingDistanceInput>;
  fixedJaccardDistance?: InputMaybe<CorrelationFixedJaccardDistanceInput>;
  fixedJaroWinkler?: InputMaybe<CorrelationFixedJaroWinklerInput>;
  fixedLessThan?: InputMaybe<CorrelationFixedLessThanInput>;
  fixedLessThanOrEqual?: InputMaybe<CorrelationFixedLessThanOrEqualInput>;
  fixedLevenshtein?: InputMaybe<CorrelationFixedLevenshteinInput>;
  fixedLongestCommonSubsequenceDistance?: InputMaybe<CorrelationFixedLongestCommonSubsequenceDistanceInput>;
  fixedNumericalEqual?: InputMaybe<CorrelationFixedNumericalEqualInput>;
  fixedRegularExpression?: InputMaybe<CorrelationFixedRegularExpressionInput>;
  fixedSoundEx?: InputMaybe<CorrelationFixedSoundExInput>;
  fixedStartsWith?: InputMaybe<CorrelationFixedStartsWithInput>;
  not?: InputMaybe<CorrelationNotInput>;
  one?: InputMaybe<CorrelationOneInput>;
  or?: InputMaybe<CorrelationOrInput>;
  relativeCommonPrefix?: InputMaybe<CorrelationRelativeCommonPrefixInput>;
  relativeContains?: InputMaybe<CorrelationRelativeContainsInput>;
  relativeCosineDistance?: InputMaybe<CorrelationRelativeCosineDistanceInput>;
  relativeEndsWith?: InputMaybe<CorrelationRelativeEndsWithInput>;
  relativeEqual?: InputMaybe<CorrelationRelativeEqualInput>;
  relativeFuzzyScore?: InputMaybe<CorrelationRelativeFuzzyScoreInput>;
  relativeFuzzyWuzzyAdaptiveRatio?: InputMaybe<CorrelationRelativeFuzzyWuzzyAdaptiveRatioInput>;
  relativeFuzzyWuzzyPartialRatio?: InputMaybe<CorrelationRelativeFuzzyWuzzyPartialRatioInput>;
  relativeFuzzyWuzzyRatio?: InputMaybe<CorrelationRelativeFuzzyWuzzyRatioInput>;
  relativeFuzzyWuzzyTokenSetRatio?: InputMaybe<CorrelationRelativeFuzzyWuzzyTokenSetRatioInput>;
  relativeGreaterThan?: InputMaybe<CorrelationRelativeGreaterThanInput>;
  relativeGreaterThanOrEqual?: InputMaybe<CorrelationRelativeGreaterThanOrEqualInput>;
  relativeHammingDistance?: InputMaybe<CorrelationRelativeHammingDistanceInput>;
  relativeJaccardDistance?: InputMaybe<CorrelationRelativeJaccardDistanceInput>;
  relativeJaroWinkler?: InputMaybe<CorrelationRelativeJaroWinklerInput>;
  relativeLessThan?: InputMaybe<CorrelationRelativeLessThanInput>;
  relativeLessThanOrEqual?: InputMaybe<CorrelationRelativeLessThanOrEqualInput>;
  relativeLevenshtein?: InputMaybe<CorrelationRelativeLevenshteinInput>;
  relativeLongestCommonSubsequenceDistance?: InputMaybe<CorrelationRelativeLongestCommonSubsequenceDistanceInput>;
  relativeNumericalEqual?: InputMaybe<CorrelationRelativeNumericalEqualInput>;
  relativeRegularExpression?: InputMaybe<CorrelationRelativeRegularExpressionInput>;
  relativeSoundEx?: InputMaybe<CorrelationRelativeSoundExInput>;
  relativeStartsWith?: InputMaybe<CorrelationRelativeStartsWithInput>;
  relativeTopologicallyCommonAncestor?: InputMaybe<CorrelationRelativeTopologicallyCommonAncestorInput>;
  relativeTopologicallyConnected?: InputMaybe<CorrelationRelativeTopologicallyConnectedInput>;
  relativeTopologicallyDependent?: InputMaybe<CorrelationRelativeTopologicallyDependentInput>;
  wholeCosineDistance?: InputMaybe<CorrelationWholeCosineDistanceInput>;
  wholeJaccardSimilarity?: InputMaybe<CorrelationWholeJaccardSimilarityInput>;
};

export type CorrelationRuleListing = {
  __typename?: 'CorrelationRuleListing';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rules: Array<CorrelationRule>;
};

export type CorrelationRuleMergeMetadata = {
  __typename?: 'CorrelationRuleMergeMetadata';
  /** @deprecated This field is experimental and subject to breaking changes. */
  commonAttributes: Array<CorrelationCommonAttribute>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityReason?: Maybe<CorrelationEntityReason>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  filters: Array<CorrelationFilterPair>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleName: Scalars['String']['output'];
};

export type CorrelationRuleMetadata = {
  __typename?: 'CorrelationRuleMetadata';
  /** @deprecated This field is experimental and subject to breaking changes. */
  mergeOpinionCount: Array<CorrelationOpinionEntry>;
};

export type CorrelationRuleSortMethod =
  | 'ID'
  | 'LATEST_CREATED'
  | 'STATE_LAST_MODIFIED';

export type CorrelationRuleSource =
  | 'ADMIN'
  | 'GENERATED'
  | 'SYSTEM'
  | 'USER';

export type CorrelationRuleState =
  | 'DISABLED'
  | 'ENABLED';

export type CorrelationRuleType =
  | 'EXPLICIT'
  | 'GLOBAL'
  | 'IMPLICIT';

export type CorrelationSearchBlueprint = {
  expression: CorrelationRuleExpressionInput;
  limit?: InputMaybe<Scalars['Int']['input']>;
  retentionWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
};

export type CorrelationSelectorApplicability = {
  __typename?: 'CorrelationSelectorApplicability';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  select: CorrelationIncidentSelect;
};

export type CorrelationSelectorExamples = {
  __typename?: 'CorrelationSelectorExamples';
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidents: Array<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  select: CorrelationIncidentSelect;
};

export type CorrelationSimilarAttributeResult = {
  __typename?: 'CorrelationSimilarAttributeResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  similarAttributes: Array<CorrelationSimilarAttributes>;
};

export type CorrelationSimilarAttributes = {
  __typename?: 'CorrelationSimilarAttributes';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeKey: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeValue: Array<CorrelationSimilarPair>;
};

export type CorrelationSimilarPair = {
  __typename?: 'CorrelationSimilarPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  distance: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  valuePair: Array<Scalars['String']['output']>;
};

export type CorrelationSimilarityAlgorithm =
  | 'COSINE'
  | 'FUZZYWUZZY_ADAPTIVE_RATIO'
  | 'FUZZYWUZZY_PARTIAL_RATIO'
  | 'FUZZYWUZZY_RATIO'
  | 'FUZZYWUZZY_TOKEN_SET_RATIO'
  | 'FUZZY_SCORE'
  | 'HAMMING'
  | 'JACCARD'
  | 'JARO_WINKLER'
  | 'LEVENSHTEIN'
  | 'LONGEST_COMMON_SUBSEQUENCE';

export type CorrelationSimulation = {
  __typename?: 'CorrelationSimulation';
  /** @deprecated This field is experimental and subject to breaking changes. */
  candidateIncidents: Array<Array<Scalars['ID']['output']>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  completedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorMessage?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsApplicable: Array<CorrelationSelectorApplicability>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsCorrelated: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsIngested: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsProcessed: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  progress: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type CorrelationSimulationBlueprint = {
  correlationWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
  expression: CorrelationRuleExpressionInput;
  minCorrelationThreshold?: InputMaybe<Scalars['Int']['input']>;
  retentionWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
};

export type CorrelationSuggestion = {
  __typename?: 'CorrelationSuggestion';
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationWindowLength?: Maybe<Scalars['Milliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hash: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  minCorrelationThreshold: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  overrideConfiguration?: Maybe<CorrelationOverrideConfiguration>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleExpression: Scalars['CorrelationRuleExpression']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: CorrelationSuggestionState;
  /** @deprecated This field is experimental and subject to breaking changes. */
  suggester: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  support?: Maybe<Scalars['String']['output']>;
};

export type CorrelationSuggestionBlueprint = {
  correlationWindowLength?: InputMaybe<Scalars['Milliseconds']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  hash: Scalars['String']['input'];
  minCorrelationThreshold?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  overrideConfiguration?: InputMaybe<CorrelationOverrideConfigurationInput>;
  ruleExpression: CorrelationRuleExpressionInput;
  suggester: Scalars['String']['input'];
  support?: InputMaybe<Scalars['String']['input']>;
};

export type CorrelationSuggestionListing = {
  __typename?: 'CorrelationSuggestionListing';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  suggestions: Array<CorrelationSuggestion>;
};

export type CorrelationSuggestionSortMethod =
  | 'AGE'
  | 'ID';

export type CorrelationSuggestionState =
  | 'ACCEPTED'
  | 'DECLINED'
  | 'POSTPONED'
  | 'UNDECIDED';

export type CorrelationVertexClass =
  | 'APPLICATION'
  | 'BROWSERAPPLICATION'
  | 'CLOUDSERVICE'
  | 'CLUSTER'
  | 'DATASTORE'
  | 'HOST'
  | 'MONITOR'
  | 'TEAM';

export type CorrelationWholeCosineDistanceInput = {
  maxDistance: Scalars['Float']['input'];
};

export type CorrelationWholeJaccardSimilarityInput = {
  threshold: Scalars['Float']['input'];
};

export type CourierNotificationPreferencesActorStitchedFields = {
  __typename?: 'CourierNotificationPreferencesActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  notificationPreferences?: Maybe<Array<Maybe<CourierNotificationPreferencesNotificationPreference>>>;
};

export type CourierNotificationPreferencesNotificationPreference = {
  __typename?: 'CourierNotificationPreferencesNotificationPreference';
  /** @deprecated This field is experimental and subject to breaking changes. */
  isOptedIn: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topicId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topicName: Scalars['String']['output'];
};

export type CourierNotificationPreferencesSubscriptionStatus =
  | 'OPTED_IN'
  | 'OPTED_OUT';

export type CourierNotificationPreferencesTopic = {
  status: CourierNotificationPreferencesSubscriptionStatus;
  topicId: Scalars['String']['input'];
};

export type CourierNotificationPreferencesUpdatedNotificationPreference = {
  topic: CourierNotificationPreferencesTopic;
};

export type CourierNotificationPreferencesUpdatedNotificationPreferenceResponse = {
  __typename?: 'CourierNotificationPreferencesUpdatedNotificationPreferenceResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topicId: Scalars['String']['output'];
};

export type CrossAccount = {
  __typename?: 'CrossAccount';
  /** @deprecated `currentUser.crossAccount.capability` queries are deprecated. The `actor.capabilities` queries should be used as a replacement. GLOBAL, ACTOR, or ORGANIZATION scope types should be used when replacing capability checks that historically used `currentUser.crossAccount.capability` queries. */
  capability?: Maybe<CrossAccountCapability>;
  entitlement?: Maybe<CrossAccountEntitlement>;
  featureFlag?: Maybe<CrossAccountFeatureFlag>;
};


export type CrossAccountCapabilityArgs = {
  name: Scalars['String']['input'];
};


export type CrossAccountEntitlementArgs = {
  name: Scalars['String']['input'];
};


export type CrossAccountFeatureFlagArgs = {
  name: Scalars['String']['input'];
};

export type CrossAccountCapability = {
  __typename?: 'CrossAccountCapability';
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Boolean']['output']>;
};

export type CrossAccountEntitlement = {
  __typename?: 'CrossAccountEntitlement';
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Boolean']['output']>;
};

export type CrossAccountFeatureFlag = {
  __typename?: 'CrossAccountFeatureFlag';
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Boolean']['output']>;
};

export type CrossAccountNrdbResultContainer = {
  __typename?: 'CrossAccountNrdbResultContainer';
  currentResults?: Maybe<Array<Maybe<Scalars['NrdbResult']['output']>>>;
  eventDefinitions?: Maybe<Array<Maybe<EventDefinition>>>;
  metadata?: Maybe<NrdbMetadata>;
  nrql?: Maybe<Scalars['Nrql']['output']>;
  otherResult?: Maybe<Scalars['NrdbResult']['output']>;
  previousResults?: Maybe<Array<Maybe<Scalars['NrdbResult']['output']>>>;
  queryProgress?: Maybe<NrdbQueryProgress>;
  rawResponse?: Maybe<Scalars['NrdbRawResults']['output']>;
  results?: Maybe<Array<Maybe<Scalars['NrdbResult']['output']>>>;
  totalResult?: Maybe<Scalars['NrdbResult']['output']>;
};

export type CustomerAdministration = {
  __typename?: 'CustomerAdministration';
  accountShares?: Maybe<OrganizationAccountShareCollection>;
  accounts?: Maybe<OrganizationAccountCollection>;
  authenticationDomains?: Maybe<OrganizationAuthenticationDomainCollection>;
  consumption?: Maybe<Consumption>;
  contracts?: Maybe<OrganizationCustomerContractWrapper>;
  grants?: Maybe<MultiTenantAuthorizationGrantCollection>;
  groups?: Maybe<MultiTenantIdentityGroupCollection>;
  jobs?: Maybe<CustomerAdministrationJobs>;
  organizations?: Maybe<OrganizationCustomerOrganizationWrapper>;
  permissions?: Maybe<MultiTenantAuthorizationPermissionCollection>;
  productConsumption?: Maybe<ProductConsumptionCustomerAdministrationStitchedFields>;
  roles?: Maybe<MultiTenantAuthorizationRoleCollection>;
  user?: Maybe<User>;
  users?: Maybe<MultiTenantIdentityUserCollection>;
};


export type CustomerAdministrationAccountSharesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: OrganizationAccountShareFilterInput;
  sort?: InputMaybe<Array<OrganizationAccountShareSortInput>>;
};


export type CustomerAdministrationAccountsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: OrganizationAccountFilterInput;
  sort?: InputMaybe<Array<OrganizationAccountSortInput>>;
};


export type CustomerAdministrationAuthenticationDomainsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: OrganizationAuthenticationDomainFilterInput;
  sort?: InputMaybe<Array<OrganizationAuthenticationDomainSortInput>>;
};


export type CustomerAdministrationConsumptionArgs = {
  customerId: Scalars['ID']['input'];
};


export type CustomerAdministrationContractsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<OrganizationCustomerContractFilterInput>;
};


export type CustomerAdministrationGrantsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: MultiTenantAuthorizationGrantFilterInputExpression;
  sort?: InputMaybe<Array<MultiTenantAuthorizationGrantSortInput>>;
};


export type CustomerAdministrationGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: MultiTenantIdentityGroupFilterInput;
  sort?: InputMaybe<Array<MultiTenantIdentityGroupSortInput>>;
};


export type CustomerAdministrationOrganizationsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<OrganizationCustomerOrganizationFilterInput>;
};


export type CustomerAdministrationPermissionsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<MultiTenantAuthorizationPermissionFilter>;
};


export type CustomerAdministrationRolesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: MultiTenantAuthorizationRoleFilterInputExpression;
  sort?: InputMaybe<Array<MultiTenantAuthorizationRoleSortInput>>;
};


export type CustomerAdministrationUsersArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: MultiTenantIdentityUserFilterInput;
  sort?: InputMaybe<Array<MultiTenantIdentityUserSortInput>>;
};

export type CustomerAdministrationJobs = {
  __typename?: 'CustomerAdministrationJobs';
  organizationCreateAsyncResults?: Maybe<OrganizationOrganizationCreateAsyncResultCollection>;
};


export type CustomerAdministrationJobsOrganizationCreateAsyncResultsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: OrganizationOrganizationCreateAsyncResultFilterInput;
};

export type DashboardActorStitchedFields = {
  __typename?: 'DashboardActorStitchedFields';
  liveUrls?: Maybe<DashboardLiveUrlResult>;
};


export type DashboardActorStitchedFieldsLiveUrlsArgs = {
  filter?: InputMaybe<DashboardLiveUrlsFilterInput>;
};

export type DashboardAddWidgetsToPageError = {
  __typename?: 'DashboardAddWidgetsToPageError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardAddWidgetsToPageErrorType;
};

export type DashboardAddWidgetsToPageErrorType =
  | 'FORBIDDEN_OPERATION'
  | 'INVALID_INPUT'
  | 'PAGE_NOT_FOUND';

export type DashboardAddWidgetsToPageResult = {
  __typename?: 'DashboardAddWidgetsToPageResult';
  errors?: Maybe<Array<Maybe<DashboardAddWidgetsToPageError>>>;
};

export type DashboardAlertSeverity =
  | 'CRITICAL'
  | 'NOT_ALERTING'
  | 'WARNING';

export type DashboardAreaWidgetConfiguration = {
  __typename?: 'DashboardAreaWidgetConfiguration';
  nrqlQueries?: Maybe<Array<Maybe<DashboardWidgetNrqlQuery>>>;
};

export type DashboardAreaWidgetConfigurationInput = {
  nrqlQueries?: InputMaybe<Array<DashboardWidgetNrqlQueryInput>>;
};

export type DashboardBarWidgetConfiguration = {
  __typename?: 'DashboardBarWidgetConfiguration';
  nrqlQueries?: Maybe<Array<Maybe<DashboardWidgetNrqlQuery>>>;
};

export type DashboardBarWidgetConfigurationInput = {
  nrqlQueries?: InputMaybe<Array<DashboardWidgetNrqlQueryInput>>;
};

export type DashboardBillboardWidgetConfiguration = {
  __typename?: 'DashboardBillboardWidgetConfiguration';
  nrqlQueries?: Maybe<Array<Maybe<DashboardWidgetNrqlQuery>>>;
  thresholds?: Maybe<Array<Maybe<DashboardBillboardWidgetThreshold>>>;
};

export type DashboardBillboardWidgetConfigurationInput = {
  nrqlQueries?: InputMaybe<Array<DashboardWidgetNrqlQueryInput>>;
  thresholds?: InputMaybe<Array<DashboardBillboardWidgetThresholdInput>>;
};

export type DashboardBillboardWidgetThreshold = {
  __typename?: 'DashboardBillboardWidgetThreshold';
  alertSeverity?: Maybe<DashboardAlertSeverity>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type DashboardBillboardWidgetThresholdInput = {
  alertSeverity?: InputMaybe<DashboardAlertSeverity>;
  value?: InputMaybe<Scalars['Float']['input']>;
};

export type DashboardCreateError = {
  __typename?: 'DashboardCreateError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardCreateErrorType;
};

export type DashboardCreateErrorType =
  | 'INVALID_INPUT';

export type DashboardCreateResult = {
  __typename?: 'DashboardCreateResult';
  entityResult?: Maybe<DashboardEntityResult>;
  errors?: Maybe<Array<Maybe<DashboardCreateError>>>;
};

export type DashboardDeleteError = {
  __typename?: 'DashboardDeleteError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardDeleteErrorType;
};

export type DashboardDeleteErrorType =
  | 'DASHBOARD_NOT_FOUND'
  | 'FORBIDDEN_OPERATION';

export type DashboardDeleteResult = {
  __typename?: 'DashboardDeleteResult';
  errors?: Maybe<Array<Maybe<DashboardDeleteError>>>;
  status?: Maybe<DashboardDeleteResultStatus>;
};

export type DashboardDeleteResultStatus =
  | 'FAILURE'
  | 'SUCCESS';

export type DashboardEntity = AlertableEntity & Entity & {
  __typename?: 'DashboardEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  dashboardParentGuid?: Maybe<Scalars['EntityGuid']['output']>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  owner?: Maybe<DashboardEntityOwnerInfo>;
  pages?: Maybe<Array<Maybe<DashboardPage>>>;
  permalink?: Maybe<Scalars['String']['output']>;
  permissions?: Maybe<DashboardEntityPermissions>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  variables?: Maybe<Array<Maybe<DashboardVariable>>>;
};


export type DashboardEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type DashboardEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type DashboardEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type DashboardEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type DashboardEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type DashboardEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type DashboardEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type DashboardEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type DashboardEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type DashboardEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type DashboardEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type DashboardEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type DashboardEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type DashboardEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'DashboardEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  dashboardParentGuid?: Maybe<Scalars['EntityGuid']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  owner?: Maybe<DashboardEntityOwnerInfo>;
  permalink?: Maybe<Scalars['String']['output']>;
  permissions?: Maybe<DashboardEntityPermissions>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type DashboardEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type DashboardEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type DashboardEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type DashboardEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type DashboardEntityOwnerInfo = {
  __typename?: 'DashboardEntityOwnerInfo';
  email?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['Int']['output']>;
};

export type DashboardEntityPermissions =
  | 'PRIVATE'
  | 'PUBLIC_READ_ONLY'
  | 'PUBLIC_READ_WRITE';

export type DashboardEntityResult = {
  __typename?: 'DashboardEntityResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  owner?: Maybe<DashboardOwnerInfo>;
  pages?: Maybe<Array<Maybe<DashboardPage>>>;
  permissions?: Maybe<DashboardPermissions>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  variables?: Maybe<Array<Maybe<DashboardVariable>>>;
};

export type DashboardInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  pages: Array<DashboardPageInput>;
  permissions: DashboardPermissions;
  variables?: InputMaybe<Array<DashboardVariableInput>>;
};

export type DashboardLineWidgetConfiguration = {
  __typename?: 'DashboardLineWidgetConfiguration';
  nrqlQueries?: Maybe<Array<Maybe<DashboardWidgetNrqlQuery>>>;
};

export type DashboardLineWidgetConfigurationInput = {
  nrqlQueries?: InputMaybe<Array<DashboardWidgetNrqlQueryInput>>;
};

export type DashboardLiveUrl = {
  __typename?: 'DashboardLiveUrl';
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  type?: Maybe<DashboardLiveUrlType>;
  url: Scalars['String']['output'];
  uuid: Scalars['ID']['output'];
};

export type DashboardLiveUrlError = {
  __typename?: 'DashboardLiveUrlError';
  description?: Maybe<Scalars['String']['output']>;
  type?: Maybe<DashboardLiveUrlErrorType>;
};

export type DashboardLiveUrlErrorType =
  | 'OPERATION_FAILURE'
  | 'UNAUTHORIZED'
  | 'UNSUPPORTED'
  | 'URL_NOT_FOUND';

export type DashboardLiveUrlResult = {
  __typename?: 'DashboardLiveUrlResult';
  errors?: Maybe<Array<Maybe<DashboardLiveUrlError>>>;
  liveUrls?: Maybe<Array<Maybe<DashboardLiveUrl>>>;
};

export type DashboardLiveUrlType =
  | 'DASHBOARD'
  | 'WIDGET';

export type DashboardLiveUrlsFilterInput = {
  type?: InputMaybe<DashboardLiveUrlType>;
  uuid?: InputMaybe<Scalars['ID']['input']>;
};

export type DashboardMarkdownWidgetConfiguration = {
  __typename?: 'DashboardMarkdownWidgetConfiguration';
  text: Scalars['String']['output'];
};

export type DashboardMarkdownWidgetConfigurationInput = {
  text: Scalars['String']['input'];
};

export type DashboardOwnerInfo = {
  __typename?: 'DashboardOwnerInfo';
  email?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['Int']['output']>;
};

export type DashboardPage = {
  __typename?: 'DashboardPage';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  owner?: Maybe<DashboardOwnerInfo>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  widgets?: Maybe<Array<Maybe<DashboardWidget>>>;
};

export type DashboardPageInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
  name: Scalars['String']['input'];
  widgets: Array<DashboardWidgetInput>;
};

export type DashboardPermissions =
  | 'PRIVATE'
  | 'PUBLIC_READ_ONLY'
  | 'PUBLIC_READ_WRITE';

export type DashboardPieWidgetConfiguration = {
  __typename?: 'DashboardPieWidgetConfiguration';
  nrqlQueries?: Maybe<Array<Maybe<DashboardWidgetNrqlQuery>>>;
};

export type DashboardPieWidgetConfigurationInput = {
  nrqlQueries?: InputMaybe<Array<DashboardWidgetNrqlQueryInput>>;
};

export type DashboardRevokeLiveDashboardUrlResult = {
  __typename?: 'DashboardRevokeLiveDashboardUrlResult';
  id?: Maybe<Scalars['ID']['output']>;
};

export type DashboardRevokeLiveUrlResult = {
  __typename?: 'DashboardRevokeLiveUrlResult';
  errors?: Maybe<Array<Maybe<DashboardLiveUrlError>>>;
  uuid?: Maybe<Scalars['ID']['output']>;
};

export type DashboardSnapshotUrlInput = {
  timeWindow?: InputMaybe<DashboardSnapshotUrlTimeWindowInput>;
};

export type DashboardSnapshotUrlTimeWindowInput = {
  beginTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  duration?: InputMaybe<Scalars['Milliseconds']['input']>;
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};

export type DashboardTableWidgetConfiguration = {
  __typename?: 'DashboardTableWidgetConfiguration';
  nrqlQueries?: Maybe<Array<Maybe<DashboardWidgetNrqlQuery>>>;
};

export type DashboardTableWidgetConfigurationInput = {
  nrqlQueries?: InputMaybe<Array<DashboardWidgetNrqlQueryInput>>;
};

export type DashboardUndeleteError = {
  __typename?: 'DashboardUndeleteError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardUndeleteErrorType;
};

export type DashboardUndeleteErrorType =
  | 'DASHBOARD_NOT_FOUND'
  | 'FORBIDDEN_OPERATION';

export type DashboardUndeleteResult = {
  __typename?: 'DashboardUndeleteResult';
  errors?: Maybe<Array<Maybe<DashboardUndeleteError>>>;
};

export type DashboardUpdateError = {
  __typename?: 'DashboardUpdateError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardUpdateErrorType;
};

export type DashboardUpdateErrorType =
  | 'FORBIDDEN_OPERATION'
  | 'INVALID_INPUT';

export type DashboardUpdatePageError = {
  __typename?: 'DashboardUpdatePageError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardUpdatePageErrorType;
};

export type DashboardUpdatePageErrorType =
  | 'FORBIDDEN_OPERATION'
  | 'INVALID_INPUT'
  | 'PAGE_NOT_FOUND';

export type DashboardUpdatePageInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  widgets: Array<DashboardWidgetInput>;
};

export type DashboardUpdatePageResult = {
  __typename?: 'DashboardUpdatePageResult';
  errors?: Maybe<Array<Maybe<DashboardUpdatePageError>>>;
};

export type DashboardUpdateResult = {
  __typename?: 'DashboardUpdateResult';
  entityResult?: Maybe<DashboardEntityResult>;
  errors?: Maybe<Array<Maybe<DashboardUpdateError>>>;
};

export type DashboardUpdateWidgetInput = {
  configuration?: InputMaybe<DashboardWidgetConfigurationInput>;
  id: Scalars['ID']['input'];
  layout?: InputMaybe<DashboardWidgetLayoutInput>;
  linkedEntityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  rawConfiguration?: InputMaybe<Scalars['DashboardWidgetRawConfiguration']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  visualization?: InputMaybe<DashboardWidgetVisualizationInput>;
};

export type DashboardUpdateWidgetsInPageError = {
  __typename?: 'DashboardUpdateWidgetsInPageError';
  description?: Maybe<Scalars['String']['output']>;
  type: DashboardUpdateWidgetsInPageErrorType;
};

export type DashboardUpdateWidgetsInPageErrorType =
  | 'FORBIDDEN_OPERATION'
  | 'INVALID_INPUT'
  | 'PAGE_NOT_FOUND'
  | 'WIDGET_NOT_FOUND';

export type DashboardUpdateWidgetsInPageResult = {
  __typename?: 'DashboardUpdateWidgetsInPageResult';
  errors?: Maybe<Array<Maybe<DashboardUpdateWidgetsInPageError>>>;
};

export type DashboardVariable = {
  __typename?: 'DashboardVariable';
  /** @deprecated This field will always be null. Use defaultValues instead. */
  defaultValue?: Maybe<DashboardVariableDefaultValue>;
  defaultValues?: Maybe<Array<Maybe<DashboardVariableDefaultItem>>>;
  isMultiSelection?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<DashboardVariableEnumItem>>>;
  name?: Maybe<Scalars['String']['output']>;
  nrqlQuery?: Maybe<DashboardVariableNrqlQuery>;
  options?: Maybe<DashboardVariableOptions>;
  replacementStrategy?: Maybe<DashboardVariableReplacementStrategy>;
  title?: Maybe<Scalars['String']['output']>;
  type?: Maybe<DashboardVariableType>;
};

export type DashboardVariableDefaultItem = {
  __typename?: 'DashboardVariableDefaultItem';
  value?: Maybe<DashboardVariableDefaultValue>;
};

export type DashboardVariableDefaultItemInput = {
  value: DashboardVariableDefaultValueInput;
};

export type DashboardVariableDefaultValue = {
  __typename?: 'DashboardVariableDefaultValue';
  string?: Maybe<Scalars['String']['output']>;
};

export type DashboardVariableDefaultValueInput = {
  string?: InputMaybe<Scalars['String']['input']>;
};

export type DashboardVariableEnumItem = {
  __typename?: 'DashboardVariableEnumItem';
  title?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type DashboardVariableEnumItemInput = {
  title?: InputMaybe<Scalars['String']['input']>;
  value: Scalars['String']['input'];
};

export type DashboardVariableInput = {
  defaultValue?: InputMaybe<DashboardVariableDefaultValueInput>;
  defaultValues?: InputMaybe<Array<DashboardVariableDefaultItemInput>>;
  isMultiSelection?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<Array<InputMaybe<DashboardVariableEnumItemInput>>>;
  name: Scalars['String']['input'];
  nrqlQuery?: InputMaybe<DashboardVariableNrqlQueryInput>;
  options?: InputMaybe<DashboardVariableOptionsInput>;
  replacementStrategy?: InputMaybe<DashboardVariableReplacementStrategy>;
  title?: InputMaybe<Scalars['String']['input']>;
  type: DashboardVariableType;
};

export type DashboardVariableNrqlQuery = {
  __typename?: 'DashboardVariableNrqlQuery';
  accountIds?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  query: Scalars['Nrql']['output'];
};

export type DashboardVariableNrqlQueryInput = {
  accountIds: Array<Scalars['Int']['input']>;
  query: Scalars['Nrql']['input'];
};

export type DashboardVariableOptions = {
  __typename?: 'DashboardVariableOptions';
  ignoreTimeRange?: Maybe<Scalars['Boolean']['output']>;
};

export type DashboardVariableOptionsInput = {
  ignoreTimeRange?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DashboardVariableReplacementStrategy =
  | 'DEFAULT'
  | 'IDENTIFIER'
  | 'NUMBER'
  | 'STRING';

export type DashboardVariableType =
  | 'ENUM'
  | 'NRQL'
  | 'STRING';

export type DashboardWidget = {
  __typename?: 'DashboardWidget';
  configuration?: Maybe<DashboardWidgetConfiguration>;
  id: Scalars['ID']['output'];
  layout?: Maybe<DashboardWidgetLayout>;
  linkedEntities?: Maybe<Array<Maybe<EntityOutline>>>;
  rawConfiguration: Scalars['DashboardWidgetRawConfiguration']['output'];
  title?: Maybe<Scalars['String']['output']>;
  visualization: DashboardWidgetVisualization;
};

export type DashboardWidgetConfiguration = {
  __typename?: 'DashboardWidgetConfiguration';
  area?: Maybe<DashboardAreaWidgetConfiguration>;
  bar?: Maybe<DashboardBarWidgetConfiguration>;
  billboard?: Maybe<DashboardBillboardWidgetConfiguration>;
  line?: Maybe<DashboardLineWidgetConfiguration>;
  markdown?: Maybe<DashboardMarkdownWidgetConfiguration>;
  pie?: Maybe<DashboardPieWidgetConfiguration>;
  table?: Maybe<DashboardTableWidgetConfiguration>;
};

export type DashboardWidgetConfigurationInput = {
  area?: InputMaybe<DashboardAreaWidgetConfigurationInput>;
  bar?: InputMaybe<DashboardBarWidgetConfigurationInput>;
  billboard?: InputMaybe<DashboardBillboardWidgetConfigurationInput>;
  line?: InputMaybe<DashboardLineWidgetConfigurationInput>;
  markdown?: InputMaybe<DashboardMarkdownWidgetConfigurationInput>;
  pie?: InputMaybe<DashboardPieWidgetConfigurationInput>;
  table?: InputMaybe<DashboardTableWidgetConfigurationInput>;
};

export type DashboardWidgetInput = {
  configuration?: InputMaybe<DashboardWidgetConfigurationInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
  layout?: InputMaybe<DashboardWidgetLayoutInput>;
  linkedEntityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  rawConfiguration?: InputMaybe<Scalars['DashboardWidgetRawConfiguration']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  visualization?: InputMaybe<DashboardWidgetVisualizationInput>;
};

export type DashboardWidgetLayout = {
  __typename?: 'DashboardWidgetLayout';
  column?: Maybe<Scalars['Int']['output']>;
  height?: Maybe<Scalars['Int']['output']>;
  row?: Maybe<Scalars['Int']['output']>;
  width?: Maybe<Scalars['Int']['output']>;
};

export type DashboardWidgetLayoutInput = {
  column?: InputMaybe<Scalars['Int']['input']>;
  height?: InputMaybe<Scalars['Int']['input']>;
  row?: InputMaybe<Scalars['Int']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};

export type DashboardWidgetNrqlQuery = {
  __typename?: 'DashboardWidgetNrqlQuery';
  accountId: Scalars['Int']['output'];
  query: Scalars['Nrql']['output'];
};

export type DashboardWidgetNrqlQueryInput = {
  accountId: Scalars['Int']['input'];
  query: Scalars['Nrql']['input'];
};

export type DashboardWidgetVisualization = {
  __typename?: 'DashboardWidgetVisualization';
  id?: Maybe<Scalars['String']['output']>;
};

export type DashboardWidgetVisualizationInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type DataDictionaryAttribute = {
  __typename?: 'DataDictionaryAttribute';
  definition: Scalars['String']['output'];
  docsUrl?: Maybe<Scalars['String']['output']>;
  events: Array<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  units?: Maybe<DataDictionaryUnit>;
};


export type DataDictionaryAttributeDefinitionArgs = {
  format?: InputMaybe<DataDictionaryTextFormat>;
};

export type DataDictionaryDataSource = {
  __typename?: 'DataDictionaryDataSource';
  name: Scalars['String']['output'];
};

export type DataDictionaryDocsStitchedFields = {
  __typename?: 'DataDictionaryDocsStitchedFields';
  events?: Maybe<Array<DataDictionaryEvent>>;
};


export type DataDictionaryDocsStitchedFieldsEventsArgs = {
  names?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type DataDictionaryEvent = {
  __typename?: 'DataDictionaryEvent';
  attributes: Array<DataDictionaryAttribute>;
  dataSources: Array<DataDictionaryDataSource>;
  definition?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};


export type DataDictionaryEventDefinitionArgs = {
  format?: InputMaybe<DataDictionaryTextFormat>;
};

export type DataDictionaryTextFormat =
  | 'HTML'
  | 'MARKDOWN'
  | 'PLAIN';

export type DataDictionaryUnit = {
  __typename?: 'DataDictionaryUnit';
  label: Scalars['String']['output'];
};

export type DataManagementAccountFeatureSettingInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  featureSetting?: InputMaybe<DataManagementFeatureSettingLookup>;
  locked?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DataManagementAccountLimit = {
  __typename?: 'DataManagementAccountLimit';
  category?: Maybe<DataManagementCategory>;
  description?: Maybe<Scalars['String']['output']>;
  documentationLink?: Maybe<Scalars['String']['output']>;
  limitReachedBehaviorDescription?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  timeInterval?: Maybe<Scalars['Nrql']['output']>;
  type?: Maybe<DataManagementType>;
  unit?: Maybe<DataManagementUnit>;
  value?: Maybe<Scalars['Int']['output']>;
};

export type DataManagementAccountStitchedFields = {
  __typename?: 'DataManagementAccountStitchedFields';
  customizableRetention?: Maybe<DataManagementCustomizableRetention>;
  eventRetentionPolicies?: Maybe<Array<Maybe<DataManagementRenderedRetention>>>;
  eventRetentionRule?: Maybe<DataManagementRule>;
  eventRetentionRules?: Maybe<Array<Maybe<DataManagementRule>>>;
  featureSettings?: Maybe<Array<Maybe<DataManagementFeatureSetting>>>;
  limits?: Maybe<Array<Maybe<DataManagementAccountLimit>>>;
  noncompliantAccounts?: Maybe<Array<Maybe<DataManagementNoncompliantAccount>>>;
  retentionAudit?: Maybe<Array<Maybe<DataManagementRetentionValues>>>;
  retentions?: Maybe<Array<Maybe<DataManagementRetention>>>;
};


export type DataManagementAccountStitchedFieldsEventRetentionRuleArgs = {
  namespace: Scalars['String']['input'];
};


export type DataManagementAccountStitchedFieldsNoncompliantAccountsArgs = {
  checkRules?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DataManagementAppliedRules = {
  __typename?: 'DataManagementAppliedRules';
  accountId?: Maybe<Scalars['Int']['output']>;
  retentionInDays?: Maybe<Scalars['Int']['output']>;
};

export type DataManagementBulkCopyResult = {
  __typename?: 'DataManagementBulkCopyResult';
  failure?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  success?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type DataManagementCategory =
  | 'ALERTING'
  | 'INGEST'
  | 'QUERY';

export type DataManagementCustomizableRetention = {
  __typename?: 'DataManagementCustomizableRetention';
  eventNamespaces?: Maybe<Array<Maybe<DataManagementEventNamespaces>>>;
};

export type DataManagementEventNamespaces = {
  __typename?: 'DataManagementEventNamespaces';
  maxRetentionInDays?: Maybe<Scalars['Int']['output']>;
  minRetentionInDays?: Maybe<Scalars['Int']['output']>;
  namespace?: Maybe<Scalars['String']['output']>;
};

export type DataManagementFeatureSetting = {
  __typename?: 'DataManagementFeatureSetting';
  enabled?: Maybe<Scalars['Boolean']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  locked?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type DataManagementFeatureSettingLookup = {
  key?: InputMaybe<Scalars['String']['input']>;
};

export type DataManagementNamespaceLevelRetention = {
  __typename?: 'DataManagementNamespaceLevelRetention';
  retentionInDays?: Maybe<Scalars['Int']['output']>;
};

export type DataManagementNoncompliantAccount = {
  __typename?: 'DataManagementNoncompliantAccount';
  accountId?: Maybe<Scalars['Int']['output']>;
  namespace?: Maybe<Scalars['String']['output']>;
  retentionInDays?: Maybe<Scalars['Int']['output']>;
  subscriptionInDays?: Maybe<Scalars['Int']['output']>;
};

export type DataManagementRenderedRetention = {
  __typename?: 'DataManagementRenderedRetention';
  accountId?: Maybe<Scalars['Int']['output']>;
  namespace?: Maybe<Scalars['String']['output']>;
  namespaceLevelRetention?: Maybe<DataManagementNamespaceLevelRetention>;
  updatedAt?: Maybe<Scalars['EpochSeconds']['output']>;
};

export type DataManagementRetention = {
  __typename?: 'DataManagementRetention';
  customizable?: Maybe<Scalars['Boolean']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  maxRetentionInDays?: Maybe<Scalars['Int']['output']>;
  minRetentionInDays?: Maybe<Scalars['Int']['output']>;
  namespace?: Maybe<Scalars['String']['output']>;
  source?: Maybe<Scalars['String']['output']>;
};

export type DataManagementRetentionValues = {
  __typename?: 'DataManagementRetentionValues';
  appliedRules?: Maybe<Array<Maybe<DataManagementAppliedRules>>>;
  namespace?: Maybe<Scalars['String']['output']>;
  subscriptionRetentionInDays?: Maybe<Scalars['Int']['output']>;
};

export type DataManagementRule = {
  __typename?: 'DataManagementRule';
  createdAt?: Maybe<Scalars['EpochSeconds']['output']>;
  createdById?: Maybe<Scalars['Int']['output']>;
  deletedAt?: Maybe<Scalars['EpochSeconds']['output']>;
  deletedById?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  namespace?: Maybe<Scalars['String']['output']>;
  retentionInDays?: Maybe<Scalars['Int']['output']>;
};

export type DataManagementRuleInput = {
  namespace?: InputMaybe<Scalars['String']['input']>;
  retentionInDays?: InputMaybe<Scalars['Int']['input']>;
};

export type DataManagementType =
  | 'GAUGE'
  | 'RATE';

export type DataManagementUnit =
  | 'BYTES'
  | 'COUNT'
  | 'GIGABYTES';

export type DataSourceGapsActorStitchedFields = {
  __typename?: 'DataSourceGapsActorStitchedFields';
  gaps?: Maybe<DataSourceGapsGapsResult>;
};


export type DataSourceGapsActorStitchedFieldsGapsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  query?: InputMaybe<DataSourceGapsGapsQuery>;
};

export type DataSourceGapsGap = {
  __typename?: 'DataSourceGapsGap';
  account?: Maybe<AccountReference>;
  detectedAt: Scalars['EpochMilliseconds']['output'];
  entity?: Maybe<EntityOutline>;
  gapType: DataSourceGapsGapType;
};

export type DataSourceGapsGapType = {
  __typename?: 'DataSourceGapsGapType';
  dataSourceId?: Maybe<Scalars['ID']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id: DataSourceGapsGapTypeIdentifier;
};

export type DataSourceGapsGapTypeIdentifier =
  | 'APACHE'
  | 'APM_AGENT_LOGS'
  | 'CASSANDRA'
  | 'CONSUL'
  | 'COUCHBASE'
  | 'ELASTICSEARCH'
  | 'GO'
  | 'HAPROXY'
  | 'INFRA_LOGS'
  | 'JAVA'
  | 'JMX'
  | 'MEMCACHED'
  | 'MICROSOFT_NET'
  | 'MICROSOFT_SQL_SERVER'
  | 'MONGODB'
  | 'MYSQL'
  | 'NAGIOS'
  | 'NGINX'
  | 'NODE_JS'
  | 'PHP'
  | 'PIXIE'
  | 'POSTGRESQL'
  | 'PYTHON'
  | 'RABBITMQ'
  | 'REDIS'
  | 'RUBY'
  | 'VARNISH';

export type DataSourceGapsGapsQuery = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  gapTypeIds?: InputMaybe<Array<DataSourceGapsGapTypeIdentifier>>;
};

export type DataSourceGapsGapsResult = {
  __typename?: 'DataSourceGapsGapsResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<DataSourceGapsGap>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type DateTimeWindowInput = {
  endTime: Scalars['DateTime']['input'];
  startTime: Scalars['DateTime']['input'];
};

export type DiscussionAccountStitchedFields = {
  __typename?: 'DiscussionAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupPost?: Maybe<DiscussionErrorGroupPost>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupPosts?: Maybe<Array<Maybe<DiscussionErrorGroupPost>>>;
};


export type DiscussionAccountStitchedFieldsErrorGroupPostArgs = {
  postId: Scalars['String']['input'];
};


export type DiscussionAccountStitchedFieldsErrorGroupPostsArgs = {
  errorGroupGuid: Scalars['EntityGuid']['input'];
};

export type DiscussionCreateErrorGroupPostInput = {
  mentionedParticipants?: InputMaybe<DiscussionErrorGroupPostParticipantsInput>;
  parentPostId?: InputMaybe<Scalars['String']['input']>;
  text: Scalars['String']['input'];
};

export type DiscussionErrorGroupExternalParticipant = DiscussionErrorGroupPostParticipant & {
  __typename?: 'DiscussionErrorGroupExternalParticipant';
  /** @deprecated This field is experimental and subject to breaking changes. */
  email: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  fullName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  username: Scalars['String']['output'];
};

export type DiscussionErrorGroupNewRelicParticipant = DiscussionErrorGroupPostParticipant & {
  __typename?: 'DiscussionErrorGroupNewRelicParticipant';
  /** @deprecated This field is experimental and subject to breaking changes. */
  email: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  userInfo?: Maybe<UserReference>;
};

export type DiscussionErrorGroupPost = {
  __typename?: 'DiscussionErrorGroupPost';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  codeBlocks: Array<Maybe<DiscussionErrorGroupPostCodeBlock>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator: DiscussionErrorGroupPostParticipant;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deactivated: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupGuid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  files: Array<Maybe<DiscussionErrorGroupPostFileAttachment>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  mentionedParticipants: Array<Maybe<DiscussionErrorGroupPostParticipant>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  parentPostId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  postId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  reactions: Array<Maybe<DiscussionErrorGroupPostReaction>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  seqNum: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  text: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  version: Scalars['Int']['output'];
};

export type DiscussionErrorGroupPostCodeBlock = {
  __typename?: 'DiscussionErrorGroupPostCodeBlock';
  /** @deprecated This field is experimental and subject to breaking changes. */
  code: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  file: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  permalink: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  repo: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sha: Scalars['String']['output'];
};

export type DiscussionErrorGroupPostExternalParticipantInput = {
  email: Scalars['String']['input'];
  fullName?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

export type DiscussionErrorGroupPostFileAttachment = {
  __typename?: 'DiscussionErrorGroupPostFileAttachment';
  /** @deprecated This field is experimental and subject to breaking changes. */
  mimetype: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  size: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  url: Scalars['String']['output'];
};

export type DiscussionErrorGroupPostNewRelicUserParticipantInput = {
  userId: Scalars['Int']['input'];
};

export type DiscussionErrorGroupPostParticipant = {
  /** @deprecated This field is experimental and subject to breaking changes. */
  email: Scalars['String']['output'];
};

export type DiscussionErrorGroupPostParticipantsInput = {
  externalUsers?: InputMaybe<Array<InputMaybe<DiscussionErrorGroupPostExternalParticipantInput>>>;
  newRelicUsers?: InputMaybe<Array<InputMaybe<DiscussionErrorGroupPostNewRelicUserParticipantInput>>>;
};

export type DiscussionErrorGroupPostReaction = {
  __typename?: 'DiscussionErrorGroupPostReaction';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reaction: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  users: Array<Maybe<DiscussionErrorGroupPostParticipant>>;
};

export type DiscussionUpdateErrorGroupPostInput = {
  mentionedParticipants?: InputMaybe<DiscussionErrorGroupPostParticipantsInput>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type DistributedTracingActorStitchedFields = {
  __typename?: 'DistributedTracingActorStitchedFields';
  trace?: Maybe<DistributedTracingTrace>;
};


export type DistributedTracingActorStitchedFieldsTraceArgs = {
  timestamp?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  traceId: Scalars['String']['input'];
};

export type DistributedTracingEntityTracingSummary = {
  __typename?: 'DistributedTracingEntityTracingSummary';
  errorTraceCount?: Maybe<Scalars['Int']['output']>;
  percentOfAllErrorTraces?: Maybe<Scalars['Float']['output']>;
};

export type DistributedTracingSpan = {
  __typename?: 'DistributedTracingSpan';
  attributes?: Maybe<Scalars['DistributedTracingSpanAttributes']['output']>;
  clientType?: Maybe<DistributedTracingSpanClientType>;
  durationMs?: Maybe<Scalars['Milliseconds']['output']>;
  entityGuid?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  parentId?: Maybe<Scalars['String']['output']>;
  processBoundary: DistributedTracingSpanProcessBoundary;
  spanAnomalies?: Maybe<Array<Maybe<DistributedTracingSpanAnomaly>>>;
  timestamp: Scalars['EpochMilliseconds']['output'];
  traceId: Scalars['String']['output'];
};

export type DistributedTracingSpanAnomaly = {
  __typename?: 'DistributedTracingSpanAnomaly';
  anomalousValue: Scalars['Float']['output'];
  anomalyType: DistributedTracingSpanAnomalyType;
  averageMeasure: Scalars['Float']['output'];
};

export type DistributedTracingSpanAnomalyType =
  | 'DURATION';

export type DistributedTracingSpanClientType =
  | 'DATASTORE'
  | 'EXTERNAL';

export type DistributedTracingSpanConnection = {
  __typename?: 'DistributedTracingSpanConnection';
  child: Scalars['String']['output'];
  parent: Scalars['String']['output'];
};

export type DistributedTracingSpanProcessBoundary =
  | 'ENTRY'
  | 'EXIT'
  | 'IN_PROCESS';

export type DistributedTracingTrace = {
  __typename?: 'DistributedTracingTrace';
  backendDurationMs?: Maybe<Scalars['Milliseconds']['output']>;
  durationMs?: Maybe<Scalars['Milliseconds']['output']>;
  entities: Array<EntityOutline>;
  entityCount: Scalars['Int']['output'];
  id: Scalars['String']['output'];
  spanConnections: Array<Maybe<DistributedTracingSpanConnection>>;
  spans: Array<DistributedTracingSpan>;
  timestamp: Scalars['EpochMilliseconds']['output'];
};

export type DocumentationFields = {
  __typename?: 'DocumentationFields';
  /** @deprecated This field is deprecated and does not return results. */
  agentFeatures?: Maybe<Array<Maybe<AgentFeatures>>>;
  agentReleases?: Maybe<Array<Maybe<AgentRelease>>>;
  dataDictionary?: Maybe<DataDictionaryDocsStitchedFields>;
  timeZones?: Maybe<Array<Maybe<TimeZoneInfo>>>;
  whatsNew?: Maybe<WhatsNewDocsStitchedFields>;
};


export type DocumentationFieldsAgentFeaturesArgs = {
  agentName: AgentFeaturesFilter;
};


export type DocumentationFieldsAgentReleasesArgs = {
  agentName: AgentReleasesFilter;
};

export type DomainManagementAllowedDomainOperations =
  | 'DELETE'
  | 'REVERIFY'
  | 'UPDATE';

export type DomainManagementCreateDomainResponse = {
  __typename?: 'DomainManagementCreateDomainResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  verificationTxtRecord?: Maybe<Scalars['SecureValue']['output']>;
};

export type DomainManagementDomain = {
  __typename?: 'DomainManagementDomain';
  /** @deprecated This field is experimental and subject to breaking changes. */
  allowedDomainOperations: Array<DomainManagementAllowedDomainOperations>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  dateCreated?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  dateUpdated?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  joinOrganizationPreference?: Maybe<DomainManagementJoinOrganizationPreference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  message?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  newUserConfiguration?: Maybe<DomainManagementNewUserConfiguration>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  verificationMethod?: Maybe<DomainManagementVerificationMethod>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  verificationStatus?: Maybe<DomainManagementVerificationStatusType>;
};

export type DomainManagementDomainDeleteResponse = {
  __typename?: 'DomainManagementDomainDeleteResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<Scalars['String']['output']>;
};

export type DomainManagementDomainFilterInput = {
  domainIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type DomainManagementJoinOrganizationPreference =
  | 'JOIN'
  | 'NONE'
  | 'REQUEST';

export type DomainManagementNewUserConfiguration = {
  __typename?: 'DomainManagementNewUserConfiguration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  authenticationDomainId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  canJoin?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  canRequest?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  canSignup?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  groupIds: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userType?: Maybe<DomainManagementUserType>;
};

export type DomainManagementNewUserConfigurationInput = {
  authenticationDomainId: Scalars['String']['input'];
  groupIds: Array<Scalars['String']['input']>;
  userType: DomainManagementUserType;
};

export type DomainManagementOrganizationStitchedFields = {
  __typename?: 'DomainManagementOrganizationStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  domains?: Maybe<Array<DomainManagementDomain>>;
};


export type DomainManagementOrganizationStitchedFieldsDomainsArgs = {
  filter?: InputMaybe<DomainManagementDomainFilterInput>;
};

export type DomainManagementUpdateCaptureConfigurationResponse = {
  __typename?: 'DomainManagementUpdateCaptureConfigurationResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<Scalars['String']['output']>;
};

export type DomainManagementUserType =
  | 'BASIC'
  | 'CORE'
  | 'FULL_PLATFORM';

export type DomainManagementVerificationMethod =
  | 'DNS_TXT_RECORD'
  | 'MANUAL';

export type DomainManagementVerificationStatusType =
  | 'EXPIRED'
  | 'PENDING'
  | 'TRANSFERRED'
  | 'VERIFIED';

export type DomainType = {
  __typename?: 'DomainType';
  domain: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type DomainTypeInput = {
  domain: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type EdgeAccountStitchedFields = {
  __typename?: 'EdgeAccountStitchedFields';
  tracing?: Maybe<EdgeTracing>;
};

export type EdgeAgentEndpointDetail = EdgeEndpointDetail & {
  __typename?: 'EdgeAgentEndpointDetail';
  host: Scalars['String']['output'];
  port: Scalars['Int']['output'];
};

export type EdgeComplianceTypeCode =
  | 'FEDRAMP';

export type EdgeCreateSpanAttributeRuleInput = {
  action: EdgeTraceFilterAction;
  key: Scalars['String']['input'];
  keyOperator: EdgeSpanAttributeKeyOperator;
  value?: InputMaybe<Scalars['String']['input']>;
  valueOperator: EdgeSpanAttributeValueOperator;
};

export type EdgeCreateSpanAttributeRuleResponseError = {
  __typename?: 'EdgeCreateSpanAttributeRuleResponseError';
  message: Scalars['String']['output'];
  type: EdgeCreateSpanAttributeRuleResponseErrorType;
};

export type EdgeCreateSpanAttributeRuleResponseErrorType =
  | 'DUPLICATE_RULES'
  | 'EXCEEDS_SPAN_ATTRIBUTE_RULE_LIMITS'
  | 'INVALID_INPUT'
  | 'NOT_FOUND'
  | 'OPPOSING_RULES';

export type EdgeCreateSpanAttributeRulesResponse = {
  __typename?: 'EdgeCreateSpanAttributeRulesResponse';
  errors?: Maybe<Array<Maybe<EdgeCreateSpanAttributeRuleResponseError>>>;
  rules?: Maybe<Array<Maybe<EdgeSpanAttributeRule>>>;
};

export type EdgeCreateTraceFilterRuleResponses = {
  __typename?: 'EdgeCreateTraceFilterRuleResponses';
  spanAttributeRules: EdgeCreateSpanAttributeRulesResponse;
};

export type EdgeCreateTraceFilterRulesInput = {
  spanAttributeRules?: InputMaybe<Array<EdgeCreateSpanAttributeRuleInput>>;
};

export type EdgeCreateTraceObserverInput = {
  complianceTypes?: InputMaybe<Array<EdgeComplianceTypeCode>>;
  monitoring?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  providerRegion: EdgeProviderRegion;
};

export type EdgeCreateTraceObserverResponse = {
  __typename?: 'EdgeCreateTraceObserverResponse';
  errors?: Maybe<Array<Maybe<EdgeCreateTraceObserverResponseError>>>;
  traceObserver?: Maybe<EdgeTraceObserver>;
};

export type EdgeCreateTraceObserverResponseError = {
  __typename?: 'EdgeCreateTraceObserverResponseError';
  message: Scalars['String']['output'];
  type: EdgeCreateTraceObserverResponseErrorType;
};

export type EdgeCreateTraceObserverResponseErrorType =
  | 'ALREADY_EXISTS'
  | 'NO_AVAILABILITY_IN_REGION';

export type EdgeCreateTraceObserverResponses = {
  __typename?: 'EdgeCreateTraceObserverResponses';
  responses: Array<EdgeCreateTraceObserverResponse>;
};

export type EdgeDataSource = {
  __typename?: 'EdgeDataSource';
  entity?: Maybe<EntityOutline>;
  status: EdgeDataSourceStatusType;
};

export type EdgeDataSourceGroup = {
  __typename?: 'EdgeDataSourceGroup';
  dataSources: Array<EdgeDataSource>;
};

export type EdgeDataSourceGroupInput = {
  guids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  updateType: EdgeDataSourceGroupUpdateType;
};

export type EdgeDataSourceGroupUpdateType =
  | 'ADD'
  | 'REMOVE'
  | 'REPLACE';

export type EdgeDataSourceStatusType =
  | 'ACTIVE'
  | 'INACTIVE';

export type EdgeDeleteSpanAttributeRuleResponse = {
  __typename?: 'EdgeDeleteSpanAttributeRuleResponse';
  errors?: Maybe<Array<Maybe<EdgeDeleteSpanAttributeRuleResponseError>>>;
  rule?: Maybe<EdgeSpanAttributeRule>;
};

export type EdgeDeleteSpanAttributeRuleResponseError = {
  __typename?: 'EdgeDeleteSpanAttributeRuleResponseError';
  message: Scalars['String']['output'];
  type: EdgeDeleteSpanAttributeRuleResponseErrorType;
};

export type EdgeDeleteSpanAttributeRuleResponseErrorType =
  | 'NOT_FOUND';

export type EdgeDeleteTraceFilterRuleResponses = {
  __typename?: 'EdgeDeleteTraceFilterRuleResponses';
  spanAttributeRules: Array<EdgeDeleteSpanAttributeRuleResponse>;
};

export type EdgeDeleteTraceFilterRulesInput = {
  spanAttributeRuleIds?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type EdgeDeleteTraceObserverInput = {
  id: Scalars['Int']['input'];
};

export type EdgeDeleteTraceObserverResponse = {
  __typename?: 'EdgeDeleteTraceObserverResponse';
  errors?: Maybe<Array<Maybe<EdgeDeleteTraceObserverResponseError>>>;
  traceObserver?: Maybe<EdgeTraceObserver>;
};

export type EdgeDeleteTraceObserverResponseError = {
  __typename?: 'EdgeDeleteTraceObserverResponseError';
  message: Scalars['String']['output'];
  type: EdgeDeleteTraceObserverResponseErrorType;
};

export type EdgeDeleteTraceObserverResponseErrorType =
  | 'ALREADY_DELETED'
  | 'NOT_FOUND';

export type EdgeDeleteTraceObserverResponses = {
  __typename?: 'EdgeDeleteTraceObserverResponses';
  responses: Array<EdgeDeleteTraceObserverResponse>;
};

export type EdgeEndpoint = {
  __typename?: 'EdgeEndpoint';
  agent: EdgeAgentEndpointDetail;
  endpointType: EdgeEndpointType;
  https: EdgeHttpsEndpointDetail;
  status: EdgeEndpointStatus;
};

export type EdgeEndpointDetail = {
  host: Scalars['String']['output'];
  port: Scalars['Int']['output'];
};

export type EdgeEndpointStatus =
  | 'CREATED'
  | 'DELETED';

export type EdgeEndpointType =
  | 'PUBLIC';

export type EdgeHttpsEndpointDetail = EdgeEndpointDetail & {
  __typename?: 'EdgeHttpsEndpointDetail';
  host: Scalars['String']['output'];
  port: Scalars['Int']['output'];
  url: Scalars['String']['output'];
};

export type EdgeProviderRegion =
  | 'AWS_AP_SOUTHEAST_1'
  | 'AWS_AP_SOUTHEAST_2'
  | 'AWS_EU_CENTRAL_1'
  | 'AWS_EU_WEST_1'
  | 'AWS_US_EAST_1'
  | 'AWS_US_EAST_2'
  | 'AWS_US_WEST_2';

export type EdgeRandomTraceFilter = {
  __typename?: 'EdgeRandomTraceFilter';
  percentKept: Scalars['Float']['output'];
};

export type EdgeRandomTraceFilterInput = {
  percentKept: Scalars['Float']['input'];
};

export type EdgeSpanAttributeKeyOperator =
  | 'EQUALS'
  | 'LIKE';

export type EdgeSpanAttributeRule = {
  __typename?: 'EdgeSpanAttributeRule';
  action: EdgeTraceFilterAction;
  id: Scalars['Int']['output'];
  key: Scalars['String']['output'];
  keyOperator: EdgeSpanAttributeKeyOperator;
  value?: Maybe<Scalars['String']['output']>;
  valueOperator: EdgeSpanAttributeValueOperator;
};

export type EdgeSpanAttributeValueOperator =
  | 'EQUALS'
  | 'IS_NOT_NULL'
  | 'LIKE';

export type EdgeSpanAttributesTraceFilter = {
  __typename?: 'EdgeSpanAttributesTraceFilter';
  spanAttributeRules: Array<EdgeSpanAttributeRule>;
};

export type EdgeTraceFilterAction =
  | 'DISCARD'
  | 'KEEP';

export type EdgeTraceFilters = {
  __typename?: 'EdgeTraceFilters';
  randomTraceFilter: EdgeRandomTraceFilter;
  spanAttributesTraceFilter: EdgeSpanAttributesTraceFilter;
};

export type EdgeTraceObserver = {
  __typename?: 'EdgeTraceObserver';
  complianceTypes?: Maybe<Array<EdgeComplianceTypeCode>>;
  dataSourceGroup?: Maybe<EdgeDataSourceGroup>;
  endpoints: Array<EdgeEndpoint>;
  id: Scalars['Int']['output'];
  monitoringAccountId?: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
  providerRegion: EdgeProviderRegion;
  status: EdgeTraceObserverStatus;
  traceFilters: EdgeTraceFilters;
};

export type EdgeTraceObserverStatus =
  | 'CREATED'
  | 'DELETED';

export type EdgeTracing = {
  __typename?: 'EdgeTracing';
  traceObservers?: Maybe<Array<EdgeTraceObserver>>;
};


export type EdgeTracingTraceObserversArgs = {
  ids?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type EdgeUpdateTraceObserverInput = {
  dataSourceGroupConfig?: InputMaybe<EdgeDataSourceGroupInput>;
  id: Scalars['Int']['input'];
  monitoring?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  randomTraceFilterConfig?: InputMaybe<EdgeRandomTraceFilterInput>;
};

export type EdgeUpdateTraceObserverResponse = {
  __typename?: 'EdgeUpdateTraceObserverResponse';
  errors?: Maybe<Array<Maybe<EdgeUpdateTraceObserverResponseError>>>;
  traceObserver?: Maybe<EdgeTraceObserver>;
};

export type EdgeUpdateTraceObserverResponseError = {
  __typename?: 'EdgeUpdateTraceObserverResponseError';
  message: Scalars['String']['output'];
  type: EdgeUpdateTraceObserverResponseErrorType;
};

export type EdgeUpdateTraceObserverResponseErrorType =
  | 'INVALID_INPUT'
  | 'NOT_FOUND';

export type EdgeUpdateTraceObserverResponses = {
  __typename?: 'EdgeUpdateTraceObserverResponses';
  responses: Array<EdgeUpdateTraceObserverResponse>;
};

export type EmbeddedChartType =
  | 'APDEX'
  | 'AREA'
  | 'BAR'
  | 'BASELINE'
  | 'BILLBOARD'
  | 'BULLET'
  | 'EMPTY'
  | 'EVENT_FEED'
  | 'FUNNEL'
  | 'HEATMAP'
  | 'HISTOGRAM'
  | 'JSON'
  | 'LINE'
  | 'MARKDOWN'
  | 'PIE'
  | 'SCATTER'
  | 'STACKED_HORIZONTAL_BAR'
  | 'TABLE'
  | 'TRAFFIC_LIGHT'
  | 'VERTICAL_BAR';

export type EntitlementAttribute = {
  __typename?: 'EntitlementAttribute';
  key?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type Entity = {
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type EntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type EntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type EntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type EntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type EntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type EntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type EntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type EntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type EntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type EntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type EntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type EntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type EntityAlertSeverity =
  | 'CRITICAL'
  | 'NOT_ALERTING'
  | 'NOT_CONFIGURED'
  | 'WARNING';

export type EntityAlertStatus =
  | 'GREEN'
  | 'GREY'
  | 'LIGHT_GREEN'
  | 'RED'
  | 'YELLOW';

export type EntityAlertViolation = {
  __typename?: 'EntityAlertViolation';
  agentUrl?: Maybe<Scalars['String']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity`. */
  alertStatus?: Maybe<EntityAlertStatus>;
  closedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  level?: Maybe<Scalars['String']['output']>;
  openedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  violationId?: Maybe<Scalars['EntityAlertViolationInt']['output']>;
  violationUrl?: Maybe<Scalars['String']['output']>;
};

export type EntityCollection = {
  __typename?: 'EntityCollection';
  account?: Maybe<AccountReference>;
  createdBy?: Maybe<UserReference>;
  definition?: Maybe<EntityCollectionDefinition>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  members?: Maybe<EntitySearch>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<EntityCollectionType>;
};

export type EntityCollectionDefinition = {
  __typename?: 'EntityCollectionDefinition';
  entityGuids?: Maybe<Array<Maybe<Scalars['EntityGuid']['output']>>>;
  entitySearchQuery?: Maybe<Scalars['String']['output']>;
  scopeAccounts?: Maybe<EntityCollectionScopeAccounts>;
  searchQueries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type EntityCollectionScopeAccounts = {
  __typename?: 'EntityCollectionScopeAccounts';
  accountIds?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type EntityCollectionType =
  | 'TEAM'
  | 'WORKLOAD'
  | 'WORKLOAD_STATUS_RULE_GROUP';

export type EntityDashboardTemplatesUi = {
  __typename?: 'EntityDashboardTemplatesUi';
  template?: Maybe<Scalars['EntityDashboardTemplatesRawMosaicTemplate']['output']>;
};

export type EntityDeleteError = {
  __typename?: 'EntityDeleteError';
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  message: Scalars['String']['output'];
  type: EntityDeleteErrorType;
};

export type EntityDeleteErrorType =
  | 'FORBIDDEN'
  | 'INTERNAL_ERROR'
  | 'INVALID_INPUT';

export type EntityDeleteResult = {
  __typename?: 'EntityDeleteResult';
  deletedEntities: Array<Scalars['EntityGuid']['output']>;
  failures: Array<EntityDeleteError>;
};

export type EntityGoldenAggregatedMetrics = {
  __typename?: 'EntityGoldenAggregatedMetrics';
  metricName: Scalars['String']['output'];
  name: Scalars['String']['output'];
  queries?: Maybe<Array<Maybe<EntityGoldenAggregatedQueries>>>;
  title: Scalars['String']['output'];
  unit: EntityGoldenMetricUnit;
};

export type EntityGoldenAggregatedQueries = {
  __typename?: 'EntityGoldenAggregatedQueries';
  accountId: Scalars['Int']['output'];
  definition: EntityGoldenMetricDefinition;
  originalDefinition: EntityGoldenMetricDefinition;
  originalQuery: Scalars['String']['output'];
  query: Scalars['String']['output'];
};

export type EntityGoldenContext = {
  __typename?: 'EntityGoldenContext';
  account?: Maybe<Scalars['Int']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
};

export type EntityGoldenContextInput = {
  account?: InputMaybe<Scalars['Int']['input']>;
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
};

export type EntityGoldenContextScopedGoldenMetrics = {
  __typename?: 'EntityGoldenContextScopedGoldenMetrics';
  context: EntityGoldenContext;
  metrics: Array<EntityGoldenMetric>;
};

export type EntityGoldenContextScopedGoldenTags = {
  __typename?: 'EntityGoldenContextScopedGoldenTags';
  context: EntityGoldenContext;
  tags: Array<EntityGoldenTag>;
};

export type EntityGoldenEventObjectId =
  | 'DOMAIN_IDS'
  | 'ENTITY_GUIDS'
  | 'ENTITY_NAMES';

export type EntityGoldenGoldenMetricsError = {
  __typename?: 'EntityGoldenGoldenMetricsError';
  message?: Maybe<Scalars['String']['output']>;
  type: EntityGoldenGoldenMetricsErrorType;
};

export type EntityGoldenGoldenMetricsErrorType =
  | 'INVALID_CONTEXT'
  | 'INVALID_DOMAIN_TYPE'
  | 'INVALID_QUERY_PARAMS'
  | 'LIMIT_EXCEEDED'
  | 'NOT_AUTHORIZED';

export type EntityGoldenGroupedGoldenMetrics = {
  __typename?: 'EntityGoldenGroupedGoldenMetrics';
  domainType: DomainType;
  metrics: Array<EntityGoldenAggregatedMetrics>;
};

export type EntityGoldenMetric = {
  __typename?: 'EntityGoldenMetric';
  definition: EntityGoldenMetricDefinition;
  metricName: Scalars['String']['output'];
  name: Scalars['String']['output'];
  originalDefinitions: Array<EntityGoldenOriginalDefinitionWithSelector>;
  originalQueries: Array<EntityGoldenOriginalQueryWithSelector>;
  query: Scalars['String']['output'];
  title: Scalars['String']['output'];
  unit: EntityGoldenMetricUnit;
};

export type EntityGoldenMetricDefinition = {
  __typename?: 'EntityGoldenMetricDefinition';
  eventId: Scalars['String']['output'];
  eventObjectId: EntityGoldenEventObjectId;
  facet: Scalars['String']['output'];
  from: Scalars['String']['output'];
  select: Scalars['String']['output'];
  where?: Maybe<Scalars['String']['output']>;
};

export type EntityGoldenMetricInput = {
  eventId?: InputMaybe<Scalars['String']['input']>;
  facet?: InputMaybe<Scalars['String']['input']>;
  from?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  select: Scalars['String']['input'];
  title: Scalars['String']['input'];
  where?: InputMaybe<Scalars['String']['input']>;
};

export type EntityGoldenMetricUnit =
  | 'APDEX'
  | 'BITS'
  | 'BITS_PER_SECOND'
  | 'BYTES'
  | 'BYTES_PER_SECOND'
  | 'CELSIUS'
  | 'COUNT'
  | 'HERTZ'
  | 'MESSAGES_PER_SECOND'
  | 'MS'
  | 'OPERATIONS_PER_SECOND'
  | 'PAGES_PER_SECOND'
  | 'PERCENTAGE'
  | 'REQUESTS_PER_MINUTE'
  | 'REQUESTS_PER_SECOND'
  | 'SECONDS'
  | 'TIMESTAMP';

export type EntityGoldenMetricsDomainTypeScoped = {
  __typename?: 'EntityGoldenMetricsDomainTypeScoped';
  context: EntityGoldenContext;
  domainType: DomainType;
  metrics: Array<EntityGoldenMetric>;
};

export type EntityGoldenMetricsDomainTypeScopedResponse = {
  __typename?: 'EntityGoldenMetricsDomainTypeScopedResponse';
  errors?: Maybe<Array<EntityGoldenGoldenMetricsError>>;
  metrics?: Maybe<EntityGoldenMetricsDomainTypeScoped>;
};

export type EntityGoldenNrqlTimeWindowInput = {
  since?: InputMaybe<Scalars['Nrql']['input']>;
  until?: InputMaybe<Scalars['Nrql']['input']>;
};

export type EntityGoldenOriginalDefinitionWithSelector = {
  __typename?: 'EntityGoldenOriginalDefinitionWithSelector';
  definition: EntityGoldenMetricDefinition;
  selectorValue: Scalars['String']['output'];
};

export type EntityGoldenOriginalQueryWithSelector = {
  __typename?: 'EntityGoldenOriginalQueryWithSelector';
  query: Scalars['String']['output'];
  selectorValue: Scalars['String']['output'];
};

export type EntityGoldenTag = {
  __typename?: 'EntityGoldenTag';
  key: Scalars['String']['output'];
};

export type EntityGoldenTagInput = {
  key: Scalars['String']['input'];
};

export type EntityGoldenTagsDomainTypeScoped = {
  __typename?: 'EntityGoldenTagsDomainTypeScoped';
  context: EntityGoldenContext;
  domainType: DomainType;
  tags: Array<EntityGoldenTag>;
};

export type EntityGoldenTagsDomainTypeScopedResponse = {
  __typename?: 'EntityGoldenTagsDomainTypeScopedResponse';
  errors?: Maybe<Array<EntityGoldenGoldenMetricsError>>;
  tags?: Maybe<EntityGoldenTagsDomainTypeScoped>;
};

export type EntityGuidSegments = {
  __typename?: 'EntityGuidSegments';
  accountId?: Maybe<Scalars['Int']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  domainId?: Maybe<Scalars['String']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type EntityInfrastructureIntegrationType =
  | 'APACHE_SERVER'
  | 'AWSELASTICSEARCHNODE'
  | 'AWS_ALB'
  | 'AWS_ALB_LISTENER'
  | 'AWS_ALB_LISTENER_RULE'
  | 'AWS_ALB_TARGET_GROUP'
  | 'AWS_API_GATEWAY_API'
  | 'AWS_API_GATEWAY_RESOURCE'
  | 'AWS_API_GATEWAY_RESOURCE_WITH_METRICS'
  | 'AWS_API_GATEWAY_STAGE'
  | 'AWS_AUTO_SCALING_GROUP'
  | 'AWS_AUTO_SCALING_INSTANCE'
  | 'AWS_AUTO_SCALING_LAUNCH_CONFIGURATION'
  | 'AWS_AUTO_SCALING_POLICY'
  | 'AWS_AUTO_SCALING_REGION_LIMIT'
  | 'AWS_BILLING_ACCOUNT_COST'
  | 'AWS_BILLING_ACCOUNT_SERVICE_COST'
  | 'AWS_BILLING_BUDGET'
  | 'AWS_BILLING_SERVICE_COST'
  | 'AWS_CLOUD_FRONT_DISTRIBUTION'
  | 'AWS_CLOUD_TRAIL'
  | 'AWS_DYNAMO_DB_GLOBAL_SECONDARY_INDEX'
  | 'AWS_DYNAMO_DB_REGION'
  | 'AWS_DYNAMO_DB_TABLE'
  | 'AWS_EBS_VOLUME'
  | 'AWS_ECS_CLUSTER'
  | 'AWS_ECS_SERVICE'
  | 'AWS_EFS_FILE_SYSTEM'
  | 'AWS_ELASTICSEARCH_CLUSTER'
  | 'AWS_ELASTICSEARCH_INSTANCE'
  | 'AWS_ELASTIC_BEANSTALK_ENVIRONMENT'
  | 'AWS_ELASTIC_BEANSTALK_INSTANCE'
  | 'AWS_ELASTIC_MAP_REDUCE_CLUSTER'
  | 'AWS_ELASTIC_MAP_REDUCE_INSTANCE'
  | 'AWS_ELASTIC_MAP_REDUCE_INSTANCE_FLEET'
  | 'AWS_ELASTIC_MAP_REDUCE_INSTANCE_GROUP'
  | 'AWS_ELASTI_CACHE_MEMCACHED_CLUSTER'
  | 'AWS_ELASTI_CACHE_MEMCACHED_NODE'
  | 'AWS_ELASTI_CACHE_REDIS_CLUSTER'
  | 'AWS_ELASTI_CACHE_REDIS_NODE'
  | 'AWS_ELB'
  | 'AWS_HEALTH_ISSUE'
  | 'AWS_HEALTH_NOTIFICATION'
  | 'AWS_HEALTH_SCHEDULED_CHANGE'
  | 'AWS_HEALTH_UNKNOWN'
  | 'AWS_IAM'
  | 'AWS_IAM_GROUP'
  | 'AWS_IAM_OPEN_ID_PROVIDER'
  | 'AWS_IAM_POLICY'
  | 'AWS_IAM_ROLE'
  | 'AWS_IAM_SAML_PROVIDER'
  | 'AWS_IAM_SERVER_CERTIFICATE'
  | 'AWS_IAM_USER'
  | 'AWS_IAM_VIRTUAL_MFA_DEVICE'
  | 'AWS_IOT_BROKER'
  | 'AWS_IOT_RULE'
  | 'AWS_IOT_RULE_ACTION'
  | 'AWS_KINESIS_DELIVERY_STREAM'
  | 'AWS_KINESIS_STREAM'
  | 'AWS_KINESIS_STREAM_SHARD'
  | 'AWS_LAMBDA_AGENT_TRANSACTION'
  | 'AWS_LAMBDA_AGENT_TRANSACTION_ERROR'
  | 'AWS_LAMBDA_EDGE_FUNCTION'
  | 'AWS_LAMBDA_EVENT_SOURCE_MAPPING'
  | 'AWS_LAMBDA_FUNCTION'
  | 'AWS_LAMBDA_FUNCTION_ALIAS'
  | 'AWS_LAMBDA_OPERATION'
  | 'AWS_LAMBDA_REGION'
  | 'AWS_LAMBDA_SPAN'
  | 'AWS_LAMBDA_TRACE'
  | 'AWS_RDS_DB_CLUSTER'
  | 'AWS_RDS_DB_INSTANCE'
  | 'AWS_REDSHIFT_CLUSTER'
  | 'AWS_REDSHIFT_NODE'
  | 'AWS_ROUTE53_HEALTH_CHECK'
  | 'AWS_ROUTE53_ZONE'
  | 'AWS_ROUTE53_ZONE_RECORD_SET'
  | 'AWS_S3_BUCKET'
  | 'AWS_S3_BUCKET_REQUESTS'
  | 'AWS_SES_CONFIGURATION_SET'
  | 'AWS_SES_EVENT_DESTINATION'
  | 'AWS_SES_RECEIPT_FILTER'
  | 'AWS_SES_RECEIPT_RULE'
  | 'AWS_SES_RECEIPT_RULE_SET'
  | 'AWS_SES_REGION'
  | 'AWS_SNS_SUBSCRIPTION'
  | 'AWS_SNS_TOPIC'
  | 'AWS_SQS_QUEUE'
  | 'AWS_VPC'
  | 'AWS_VPC_ENDPOINT'
  | 'AWS_VPC_INTERNET_GATEWAY'
  | 'AWS_VPC_NAT_GATEWAY'
  | 'AWS_VPC_NETWORK_ACL'
  | 'AWS_VPC_NETWORK_INTERFACE'
  | 'AWS_VPC_PEERING_CONNECTION'
  | 'AWS_VPC_ROUTE_TABLE'
  | 'AWS_VPC_SECURITY_GROUP'
  | 'AWS_VPC_SUBNET'
  | 'AWS_VPC_VPN_CONNECTION'
  | 'AWS_VPC_VPN_TUNNEL'
  | 'AZURE_APP_SERVICE_HOST_NAME'
  | 'AZURE_APP_SERVICE_WEB_APP'
  | 'AZURE_COSMOS_DB_ACCOUNT'
  | 'AZURE_FUNCTIONS_APP'
  | 'AZURE_LOAD_BALANCER'
  | 'AZURE_LOAD_BALANCER_BACKEND'
  | 'AZURE_LOAD_BALANCER_FRONTEND_IP'
  | 'AZURE_LOAD_BALANCER_INBOUND_NAT_POOL'
  | 'AZURE_LOAD_BALANCER_INBOUND_NAT_RULE'
  | 'AZURE_LOAD_BALANCER_PROBE'
  | 'AZURE_LOAD_BALANCER_RULE'
  | 'AZURE_MARIADB_SERVER'
  | 'AZURE_MYSQL_SERVER'
  | 'AZURE_POSTGRESQL_SERVER'
  | 'AZURE_REDIS_CACHE'
  | 'AZURE_REDIS_CACHE_SHARD'
  | 'AZURE_SERVICE_BUS_NAMESPACE'
  | 'AZURE_SERVICE_BUS_QUEUE'
  | 'AZURE_SERVICE_BUS_SUBSCRIPTION'
  | 'AZURE_SERVICE_BUS_TOPIC'
  | 'AZURE_SQL_DATABASE'
  | 'AZURE_SQL_ELASTIC_POOL'
  | 'AZURE_SQL_FIREWALL'
  | 'AZURE_SQL_REPLICATION_LINK'
  | 'AZURE_SQL_RESTORE_POINT'
  | 'AZURE_SQL_SERVER'
  | 'AZURE_STORAGE_ACCOUNT'
  | 'AZURE_VIRTUAL_NETWORKS'
  | 'AZURE_VIRTUAL_NETWORKS_IP_CONFIGURATION'
  | 'AZURE_VIRTUAL_NETWORKS_NETWORK_INTERFACE'
  | 'AZURE_VIRTUAL_NETWORKS_PEERING'
  | 'AZURE_VIRTUAL_NETWORKS_PUBLIC_IP_ADDRESS'
  | 'AZURE_VIRTUAL_NETWORKS_ROUTE'
  | 'AZURE_VIRTUAL_NETWORKS_ROUTE_TABLE'
  | 'AZURE_VIRTUAL_NETWORKS_SECURITY_GROUP'
  | 'AZURE_VIRTUAL_NETWORKS_SECURITY_RULE'
  | 'AZURE_VIRTUAL_NETWORKS_SUBNET'
  | 'CASSANDRA_NODE'
  | 'CONSUL_AGENT'
  | 'COUCHBASE_BUCKET'
  | 'COUCHBASE_CLUSTER'
  | 'COUCHBASE_NODE'
  | 'COUCHBASE_QUERY_ENGINE'
  | 'ELASTICSEARCH_NODE'
  | 'F5_NODE'
  | 'F5_POOL'
  | 'F5_POOL_MEMBER'
  | 'F5_SYSTEM'
  | 'F5_VIRTUAL_SERVER'
  | 'GCP_APP_ENGINE_SERVICE'
  | 'GCP_BIG_QUERY_DATA_SET'
  | 'GCP_BIG_QUERY_PROJECT'
  | 'GCP_BIG_QUERY_TABLE'
  | 'GCP_CLOUD_FUNCTION'
  | 'GCP_CLOUD_SQL'
  | 'GCP_CLOUD_TASKS_QUEUE'
  | 'GCP_HTTP_LOAD_BALANCER'
  | 'GCP_INTERNAL_LOAD_BALANCER'
  | 'GCP_KUBERNETES_CONTAINER'
  | 'GCP_KUBERNETES_NODE'
  | 'GCP_KUBERNETES_POD'
  | 'GCP_PUB_SUB_SUBSCRIPTION'
  | 'GCP_PUB_SUB_TOPIC'
  | 'GCP_SPANNER_DATABASE'
  | 'GCP_SPANNER_INSTANCE'
  | 'GCP_STORAGE_BUCKET'
  | 'GCP_TCP_SSL_PROXY_LOAD_BALANCER'
  | 'GCP_VIRTUAL_MACHINE_DISK'
  | 'KAFKA_BROKER'
  | 'KAFKA_TOPIC'
  | 'KUBERNETES_CLUSTER'
  | 'MEMCACHED_INSTANCE'
  | 'MSSQL_INSTANCE'
  | 'MYSQL_NODE'
  | 'NA'
  | 'NGINX_SERVER'
  | 'ORACLE_DB_INSTANCE'
  | 'POSTGRE_SQL_INSTANCE'
  | 'RABBIT_MQ_CLUSTER'
  | 'RABBIT_MQ_EXCHANGE'
  | 'RABBIT_MQ_NODE'
  | 'RABBIT_MQ_QUEUE'
  | 'REDIS_INSTANCE'
  | 'VARNISH_INSTANCE';

export type EntityKeepAliveError = {
  __typename?: 'EntityKeepAliveError';
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  message: Scalars['String']['output'];
  type: EntityKeepAliveErrorType;
};

export type EntityKeepAliveErrorType =
  | 'FORBIDDEN'
  | 'INTERNAL_ERROR'
  | 'INVALID_INPUT';

export type EntityKeepAliveResult = {
  __typename?: 'EntityKeepAliveResult';
  failures: Array<EntityKeepAliveError>;
  refreshedEntities: Array<Scalars['EntityGuid']['output']>;
};

export type EntityOutline = {
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type EntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type EntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type EntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type EntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type EntityRelationship = {
  __typename?: 'EntityRelationship';
  /** @deprecated `relationships` and its subfields are deprecated. Please use `relatedEntities`. */
  source?: Maybe<EntityRelationshipNode>;
  /** @deprecated `relationships` and its subfields are deprecated. Please use `relatedEntities`. */
  target?: Maybe<EntityRelationshipNode>;
  type?: Maybe<EntityRelationshipType>;
};

export type EntityRelationshipDetectedEdge = EntityRelationshipEdge & {
  __typename?: 'EntityRelationshipDetectedEdge';
  createdAt: Scalars['EpochMilliseconds']['output'];
  source: EntityRelationshipVertex;
  target: EntityRelationshipVertex;
  type: EntityRelationshipEdgeType;
};

export type EntityRelationshipEdge = {
  createdAt: Scalars['EpochMilliseconds']['output'];
  source: EntityRelationshipVertex;
  target: EntityRelationshipVertex;
  type: EntityRelationshipEdgeType;
};

export type EntityRelationshipEdgeDirection =
  | 'BOTH'
  | 'INBOUND'
  | 'OUTBOUND';

export type EntityRelationshipEdgeFilter = {
  direction?: InputMaybe<EntityRelationshipEdgeDirection>;
  entityDomainTypes?: InputMaybe<EntityRelationshipEntityDomainTypeFilter>;
  relationshipTypes?: InputMaybe<EntityRelationshipEdgeTypeFilter>;
};

export type EntityRelationshipEdgeType =
  | 'BUILT_FROM'
  | 'CALLS'
  | 'CONNECTS_TO'
  | 'CONSUMES'
  | 'CONTAINS'
  | 'HOSTS'
  | 'IS'
  | 'MANAGES'
  | 'MEASURES'
  | 'OPERATES_IN'
  | 'OWNS'
  | 'PRODUCES'
  | 'SERVES';

export type EntityRelationshipEdgeTypeFilter = {
  exclude?: InputMaybe<Array<EntityRelationshipEdgeType>>;
  include?: InputMaybe<Array<EntityRelationshipEdgeType>>;
};

export type EntityRelationshipEntityDomainTypeFilter = {
  alertable?: InputMaybe<Scalars['Boolean']['input']>;
  exclude?: InputMaybe<Array<DomainTypeInput>>;
  include?: InputMaybe<Array<DomainTypeInput>>;
};

export type EntityRelationshipEntityHealthFilter = {
  alertingAtLeastOnceSince?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  anomalousAtLeastOnceSince?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};

export type EntityRelationshipEntitySearchOptions = {
  caseSensitiveTagMatching?: InputMaybe<Scalars['Boolean']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type EntityRelationshipEntitySearchQueryInput = {
  options?: InputMaybe<EntityRelationshipEntitySearchOptions>;
  query: Scalars['EntitySearchQuery']['input'];
};

export type EntityRelationshipFilter = {
  entityType?: InputMaybe<Array<InputMaybe<EntityType>>>;
  infrastructureIntegrationType?: InputMaybe<Array<InputMaybe<EntityInfrastructureIntegrationType>>>;
};

export type EntityRelationshipHopFilter = {
  filters: Array<EntityRelationshipTraversalFilter>;
  hop: Scalars['Int']['input'];
};

export type EntityRelationshipNode = {
  __typename?: 'EntityRelationshipNode';
  /** @deprecated `relationships` and its subfields are deprecated. Please use `relatedEntities`. */
  accountId?: Maybe<Scalars['Int']['output']>;
  entity?: Maybe<EntityOutline>;
  /** @deprecated `relationships` and its subfields are deprecated. Please use `relatedEntities`. */
  entityType?: Maybe<EntityType>;
  /** @deprecated `relationships` and its subfields are deprecated. Please use `relatedEntities`. */
  guid?: Maybe<Scalars['EntityGuid']['output']>;
};

export type EntityRelationshipRelatedEntitiesResult = {
  __typename?: 'EntityRelationshipRelatedEntitiesResult';
  count: Scalars['Int']['output'];
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<EntityRelationshipEdge>;
};

export type EntityRelationshipSearchFilters = {
  default: Array<EntityRelationshipTraversalFilter>;
};

export type EntityRelationshipSearchResponse = {
  __typename?: 'EntityRelationshipSearchResponse';
  relationships: Array<EntityRelationshipEdge>;
};

export type EntityRelationshipTraversalFilter = {
  direction?: InputMaybe<EntityRelationshipEdgeDirection>;
  entityHealth?: InputMaybe<EntityRelationshipEntityHealthFilter>;
  fromEntityDomainTypes?: InputMaybe<EntityRelationshipEntityDomainTypeFilter>;
  relationshipTypes?: InputMaybe<EntityRelationshipEdgeTypeFilter>;
  toEntityDomainTypes?: InputMaybe<EntityRelationshipEntityDomainTypeFilter>;
};

export type EntityRelationshipTraversalHopFilters = {
  default?: InputMaybe<Array<EntityRelationshipTraversalFilter>>;
  hopFilters?: InputMaybe<Array<EntityRelationshipHopFilter>>;
};

export type EntityRelationshipTraversalResult = {
  __typename?: 'EntityRelationshipTraversalResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<EntityRelationshipEdge>;
};

export type EntityRelationshipType =
  | 'BUILT_FROM'
  | 'CALLS'
  | 'CONNECTS_TO'
  | 'CONTAINS'
  | 'HOSTS'
  | 'IS'
  | 'SERVES'
  | 'UNKNOWN';

export type EntityRelationshipUserDefinedCreateOrReplaceErrorType =
  | 'LIMIT_EXCEEDED'
  | 'NOT_ALLOWED'
  | 'NOT_AUTHORIZED';

export type EntityRelationshipUserDefinedCreateOrReplaceResult = {
  __typename?: 'EntityRelationshipUserDefinedCreateOrReplaceResult';
  errors?: Maybe<Array<EntityRelationshipUserDefinedCreateOrReplaceResultError>>;
};

export type EntityRelationshipUserDefinedCreateOrReplaceResultError = {
  __typename?: 'EntityRelationshipUserDefinedCreateOrReplaceResultError';
  message: Scalars['String']['output'];
  type: EntityRelationshipUserDefinedCreateOrReplaceErrorType;
};

export type EntityRelationshipUserDefinedDeleteErrorType =
  | 'NOT_AUTHORIZED';

export type EntityRelationshipUserDefinedDeleteResult = {
  __typename?: 'EntityRelationshipUserDefinedDeleteResult';
  errors?: Maybe<Array<EntityRelationshipUserDefinedDeleteResultError>>;
};

export type EntityRelationshipUserDefinedDeleteResultError = {
  __typename?: 'EntityRelationshipUserDefinedDeleteResultError';
  message: Scalars['String']['output'];
  type: EntityRelationshipUserDefinedDeleteErrorType;
};

export type EntityRelationshipUserDefinedEdge = EntityRelationshipEdge & {
  __typename?: 'EntityRelationshipUserDefinedEdge';
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdByUser?: Maybe<UserReference>;
  source: EntityRelationshipVertex;
  target: EntityRelationshipVertex;
  type: EntityRelationshipEdgeType;
};

export type EntityRelationshipVertex = {
  __typename?: 'EntityRelationshipVertex';
  accountId: Scalars['Int']['output'];
  entity?: Maybe<EntityOutline>;
  guid: Scalars['EntityGuid']['output'];
};

export type EntitySearch = {
  __typename?: 'EntitySearch';
  count?: Maybe<Scalars['Int']['output']>;
  counts?: Maybe<Array<Maybe<EntitySearchCounts>>>;
  facetedCounts?: Maybe<EntitySearchFacetedCountsResult>;
  groupedResults?: Maybe<Array<Maybe<EntitySearchGroupedResult>>>;
  query?: Maybe<Scalars['String']['output']>;
  results?: Maybe<EntitySearchResult>;
  types?: Maybe<Array<Maybe<EntitySearchTypes>>>;
};


export type EntitySearchCountsArgs = {
  facet?: InputMaybe<Array<EntitySearchCountsFacet>>;
  facetTags?: InputMaybe<Array<Scalars['String']['input']>>;
};


export type EntitySearchFacetedCountsArgs = {
  facets: Array<EntitySearchCountsFacetInput>;
};


export type EntitySearchGroupedResultsArgs = {
  by: EntitySearchGroupingCriterion;
  options?: InputMaybe<EntitySearchGroupedResultsOptions>;
};


export type EntitySearchResultsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};

export type EntitySearchCounts = {
  __typename?: 'EntitySearchCounts';
  count?: Maybe<Scalars['Int']['output']>;
  facet?: Maybe<Scalars['AttributeMap']['output']>;
};

export type EntitySearchCountsFacet =
  | 'ACCOUNT_ID'
  | 'ALERT_SEVERITY'
  | 'DOMAIN'
  | 'DOMAIN_TYPE'
  | 'NAME'
  | 'REPORTING'
  | 'TYPE';

export type EntitySearchCountsFacetInput = {
  facetCriterion: FacetCriterion;
  orderBy?: InputMaybe<SortBy>;
};

export type EntitySearchFacetedCountsResult = {
  __typename?: 'EntitySearchFacetedCountsResult';
  counts?: Maybe<Array<Maybe<EntitySearchCounts>>>;
  facetLimits?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type EntitySearchFilterOperator =
  | 'EQ'
  | 'GT'
  | 'GTE'
  | 'LT'
  | 'LTE';

export type EntitySearchGroupedResult = {
  __typename?: 'EntitySearchGroupedResult';
  count?: Maybe<Scalars['Int']['output']>;
  entities?: Maybe<Array<Maybe<EntityOutline>>>;
  group?: Maybe<Scalars['AttributeMap']['output']>;
};

export type EntitySearchGroupedResultsOptions = {
  groupLimit?: InputMaybe<Scalars['Int']['input']>;
  groupValuesFilter?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type EntitySearchGroupingAttribute =
  | 'ACCOUNT_ID'
  | 'ALERT_SEVERITY'
  | 'DOMAIN'
  | 'DOMAIN_TYPE'
  | 'NAME'
  | 'REPORTING'
  | 'TYPE';

export type EntitySearchGroupingCriterion = {
  attribute?: InputMaybe<EntitySearchGroupingAttribute>;
  tag?: InputMaybe<Scalars['String']['input']>;
};

export type EntitySearchMetricFilterInput = {
  name: Scalars['String']['input'];
  operator: EntitySearchFilterOperator;
  value: Scalars['Float']['input'];
};

export type EntitySearchMetricSortByInput = {
  direction: EntitySearchSortByDirection;
  name: Scalars['String']['input'];
};

export type EntitySearchOptions = {
  caseSensitiveTagMatching?: InputMaybe<Scalars['Boolean']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  tagFilter?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type EntitySearchQueryBuilder = {
  alertSeverity?: InputMaybe<EntityAlertSeverity>;
  alertable?: InputMaybe<Scalars['Boolean']['input']>;
  domain?: InputMaybe<EntitySearchQueryBuilderDomain>;
  infrastructureIntegrationType?: InputMaybe<EntityInfrastructureIntegrationType>;
  name?: InputMaybe<Scalars['String']['input']>;
  reporting?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<Array<EntitySearchQueryBuilderTag>>;
  type?: InputMaybe<EntitySearchQueryBuilderType>;
};

export type EntitySearchQueryBuilderDomain =
  | 'APM'
  | 'BROWSER'
  | 'EXT'
  | 'INFRA'
  | 'MOBILE'
  | 'SYNTH';

export type EntitySearchQueryBuilderTag = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type EntitySearchQueryBuilderType =
  | 'APPLICATION'
  | 'DASHBOARD'
  | 'HOST'
  | 'MONITOR'
  | 'WORKLOAD';

export type EntitySearchResult = {
  __typename?: 'EntitySearchResult';
  accounts?: Maybe<Array<Maybe<AccountAccessInfo>>>;
  entities?: Maybe<Array<Maybe<EntityOutline>>>;
  entityTypes?: Maybe<Array<Maybe<EntityTypeResults>>>;
  groupedGoldenMetrics?: Maybe<Array<Maybe<EntityGoldenGroupedGoldenMetrics>>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};


export type EntitySearchResultGroupedGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};

export type EntitySearchSortByDirection =
  | 'ASC'
  | 'DESC';

export type EntitySearchSortByGoldenMetricResult = {
  __typename?: 'EntitySearchSortByGoldenMetricResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entities: Array<Maybe<EntityOutline>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount: Scalars['Int']['output'];
};

export type EntitySearchSortCriteria =
  | 'ALERT_SEVERITY'
  | 'DOMAIN'
  | 'MOST_RELEVANT'
  | 'NAME'
  | 'REPORTING'
  | 'TYPE';

export type EntitySearchTypes = {
  __typename?: 'EntitySearchTypes';
  count?: Maybe<Scalars['Int']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  type?: Maybe<Scalars['String']['output']>;
};

export type EntitySummaryMetric = {
  __typename?: 'EntitySummaryMetric';
  name?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  value?: Maybe<EntitySummaryMetricValue>;
};

export type EntitySummaryMetricDefinition = {
  __typename?: 'EntitySummaryMetricDefinition';
  name: Scalars['String']['output'];
  title: Scalars['String']['output'];
  unit: EntitySummaryMetricUnit;
};

export type EntitySummaryMetricUnit =
  | 'APDEX'
  | 'BITS'
  | 'BITS_PER_SECOND'
  | 'BYTES'
  | 'BYTES_PER_SECOND'
  | 'CELSIUS'
  | 'COUNT'
  | 'HERTZ'
  | 'MESSAGES_PER_SECOND'
  | 'MS'
  | 'OPERATIONS_PER_SECOND'
  | 'PAGES_PER_SECOND'
  | 'PERCENTAGE'
  | 'REQUESTS_PER_MINUTE'
  | 'REQUESTS_PER_SECOND'
  | 'SECONDS'
  | 'STRING'
  | 'TIMESTAMP';

export type EntitySummaryMetricValue = {
  unit?: Maybe<EntitySummaryMetricUnit>;
};

export type EntitySummaryNumericMetricValue = EntitySummaryMetricValue & {
  __typename?: 'EntitySummaryNumericMetricValue';
  numericValue?: Maybe<Scalars['Float']['output']>;
  unit?: Maybe<EntitySummaryMetricUnit>;
};

export type EntitySummaryStringMetricValue = EntitySummaryMetricValue & {
  __typename?: 'EntitySummaryStringMetricValue';
  stringValue?: Maybe<Scalars['String']['output']>;
  unit?: Maybe<EntitySummaryMetricUnit>;
};

export type EntityTag = {
  __typename?: 'EntityTag';
  key?: Maybe<Scalars['String']['output']>;
  values?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type EntityTagValueWithMetadata = {
  __typename?: 'EntityTagValueWithMetadata';
  mutable?: Maybe<Scalars['Boolean']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type EntityTagWithMetadata = {
  __typename?: 'EntityTagWithMetadata';
  key?: Maybe<Scalars['String']['output']>;
  values?: Maybe<Array<Maybe<EntityTagValueWithMetadata>>>;
};

export type EntityType =
  | 'APM_APPLICATION_ENTITY'
  | 'APM_DATABASE_INSTANCE_ENTITY'
  | 'APM_EXTERNAL_SERVICE_ENTITY'
  | 'BROWSER_APPLICATION_ENTITY'
  | 'DASHBOARD_ENTITY'
  | 'EXTERNAL_ENTITY'
  | 'GENERIC_ENTITY'
  | 'GENERIC_INFRASTRUCTURE_ENTITY'
  | 'INFRASTRUCTURE_AWS_LAMBDA_FUNCTION_ENTITY'
  | 'INFRASTRUCTURE_HOST_ENTITY'
  | 'KEY_TRANSACTION_ENTITY'
  | 'MOBILE_APPLICATION_ENTITY'
  | 'SECURE_CREDENTIAL_ENTITY'
  | 'SYNTHETIC_MONITOR_ENTITY'
  | 'TEAM_ENTITY'
  | 'THIRD_PARTY_SERVICE_ENTITY'
  | 'UNAVAILABLE_ENTITY'
  | 'WORKLOAD_ENTITY';

export type EntityTypeResults = {
  __typename?: 'EntityTypeResults';
  domain?: Maybe<Scalars['String']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  id?: Maybe<Scalars['String']['output']>;
  summaryMetricDefinitions?: Maybe<Array<EntitySummaryMetricDefinition>>;
  type?: Maybe<Scalars['String']['output']>;
  uiDefinitions?: Maybe<EntityTypeUiDefinitionsResult>;
};


export type EntityTypeResultsGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type EntityTypeResultsGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type EntityTypeResultsUiDefinitionsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type EntityTypeUiDefinitionsContext = {
  __typename?: 'EntityTypeUiDefinitionsContext';
  entityTypesDomainType?: Maybe<Array<Maybe<DomainType>>>;
  entityTypesGuid?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  launchers?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  nerdlets?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type EntityTypeUiDefinitionsDashboardProvider = {
  __typename?: 'EntityTypeUiDefinitionsDashboardProvider';
  newRelic?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  openTelemetry?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type EntityTypeUiDefinitionsEntityContext = {
  __typename?: 'EntityTypeUiDefinitionsEntityContext';
  items: Array<Scalars['String']['output']>;
};

export type EntityTypeUiDefinitionsNerdletSection = {
  __typename?: 'EntityTypeUiDefinitionsNerdletSection';
  name: Scalars['String']['output'];
  nerdlets: Array<Maybe<Scalars['String']['output']>>;
};

export type EntityTypeUiDefinitionsRelationshipsContext = {
  __typename?: 'EntityTypeUiDefinitionsRelationshipsContext';
  enabled: Scalars['Boolean']['output'];
};

export type EntityTypeUiDefinitionsResult = {
  __typename?: 'EntityTypeUiDefinitionsResult';
  category: Scalars['String']['output'];
  context?: Maybe<EntityTypeUiDefinitionsContext>;
  description: Scalars['String']['output'];
  displayName: Scalars['String']['output'];
  displayNamePlural?: Maybe<Scalars['String']['output']>;
  domain: Scalars['String']['output'];
  domainDashboardSlug?: Maybe<EntityTypeUiDefinitionsDashboardProvider>;
  domainName?: Maybe<Scalars['String']['output']>;
  entityContext?: Maybe<EntityTypeUiDefinitionsEntityContext>;
  icon: Scalars['String']['output'];
  isCollection?: Maybe<Scalars['Boolean']['output']>;
  nerdletSections?: Maybe<Array<Maybe<EntityTypeUiDefinitionsNerdletSection>>>;
  overviewNerdletId?: Maybe<Scalars['String']['output']>;
  quickstartDashboardSlug?: Maybe<EntityTypeUiDefinitionsDashboardProvider>;
  relationshipsContext?: Maybe<EntityTypeUiDefinitionsRelationshipsContext>;
  type: Scalars['String']['output'];
};

export type ErrorTrace = {
  __typename?: 'ErrorTrace';
  accountId?: Maybe<Scalars['Int']['output']>;
  agentAttributesMap?: Maybe<Scalars['AttributeMap']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  exception?: Maybe<Scalars['String']['output']>;
  expected?: Maybe<Scalars['Boolean']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  intrinsicAttributesMap?: Maybe<Scalars['AttributeMap']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  path?: Maybe<Scalars['String']['output']>;
  stackTrace?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  timestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
  userAttributesMap?: Maybe<Scalars['AttributeMap']['output']>;
};

export type ErrorTrackingAssignErrorGroupError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingAssignErrorGroupError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingAssignErrorGroupErrorType;
};

export type ErrorTrackingAssignErrorGroupErrorType =
  | 'NOT_AUTHORIZED';

export type ErrorTrackingAssignErrorGroupInput = {
  userId: Scalars['Int']['input'];
};

export type ErrorTrackingAssignErrorGroupResponse = {
  __typename?: 'ErrorTrackingAssignErrorGroupResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  assignedUser?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingAssignErrorGroupError>>;
};

export type ErrorTrackingCommentOnErrorGroupError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingCommentOnErrorGroupError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingCommentOnErrorGroupErrorType;
};

export type ErrorTrackingCommentOnErrorGroupErrorType =
  | 'COMMENT_TOO_OLD'
  | 'NOT_AUTHORIZED';

export type ErrorTrackingCommentOnErrorGroupInput = {
  text: Scalars['String']['input'];
};

export type ErrorTrackingCommentOnErrorGroupResponse = {
  __typename?: 'ErrorTrackingCommentOnErrorGroupResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  comment: ErrorTrackingErrorGroupComment;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingCommentOnErrorGroupError>>;
};

export type ErrorTrackingConfigureErrorGroupChannelError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingConfigureErrorGroupChannelError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingConfigureErrorGroupChannelErrorType;
};

export type ErrorTrackingConfigureErrorGroupChannelErrorType =
  | 'INVALID_CHANNEL_ID'
  | 'NOT_AUTHORIZED';

export type ErrorTrackingConfigureErrorGroupChannelResponse = {
  __typename?: 'ErrorTrackingConfigureErrorGroupChannelResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  channel?: Maybe<ErrorTrackingNotificationChannel>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingConfigureErrorGroupChannelError>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  session?: Maybe<ErrorTrackingNotificationSession>;
};

export type ErrorTrackingConfigureNotificationPolicyError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingConfigureNotificationPolicyError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingConfigureNotificationPolicyErrorType;
};

export type ErrorTrackingConfigureNotificationPolicyErrorType =
  | 'NOT_AUTHORIZED';

export type ErrorTrackingConfigureNotificationPolicyInput = {
  channels?: InputMaybe<Array<ErrorTrackingNotificationChannelInput>>;
  name: Scalars['String']['input'];
};

export type ErrorTrackingConfigureNotificationPolicyResponse = {
  __typename?: 'ErrorTrackingConfigureNotificationPolicyResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingConfigureNotificationPolicyError>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  policy?: Maybe<ErrorTrackingNotificationPolicy>;
};

export type ErrorTrackingDeleteCommentFromErrorGroupError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingDeleteCommentFromErrorGroupError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingDeleteCommentFromErrorGroupErrorType;
};

export type ErrorTrackingDeleteCommentFromErrorGroupErrorType =
  | 'COMMENT_TOO_OLD'
  | 'NOT_AUTHORIZED';

export type ErrorTrackingDeleteCommentFromErrorGroupInput = {
  authorId?: InputMaybe<Scalars['Int']['input']>;
  timestamp: Scalars['EpochMilliseconds']['input'];
};

export type ErrorTrackingDeleteCommentFromErrorGroupResponse = {
  __typename?: 'ErrorTrackingDeleteCommentFromErrorGroupResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingDeleteCommentFromErrorGroupError>>;
};

export type ErrorTrackingDeleteErrorGroupChannelError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingDeleteErrorGroupChannelError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingDeleteErrorGroupChannelErrorType;
};

export type ErrorTrackingDeleteErrorGroupChannelErrorType =
  | 'INVALID_CHANNEL_ID'
  | 'NOT_AUTHORIZED';

export type ErrorTrackingDeleteErrorGroupChannelResponse = {
  __typename?: 'ErrorTrackingDeleteErrorGroupChannelResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  channelId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingDeleteErrorGroupChannelError>>;
};

export type ErrorTrackingDeleteNotificationPolicyError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingDeleteNotificationPolicyError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingDeleteNotificationPolicyErrorType;
};

export type ErrorTrackingDeleteNotificationPolicyErrorType =
  | 'NOT_AUTHORIZED';

export type ErrorTrackingDeleteNotificationPolicyResponse = {
  __typename?: 'ErrorTrackingDeleteNotificationPolicyResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingDeleteNotificationPolicyError>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  workloadGuid: Scalars['EntityGuid']['output'];
};

export type ErrorTrackingErrorGroup = {
  __typename?: 'ErrorTrackingErrorGroup';
  /** @deprecated This field is experimental and subject to breaking changes. */
  assignedUser?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  channels?: Maybe<Array<ErrorTrackingNotificationChannel>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  comments?: Maybe<ErrorTrackingErrorGroupCommentsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  notificationSessions?: Maybe<ErrorTrackingErrorGroupNotificationSessionsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  state?: Maybe<ErrorTrackingErrorGroupState>;
};


export type ErrorTrackingErrorGroupCommentsArgs = {
  after?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type ErrorTrackingErrorGroupNotificationSessionsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  destinationType?: InputMaybe<ErrorTrackingNotificationDestination>;
};

export type ErrorTrackingErrorGroupChannelInput = {
  channelId: Scalars['ID']['input'];
};

export type ErrorTrackingErrorGroupComment = {
  __typename?: 'ErrorTrackingErrorGroupComment';
  /** @deprecated This field is experimental and subject to breaking changes. */
  author: UserReference;
  /** @deprecated This field is experimental and subject to breaking changes. */
  deleted: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  editedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  text: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['EpochMilliseconds']['output'];
};

export type ErrorTrackingErrorGroupCommentsResponse = {
  __typename?: 'ErrorTrackingErrorGroupCommentsResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<ErrorTrackingErrorGroupComment>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type ErrorTrackingErrorGroupCount = {
  __typename?: 'ErrorTrackingErrorGroupCount';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count: Scalars['Int']['output'];
};

export type ErrorTrackingErrorGroupNotificationSessionsResponse = {
  __typename?: 'ErrorTrackingErrorGroupNotificationSessionsResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<ErrorTrackingNotificationSession>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type ErrorTrackingErrorGroupState =
  | 'IGNORED'
  | 'RESOLVED'
  | 'UNRESOLVED';

export type ErrorTrackingNotificationChannel = {
  __typename?: 'ErrorTrackingNotificationChannel';
  /** @deprecated This field is experimental and subject to breaking changes. */
  destination?: Maybe<ErrorTrackingNotificationDestination>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
};

export type ErrorTrackingNotificationChannelInput = {
  channelId: Scalars['ID']['input'];
};

export type ErrorTrackingNotificationDestination =
  | 'JIRA_CLASSIC'
  | 'SLACK';

export type ErrorTrackingNotificationEvent = {
  __typename?: 'ErrorTrackingNotificationEvent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  evidence?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<ErrorTrackingNotificationEventStatus>;
};

export type ErrorTrackingNotificationEventStatus =
  | 'FAIL'
  | 'SUCCESS';

export type ErrorTrackingNotificationPolicy = {
  __typename?: 'ErrorTrackingNotificationPolicy';
  /** @deprecated This field is experimental and subject to breaking changes. */
  channels: Array<ErrorTrackingNotificationChannel>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  workloadGuid: Scalars['EntityGuid']['output'];
};

export type ErrorTrackingNotificationSession = {
  __typename?: 'ErrorTrackingNotificationSession';
  /** @deprecated This field is experimental and subject to breaking changes. */
  channel: ErrorTrackingNotificationChannel;
  /** @deprecated This field is experimental and subject to breaking changes. */
  events?: Maybe<Array<ErrorTrackingNotificationEvent>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  initiatedAt: Scalars['EpochMilliseconds']['output'];
};

export type ErrorTrackingResponseError = {
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
};

export type ErrorTrackingUpdateErrorGroupStateError = ErrorTrackingResponseError & {
  __typename?: 'ErrorTrackingUpdateErrorGroupStateError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: ErrorTrackingUpdateErrorGroupStateErrorType;
};

export type ErrorTrackingUpdateErrorGroupStateErrorType =
  | 'NOT_AUTHORIZED';

export type ErrorTrackingUpdateErrorGroupStateInput = {
  state?: InputMaybe<ErrorTrackingErrorGroupState>;
};

export type ErrorTrackingUpdateErrorGroupStateResponse = {
  __typename?: 'ErrorTrackingUpdateErrorGroupStateResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  errors?: Maybe<Array<ErrorTrackingUpdateErrorGroupStateError>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  state?: Maybe<ErrorTrackingErrorGroupState>;
};

export type ErrorsInboxActorStitchedFields = {
  __typename?: 'ErrorsInboxActorStitchedFields';
  errorGroup?: Maybe<ErrorsInboxErrorGroup>;
  errorGroupStateTypes?: Maybe<Array<ErrorsInboxErrorGroupStateTypeResult>>;
  errorGroups?: Maybe<ErrorsInboxErrorGroupsResponse>;
  notificationPolicy?: Maybe<ErrorsInboxNotificationPolicy>;
};


export type ErrorsInboxActorStitchedFieldsErrorGroupArgs = {
  errorEvent?: InputMaybe<ErrorsInboxErrorEventInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type ErrorsInboxActorStitchedFieldsErrorGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  filter?: InputMaybe<ErrorsInboxErrorGroupSearchFilterInput>;
  query?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Array<ErrorsInboxErrorGroupSortOrderInput>>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ErrorsInboxActorStitchedFieldsNotificationPolicyArgs = {
  entityGuid: Scalars['EntityGuid']['input'];
};

export type ErrorsInboxAssignErrorGroupError = ErrorsInboxResponseError & {
  __typename?: 'ErrorsInboxAssignErrorGroupError';
  description: Scalars['String']['output'];
  type: ErrorsInboxAssignErrorGroupErrorType;
};

export type ErrorsInboxAssignErrorGroupErrorType =
  | 'NOT_AUTHORIZED';

export type ErrorsInboxAssignErrorGroupInput = {
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['Int']['input']>;
};

export type ErrorsInboxAssignErrorGroupResponse = {
  __typename?: 'ErrorsInboxAssignErrorGroupResponse';
  /** @deprecated No longer supported */
  assignedUser?: Maybe<UserReference>;
  assignment?: Maybe<ErrorsInboxAssignment>;
  errors?: Maybe<Array<ErrorsInboxAssignErrorGroupError>>;
};

export type ErrorsInboxAssignment = {
  __typename?: 'ErrorsInboxAssignment';
  email?: Maybe<Scalars['String']['output']>;
  userInfo?: Maybe<UserReference>;
};

export type ErrorsInboxAssignmentSearchFilterInput = {
  userEmail?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['Int']['input']>;
};

export type ErrorsInboxConfigureNotificationPolicyInput = {
  channels?: InputMaybe<Array<ErrorsInboxNotificationChannelInput>>;
  name: Scalars['String']['input'];
};

export type ErrorsInboxConfigureNotificationPolicyResponse = {
  __typename?: 'ErrorsInboxConfigureNotificationPolicyResponse';
  policy?: Maybe<ErrorsInboxNotificationPolicy>;
};

export type ErrorsInboxDeleteErrorGroupResourceResponse = {
  __typename?: 'ErrorsInboxDeleteErrorGroupResourceResponse';
  resourceId: Scalars['ID']['output'];
};

export type ErrorsInboxDeleteNotificationPolicyResponse = {
  __typename?: 'ErrorsInboxDeleteNotificationPolicyResponse';
  entityGuid: Scalars['EntityGuid']['output'];
};

export type ErrorsInboxDirection =
  | 'DESC';

export type ErrorsInboxEntitySuggestion = ErrorsInboxSuggestion & {
  __typename?: 'ErrorsInboxEntitySuggestion';
  entity?: Maybe<EntityOutline>;
  value: Scalars['String']['output'];
};

export type ErrorsInboxErrorEventInput = {
  entityGuid: Scalars['EntityGuid']['input'];
  event?: InputMaybe<Scalars['ErrorsInboxRawEvent']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<ErrorsInboxEventSource>;
};

export type ErrorsInboxErrorGroup = ErrorsInboxErrorGroupBase & {
  __typename?: 'ErrorsInboxErrorGroup';
  /** @deprecated No longer supported */
  assignedUser?: Maybe<UserReference>;
  assignment?: Maybe<ErrorsInboxAssignment>;
  comments?: Maybe<ErrorsInboxErrorGroupCommentsResponse>;
  entityGuid?: Maybe<Scalars['EntityGuid']['output']>;
  eventsQuery?: Maybe<Scalars['Nrql']['output']>;
  firstSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  firstSeenVersions?: Maybe<Array<ErrorsInboxVersion>>;
  id: Scalars['ID']['output'];
  isCustom?: Maybe<Scalars['Boolean']['output']>;
  lastSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastSeenVersions?: Maybe<Array<ErrorsInboxVersion>>;
  message?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  occurrences?: Maybe<ErrorsInboxOccurrences>;
  regressedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  resources: ErrorsInboxResourcesResponse;
  source?: Maybe<Scalars['String']['output']>;
  state?: Maybe<ErrorsInboxErrorGroupState>;
  stateInfo?: Maybe<ErrorsInboxStateInfo>;
  url?: Maybe<Scalars['String']['output']>;
  usersImpacted?: Maybe<ErrorsInboxUsersImpacted>;
};


export type ErrorsInboxErrorGroupCommentsArgs = {
  after?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type ErrorsInboxErrorGroupResourcesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ErrorsInboxResourceFilterInput>;
};

export type ErrorsInboxErrorGroupBase = {
  /** @deprecated No longer supported */
  assignedUser?: Maybe<UserReference>;
  assignment?: Maybe<ErrorsInboxAssignment>;
  comments?: Maybe<ErrorsInboxErrorGroupCommentsResponse>;
  entityGuid?: Maybe<Scalars['EntityGuid']['output']>;
  eventsQuery?: Maybe<Scalars['Nrql']['output']>;
  firstSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  id: Scalars['ID']['output'];
  isCustom?: Maybe<Scalars['Boolean']['output']>;
  lastSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  occurrences?: Maybe<ErrorsInboxOccurrences>;
  regressedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  resources: ErrorsInboxResourcesResponse;
  source?: Maybe<Scalars['String']['output']>;
  state?: Maybe<ErrorsInboxErrorGroupState>;
  stateInfo?: Maybe<ErrorsInboxStateInfo>;
  url?: Maybe<Scalars['String']['output']>;
  usersImpacted?: Maybe<ErrorsInboxUsersImpacted>;
};


export type ErrorsInboxErrorGroupBaseCommentsArgs = {
  after?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type ErrorsInboxErrorGroupBaseResourcesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ErrorsInboxResourceFilterInput>;
};

export type ErrorsInboxErrorGroupComment = {
  __typename?: 'ErrorsInboxErrorGroupComment';
  author?: Maybe<UserReference>;
  deleted: Scalars['Boolean']['output'];
  editedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  text: Scalars['String']['output'];
  timestamp: Scalars['EpochMilliseconds']['output'];
};

export type ErrorsInboxErrorGroupCommentsResponse = {
  __typename?: 'ErrorsInboxErrorGroupCommentsResponse';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<ErrorsInboxErrorGroupComment>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type ErrorsInboxErrorGroupOutline = ErrorsInboxErrorGroupBase & {
  __typename?: 'ErrorsInboxErrorGroupOutline';
  /** @deprecated No longer supported */
  assignedUser?: Maybe<UserReference>;
  assignment?: Maybe<ErrorsInboxAssignment>;
  comments?: Maybe<ErrorsInboxErrorGroupCommentsResponse>;
  entityGuid?: Maybe<Scalars['EntityGuid']['output']>;
  eventsQuery?: Maybe<Scalars['Nrql']['output']>;
  firstSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  id: Scalars['ID']['output'];
  isCustom?: Maybe<Scalars['Boolean']['output']>;
  lastSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  occurrences?: Maybe<ErrorsInboxOccurrences>;
  regressedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  resources: ErrorsInboxResourcesResponse;
  source?: Maybe<Scalars['String']['output']>;
  state?: Maybe<ErrorsInboxErrorGroupState>;
  stateInfo?: Maybe<ErrorsInboxStateInfo>;
  url?: Maybe<Scalars['String']['output']>;
  usersImpacted?: Maybe<ErrorsInboxUsersImpacted>;
};


export type ErrorsInboxErrorGroupOutlineCommentsArgs = {
  after?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type ErrorsInboxErrorGroupOutlineResourcesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ErrorsInboxResourceFilterInput>;
};

export type ErrorsInboxErrorGroupSearchFilterInput = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  applicationVersions?: InputMaybe<Array<Scalars['String']['input']>>;
  assignment?: InputMaybe<Array<ErrorsInboxAssignmentSearchFilterInput>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  isAssigned?: InputMaybe<Scalars['Boolean']['input']>;
  states?: InputMaybe<Array<ErrorsInboxErrorGroupState>>;
};

export type ErrorsInboxErrorGroupSortOrderField =
  | 'LAST_OCCURRENCE_IN_WINDOW'
  | 'OCCURRENCES';

export type ErrorsInboxErrorGroupSortOrderInput = {
  direction: ErrorsInboxDirection;
  field: ErrorsInboxErrorGroupSortOrderField;
};

export type ErrorsInboxErrorGroupState =
  | 'IGNORED'
  | 'RESOLVED'
  | 'UNRESOLVED';

export type ErrorsInboxErrorGroupStateTypeResult = {
  __typename?: 'ErrorsInboxErrorGroupStateTypeResult';
  type?: Maybe<ErrorsInboxErrorGroupState>;
};

export type ErrorsInboxErrorGroupsResponse = {
  __typename?: 'ErrorsInboxErrorGroupsResponse';
  filterSuggestions?: Maybe<ErrorsInboxFilterSuggestionsResponse>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<ErrorsInboxErrorGroupOutline>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};


export type ErrorsInboxErrorGroupsResponseFilterSuggestionsArgs = {
  attributes: Array<Scalars['String']['input']>;
};

export type ErrorsInboxEventSource =
  | 'AWS_LAMBDA_INVOCATION_ERROR'
  | 'ERROR_TRACE'
  | 'JAVA_SCRIPT_ERROR'
  | 'MOBILE_CRASH'
  | 'MOBILE_HANDLED_EXCEPTION'
  | 'MOBILE_REQUEST_ERROR'
  | 'SPAN'
  | 'TRANSACTION_ERROR';

export type ErrorsInboxFilterSuggestion = {
  __typename?: 'ErrorsInboxFilterSuggestion';
  attribute: Scalars['String']['output'];
  suggestions?: Maybe<Array<ErrorsInboxSuggestion>>;
};

export type ErrorsInboxFilterSuggestionsResponse = {
  __typename?: 'ErrorsInboxFilterSuggestionsResponse';
  results?: Maybe<Array<ErrorsInboxFilterSuggestion>>;
};

export type ErrorsInboxJiraIssue = ErrorsInboxResource & {
  __typename?: 'ErrorsInboxJiraIssue';
  id: Scalars['ID']['output'];
  issueId: Scalars['ID']['output'];
  url: Scalars['String']['output'];
};

export type ErrorsInboxNotificationChannel = {
  __typename?: 'ErrorsInboxNotificationChannel';
  destination?: Maybe<ErrorsInboxNotificationDestination>;
  id: Scalars['ID']['output'];
};

export type ErrorsInboxNotificationChannelInput = {
  channelId: Scalars['ID']['input'];
};

export type ErrorsInboxNotificationDestination =
  | 'JIRA_CLASSIC'
  | 'SLACK';

export type ErrorsInboxNotificationPolicy = {
  __typename?: 'ErrorsInboxNotificationPolicy';
  channels: Array<ErrorsInboxNotificationChannel>;
  entityGuid: Scalars['EntityGuid']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type ErrorsInboxOccurrences = {
  __typename?: 'ErrorsInboxOccurrences';
  expectedCount?: Maybe<Scalars['Int']['output']>;
  firstSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastSeenAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type ErrorsInboxResource = {
  id: Scalars['ID']['output'];
  url: Scalars['String']['output'];
};

export type ErrorsInboxResourceFilterInput = {
  types?: InputMaybe<Array<ErrorsInboxResourceType>>;
};

export type ErrorsInboxResourceType =
  | 'JIRA_ISSUE';

export type ErrorsInboxResourcesResponse = {
  __typename?: 'ErrorsInboxResourcesResponse';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<ErrorsInboxResource>;
  totalCount: Scalars['Int']['output'];
};

export type ErrorsInboxResponseError = {
  description: Scalars['String']['output'];
};

export type ErrorsInboxStateInfo = {
  __typename?: 'ErrorsInboxStateInfo';
  resolveInNextVersion?: Maybe<Scalars['Boolean']['output']>;
  state: ErrorsInboxErrorGroupState;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  versions?: Maybe<Array<ErrorsInboxVersion>>;
};

export type ErrorsInboxStateVersionInput = {
  values?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ErrorsInboxStringSuggestion = ErrorsInboxSuggestion & {
  __typename?: 'ErrorsInboxStringSuggestion';
  value: Scalars['String']['output'];
};

export type ErrorsInboxSuggestion = {
  value: Scalars['String']['output'];
};

export type ErrorsInboxUpdateErrorGroupStateError = ErrorsInboxResponseError & {
  __typename?: 'ErrorsInboxUpdateErrorGroupStateError';
  description: Scalars['String']['output'];
  type: ErrorsInboxUpdateErrorGroupStateErrorType;
};

export type ErrorsInboxUpdateErrorGroupStateErrorType =
  | 'NOT_AUTHORIZED';

export type ErrorsInboxUpdateErrorGroupStateResponse = {
  __typename?: 'ErrorsInboxUpdateErrorGroupStateResponse';
  /** @deprecated No longer supported */
  errors?: Maybe<Array<ErrorsInboxUpdateErrorGroupStateError>>;
  resolveInNextVersion?: Maybe<Scalars['Boolean']['output']>;
  state?: Maybe<ErrorsInboxErrorGroupState>;
  versions?: Maybe<Array<ErrorsInboxVersion>>;
};

export type ErrorsInboxUserSuggestion = ErrorsInboxSuggestion & {
  __typename?: 'ErrorsInboxUserSuggestion';
  user?: Maybe<UserReference>;
  value: Scalars['String']['output'];
};

export type ErrorsInboxUsersImpacted = {
  __typename?: 'ErrorsInboxUsersImpacted';
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type ErrorsInboxVersion = {
  __typename?: 'ErrorsInboxVersion';
  name?: Maybe<Scalars['String']['output']>;
};

export type EventAttributeDefinition = {
  __typename?: 'EventAttributeDefinition';
  /** @deprecated This field no longer returns data. */
  category?: Maybe<Scalars['String']['output']>;
  definition?: Maybe<Scalars['String']['output']>;
  documentationUrl?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type EventDefinition = {
  __typename?: 'EventDefinition';
  attributes?: Maybe<Array<Maybe<EventAttributeDefinition>>>;
  definition?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type EventTransformationRule = {
  __typename?: 'EventTransformationRule';
  description?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  inputEventTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  inputRetentionPolicies?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  name?: Maybe<Scalars['String']['output']>;
  outputEventType?: Maybe<Scalars['String']['output']>;
  outputRetentionPolicy?: Maybe<Scalars['String']['output']>;
  selectedAttributes?: Maybe<Scalars['String']['output']>;
  whereClause?: Maybe<Scalars['String']['output']>;
};

export type EventTransformationRuleInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  inputEventTypes: Array<Scalars['String']['input']>;
  inputRetentionPolicies: Array<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  outputEventType: Scalars['String']['input'];
  outputRetentionPolicy: Scalars['String']['input'];
  selectedAttributes?: InputMaybe<Scalars['String']['input']>;
  whereClause: Scalars['String']['input'];
};

export type EventTransformationRuleListing = {
  __typename?: 'EventTransformationRuleListing';
  cursor?: Maybe<Scalars['String']['output']>;
  rules?: Maybe<Array<Maybe<EventTransformationRule>>>;
};

export type EventTransformationRuleUpdates = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  retentionPolicy?: InputMaybe<Scalars['String']['input']>;
  rule?: InputMaybe<EventTransformationRuleInput>;
};

export type EventsToMetricsAccountStitchedFields = {
  __typename?: 'EventsToMetricsAccountStitchedFields';
  allRules?: Maybe<EventsToMetricsListRuleResult>;
  rulesById?: Maybe<EventsToMetricsListRuleResult>;
};


export type EventsToMetricsAccountStitchedFieldsRulesByIdArgs = {
  ruleIds: Array<InputMaybe<Scalars['ID']['input']>>;
};

export type EventsToMetricsCreateRuleFailure = {
  __typename?: 'EventsToMetricsCreateRuleFailure';
  errors?: Maybe<Array<Maybe<EventsToMetricsError>>>;
  submitted?: Maybe<EventsToMetricsCreateRuleSubmission>;
};

export type EventsToMetricsCreateRuleInput = {
  accountId: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  nrql: Scalars['String']['input'];
};

export type EventsToMetricsCreateRuleResult = {
  __typename?: 'EventsToMetricsCreateRuleResult';
  failures?: Maybe<Array<Maybe<EventsToMetricsCreateRuleFailure>>>;
  successes?: Maybe<Array<Maybe<EventsToMetricsRule>>>;
};

export type EventsToMetricsCreateRuleSubmission = {
  __typename?: 'EventsToMetricsCreateRuleSubmission';
  accountId: Scalars['Int']['output'];
  description?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  nrql: Scalars['String']['output'];
};

export type EventsToMetricsDeleteRuleFailure = {
  __typename?: 'EventsToMetricsDeleteRuleFailure';
  errors?: Maybe<Array<Maybe<EventsToMetricsError>>>;
  submitted?: Maybe<EventsToMetricsDeleteRuleSubmission>;
};

export type EventsToMetricsDeleteRuleInput = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};

export type EventsToMetricsDeleteRuleResult = {
  __typename?: 'EventsToMetricsDeleteRuleResult';
  failures?: Maybe<Array<Maybe<EventsToMetricsDeleteRuleFailure>>>;
  successes?: Maybe<Array<Maybe<EventsToMetricsRule>>>;
};

export type EventsToMetricsDeleteRuleSubmission = {
  __typename?: 'EventsToMetricsDeleteRuleSubmission';
  accountId: Scalars['Int']['output'];
  ruleId: Scalars['ID']['output'];
};

export type EventsToMetricsError = {
  __typename?: 'EventsToMetricsError';
  description?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<EventsToMetricsErrorReason>;
};

export type EventsToMetricsErrorReason =
  | 'GENERAL'
  | 'INVALID_INPUT'
  | 'USER_NOT_AUTHORIZED';

export type EventsToMetricsListRuleResult = {
  __typename?: 'EventsToMetricsListRuleResult';
  rules?: Maybe<Array<Maybe<EventsToMetricsRule>>>;
};

export type EventsToMetricsRule = {
  __typename?: 'EventsToMetricsRule';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  nrql: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
};

export type EventsToMetricsUpdateRuleFailure = {
  __typename?: 'EventsToMetricsUpdateRuleFailure';
  errors?: Maybe<Array<Maybe<EventsToMetricsError>>>;
  submitted?: Maybe<EventsToMetricsUpdateRuleSubmission>;
};

export type EventsToMetricsUpdateRuleInput = {
  accountId: Scalars['Int']['input'];
  enabled: Scalars['Boolean']['input'];
  ruleId: Scalars['ID']['input'];
};

export type EventsToMetricsUpdateRuleResult = {
  __typename?: 'EventsToMetricsUpdateRuleResult';
  failures?: Maybe<Array<Maybe<EventsToMetricsUpdateRuleFailure>>>;
  successes?: Maybe<Array<Maybe<EventsToMetricsRule>>>;
};

export type EventsToMetricsUpdateRuleSubmission = {
  __typename?: 'EventsToMetricsUpdateRuleSubmission';
  accountId: Scalars['Int']['output'];
  enabled: Scalars['Boolean']['output'];
  ruleId: Scalars['ID']['output'];
};

export type ExternalEntity = AlertableEntity & Entity & {
  __typename?: 'ExternalEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ExternalEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type ExternalEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type ExternalEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ExternalEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ExternalEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ExternalEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ExternalEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type ExternalEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type ExternalEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type ExternalEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ExternalEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ExternalEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type ExternalEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ExternalEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'ExternalEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ExternalEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ExternalEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ExternalEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ExternalEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type FacetCriterion = {
  facet?: InputMaybe<EntitySearchCountsFacet>;
  tag?: InputMaybe<Scalars['String']['input']>;
};

export type FeatureFlag = {
  __typename?: 'FeatureFlag';
  context?: Maybe<Array<Maybe<FeatureFlagContext>>>;
  name?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['Boolean']['output']>;
};

export type FeatureFlagContext =
  | 'ACCOUNT'
  | 'CRITERIA'
  | 'NR_ADMIN'
  | 'USER';

export type GenericEntity = AlertableEntity & Entity & {
  __typename?: 'GenericEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type GenericEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type GenericEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type GenericEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type GenericEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type GenericEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type GenericEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type GenericEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type GenericEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type GenericEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type GenericEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type GenericEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type GenericEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type GenericEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type GenericEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'GenericEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type GenericEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type GenericEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type GenericEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type GenericInfrastructureEntity = AlertableEntity & Entity & InfrastructureIntegrationEntity & {
  __typename?: 'GenericInfrastructureEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  integrationTypeCode?: Maybe<Scalars['String']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type GenericInfrastructureEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type GenericInfrastructureEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type GenericInfrastructureEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type GenericInfrastructureEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type GenericInfrastructureEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type GenericInfrastructureEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type GenericInfrastructureEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type GenericInfrastructureEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type GenericInfrastructureEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type GenericInfrastructureEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type GenericInfrastructureEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type GenericInfrastructureEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type GenericInfrastructureEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type GenericInfrastructureEntityOutline = AlertableEntityOutline & EntityOutline & InfrastructureIntegrationEntityOutline & {
  __typename?: 'GenericInfrastructureEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  integrationTypeCode?: Maybe<Scalars['String']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type GenericInfrastructureEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type GenericInfrastructureEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type GenericInfrastructureEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type GenericInfrastructureEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type GoldenMetricsSearchActorStitchedFields = {
  __typename?: 'GoldenMetricsSearchActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entitiesWithMetricsSearch: GoldenMetricsSearchResult;
};


export type GoldenMetricsSearchActorStitchedFieldsEntitiesWithMetricsSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  entityType: DomainTypeInput;
  filters: Array<GoldenMetricsSearchFilterInput>;
  query: Scalars['EntitySearchQuery']['input'];
  sortBy: GoldenMetricsSearchSortInput;
  timeWindow: TimeWindowInput;
};

export type GoldenMetricsSearchEntityWithMetricValues = {
  __typename?: 'GoldenMetricsSearchEntityWithMetricValues';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entity: EntityOutline;
  /** @deprecated This field is experimental and subject to breaking changes. */
  metricValues: Array<GoldenMetricsSearchGoldenMetricValue>;
};

export type GoldenMetricsSearchFilterInput = {
  aggregation: Scalars['String']['input'];
  name: Scalars['String']['input'];
  operator: GoldenMetricsSearchFilterOperator;
  value: Scalars['Float']['input'];
};

export type GoldenMetricsSearchFilterOperator =
  | 'GT'
  | 'GTE'
  | 'LT'
  | 'LTE';

export type GoldenMetricsSearchGoldenMetricValue = {
  __typename?: 'GoldenMetricsSearchGoldenMetricValue';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Scalars['Float']['output'];
};

export type GoldenMetricsSearchResult = {
  __typename?: 'GoldenMetricsSearchResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results: Array<Maybe<GoldenMetricsSearchEntityWithMetricValues>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount: Scalars['Int']['output'];
};

export type GoldenMetricsSearchSortInput = {
  direction: SortBy;
  name: Scalars['String']['input'];
};

export type GoldenSignalCorrelationResult = {
  __typename?: 'GoldenSignalCorrelationResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  goFishPermalink?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<GoldenSignalCorrelationResultEntry>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<GoldenSignalCorrelationResultStatus>;
};

export type GoldenSignalCorrelationResultEntry = {
  __typename?: 'GoldenSignalCorrelationResultEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationScore?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relationship?: Maybe<GoldenSignalEntityRelationshipDescriptor>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  source?: Maybe<GoldenSignalGoldenSignalSource>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  target?: Maybe<GoldenSignalGoldenSignalSource>;
};

export type GoldenSignalCorrelationResultStatus =
  | 'NO_ENTITIES'
  | 'OK';

export type GoldenSignalCorrelationsEntityFilter = {
  correlationScore?: InputMaybe<Scalars['Float']['input']>;
  metricName?: InputMaybe<Scalars['String']['input']>;
  relationshipType?: InputMaybe<Scalars['String']['input']>;
};

export type GoldenSignalEntityGoldenMetric = {
  __typename?: 'GoldenSignalEntityGoldenMetric';
  /** @deprecated This field is experimental and subject to breaking changes. */
  fullyQualifiedSignalName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  metricName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  unit?: Maybe<Scalars['String']['output']>;
};

export type GoldenSignalEntityRelationshipDescriptor = {
  __typename?: 'GoldenSignalEntityRelationshipDescriptor';
  /** @deprecated This field is experimental and subject to breaking changes. */
  direction?: Maybe<GoldenSignalEntityRelationshipDirection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  type?: Maybe<Scalars['String']['output']>;
};

export type GoldenSignalEntityRelationshipDirection =
  | 'SOURCE_TO_TARGET'
  | 'TARGET_TO_SOURCE';

export type GoldenSignalGoldenSignalSource = {
  __typename?: 'GoldenSignalGoldenSignalSource';
  /** @deprecated This field is experimental and subject to breaking changes. */
  entity?: Maybe<EntityOutline>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenMetric?: Maybe<GoldenSignalEntityGoldenMetric>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  query?: Maybe<Scalars['String']['output']>;
};

export type GoldenSignalSignalDeviation = {
  __typename?: 'GoldenSignalSignalDeviation';
  /** @deprecated This field is experimental and subject to breaking changes. */
  anomalyScore?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  comparisonMean?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  comparisonStandardDeviation?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  evaluationMean?: Maybe<Scalars['Float']['output']>;
  /** @deprecated Use `goldenMetric` instead */
  fullyQualifiedSignalName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenMetric?: Maybe<GoldenSignalEntityGoldenMetric>;
  /** @deprecated Use `goldenMetric` instead */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  percentChange?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<GoldenSignalSignalDeviationStatus>;
  /** @deprecated Use `goldenMetric` instead */
  units?: Maybe<Scalars['String']['output']>;
};

export type GoldenSignalSignalDeviationStatus =
  | 'CONCLUSIVE'
  | 'INCONCLUSIVE'
  | 'MISSING_DATA';

export type GoldenSignalSignalValues = {
  __typename?: 'GoldenSignalSignalValues';
  /** @deprecated Use `goldenMetric` instead */
  fullyQualifiedSignalName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenMetric?: Maybe<GoldenSignalEntityGoldenMetric>;
  /** @deprecated Use `goldenMetric` instead */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  summaryValue?: Maybe<Scalars['Float']['output']>;
  /** @deprecated Use `goldenMetric` instead */
  units?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  values?: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
};

export type GoldenSignalValues = {
  __typename?: 'GoldenSignalValues';
  /** @deprecated This field is experimental and subject to breaking changes. */
  signalValues?: Maybe<Array<GoldenSignalSignalValues>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timeIndex?: Maybe<Array<Scalars['EpochMilliseconds']['output']>>;
};

export type GrokActorStitchedFields = {
  __typename?: 'GrokActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  feedbackByConversationId?: Maybe<GrokFeedbacks>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  feedbackByMessageIds?: Maybe<Array<Maybe<GrokFeedback>>>;
};


export type GrokActorStitchedFieldsFeedbackByConversationIdArgs = {
  conversationId: Scalars['ID']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  nextCursor?: InputMaybe<Scalars['String']['input']>;
  prevCursor?: InputMaybe<Scalars['String']['input']>;
};


export type GrokActorStitchedFieldsFeedbackByMessageIdsArgs = {
  messageIds: Array<InputMaybe<Scalars['ID']['input']>>;
};

export type GrokAssistantConfigInput = {
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type GrokFeedback = {
  __typename?: 'GrokFeedback';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  capabilityId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  conversationId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  creatorId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  messageId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  nerdletId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  organizationId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sentiment: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sentimentCategories?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sentimentDetail?: Maybe<Scalars['String']['output']>;
};

export type GrokFeedbacks = {
  __typename?: 'GrokFeedbacks';
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasNextPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hasPreviousPage?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<GrokFeedback>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type GrokGrokPrompt = {
  __typename?: 'GrokGrokPrompt';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
};

export type HistoricalDataExportAccountStitchedFields = {
  __typename?: 'HistoricalDataExportAccountStitchedFields';
  export?: Maybe<HistoricalDataExportCustomerExportResponse>;
  exports?: Maybe<Array<HistoricalDataExportCustomerExportResponse>>;
};


export type HistoricalDataExportAccountStitchedFieldsExportArgs = {
  id: Scalars['ID']['input'];
};

export type HistoricalDataExportCustomerExportResponse = {
  __typename?: 'HistoricalDataExportCustomerExportResponse';
  account?: Maybe<AccountReference>;
  availableUntil?: Maybe<Scalars['EpochMilliseconds']['output']>;
  beginTime: Scalars['EpochMilliseconds']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  endTime: Scalars['EpochMilliseconds']['output'];
  eventCount: Scalars['Int']['output'];
  eventTypes: Array<Scalars['String']['output']>;
  exportStatusQuery: Scalars['String']['output'];
  fileCount: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  internalStatus: HistoricalDataExportInternalStatus;
  message?: Maybe<Scalars['String']['output']>;
  nrql: Scalars['Nrql']['output'];
  percentComplete: Scalars['Float']['output'];
  results?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  status: HistoricalDataExportStatus;
  /** @deprecated submittedAt is deprecated. Use createdAt instead. */
  submittedAt: Scalars['EpochMilliseconds']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
  user?: Maybe<UserReference>;
};

export type HistoricalDataExportInternalStatus =
  | 'AWAITING_INTERIM_RESULTS'
  | 'CANCELED'
  | 'COMPLETE'
  | 'CREATED'
  | 'FAILED'
  | 'FETCHED_CELLS'
  | 'FILES_BUNDLED'
  | 'FILES_BUNDLING'
  | 'FINALIZING_RESULTS'
  | 'RECEIVED_INTERIM_RESULTS';

export type HistoricalDataExportStatus =
  | 'CANCELED'
  | 'COMPLETE_FAILED'
  | 'COMPLETE_SUCCESS'
  | 'IN_PROGRESS'
  | 'UNKNOWN'
  | 'WAITING';

export type IncidentIntelligenceEnvironmentAccountStitchedFields = {
  __typename?: 'IncidentIntelligenceEnvironmentAccountStitchedFields';
  currentEnvironment?: Maybe<IncidentIntelligenceEnvironmentCurrentEnvironmentResult>;
};


export type IncidentIntelligenceEnvironmentAccountStitchedFieldsCurrentEnvironmentArgs = {
  kind?: InputMaybe<IncidentIntelligenceEnvironmentSupportedEnvironmentKind>;
};

export type IncidentIntelligenceEnvironmentActorStitchedFields = {
  __typename?: 'IncidentIntelligenceEnvironmentActorStitchedFields';
  authorizedEnvironments?: Maybe<Array<IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment>>;
  consentedAccounts?: Maybe<Array<IncidentIntelligenceEnvironmentConsentedAccount>>;
  currentEnvironment?: Maybe<IncidentIntelligenceEnvironmentCurrentEnvironmentResult>;
};


export type IncidentIntelligenceEnvironmentActorStitchedFieldsAuthorizedEnvironmentsArgs = {
  kind?: InputMaybe<IncidentIntelligenceEnvironmentSupportedEnvironmentKind>;
};


export type IncidentIntelligenceEnvironmentActorStitchedFieldsCurrentEnvironmentArgs = {
  kind?: InputMaybe<IncidentIntelligenceEnvironmentSupportedEnvironmentKind>;
};

export type IncidentIntelligenceEnvironmentConsentAccounts = {
  __typename?: 'IncidentIntelligenceEnvironmentConsentAccounts';
  consentedAccounts?: Maybe<Array<IncidentIntelligenceEnvironmentConsentedAccount>>;
  result: IncidentIntelligenceEnvironmentConsentAccountsResult;
};

export type IncidentIntelligenceEnvironmentConsentAccountsResult =
  | 'ALREADY_CONSENTED'
  | 'CONSENTED'
  | 'USER_NOT_AUTHORIZED_MISSING_CAPABILITY';

export type IncidentIntelligenceEnvironmentConsentAuthorizedAccounts = {
  __typename?: 'IncidentIntelligenceEnvironmentConsentAuthorizedAccounts';
  consentedAccounts?: Maybe<Array<IncidentIntelligenceEnvironmentConsentedAccount>>;
  result: IncidentIntelligenceEnvironmentConsentAccountsResult;
};

export type IncidentIntelligenceEnvironmentConsentedAccount = {
  __typename?: 'IncidentIntelligenceEnvironmentConsentedAccount';
  account?: Maybe<AccountReference>;
};

export type IncidentIntelligenceEnvironmentCreateEnvironment = {
  __typename?: 'IncidentIntelligenceEnvironmentCreateEnvironment';
  /** @deprecated Environment moved to the result details field */
  environment?: Maybe<IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment>;
  result: IncidentIntelligenceEnvironmentCreateEnvironmentResult;
  resultDetails?: Maybe<IncidentIntelligenceEnvironmentCreateEnvironmentResultDetails>;
};

export type IncidentIntelligenceEnvironmentCreateEnvironmentResult =
  | 'ACCOUNTS_ALREADY_ASSOCIATED'
  | 'ACCOUNT_NOT_CONSENTED'
  | 'ACCOUNT_NOT_ENTITLED'
  | 'ACTION_UNAUTHORIZED'
  | 'ALREADY_EXISTS'
  | 'ASSOCIATED_ACCOUNTS_NOT_AUTHORIZED'
  | 'CREATED'
  | 'USER_NOT_AUTHORIZED'
  | 'USER_NOT_AUTHORIZED_MISSING_CAPABILITY';

export type IncidentIntelligenceEnvironmentCreateEnvironmentResultDetails = IncidentIntelligenceEnvironmentEnvironmentAlreadyExists | IncidentIntelligenceEnvironmentEnvironmentCreated;

export type IncidentIntelligenceEnvironmentCurrentEnvironmentResult = {
  __typename?: 'IncidentIntelligenceEnvironmentCurrentEnvironmentResult';
  environment?: Maybe<IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment>;
  reason?: Maybe<IncidentIntelligenceEnvironmentCurrentEnvironmentResultReason>;
  reasonDetails?: Maybe<IncidentIntelligenceEnvironmentCurrentEnvironmentResultReasonDetails>;
};

export type IncidentIntelligenceEnvironmentCurrentEnvironmentResultReason =
  | 'CURRENT_ACCOUNT_NOT_ENTITLED'
  | 'ENVIRONMENT_FOUND'
  | 'MULTIPLE_ENVIRONMENTS'
  | 'NO_ENVIRONMENT'
  | 'USER_NOT_AUTHORIZED_FOR_ACCOUNT';

export type IncidentIntelligenceEnvironmentCurrentEnvironmentResultReasonDetails = IncidentIntelligenceEnvironmentMultipleEnvironmentsAvailable | IncidentIntelligenceEnvironmentUserNotAuthorizedForAccount | IncidentIntelligenceEnvironmentUserNotCapableToOperateOnAccount;

export type IncidentIntelligenceEnvironmentDeleteEnvironment = {
  __typename?: 'IncidentIntelligenceEnvironmentDeleteEnvironment';
  result: IncidentIntelligenceEnvironmentDeleteEnvironmentResult;
};

export type IncidentIntelligenceEnvironmentDeleteEnvironmentResult =
  | 'ACCOUNT_NOT_ENTITLED'
  | 'DELETED'
  | 'DOES_NOT_EXIST'
  | 'USER_NOT_AUTHORIZED'
  | 'USER_NOT_AUTHORIZED_MISSING_CAPABILITY';

export type IncidentIntelligenceEnvironmentDissentAccounts = {
  __typename?: 'IncidentIntelligenceEnvironmentDissentAccounts';
  dissentedAccounts?: Maybe<Array<IncidentIntelligenceEnvironmentConsentedAccount>>;
  result: IncidentIntelligenceEnvironmentDissentAccountsResult;
};

export type IncidentIntelligenceEnvironmentDissentAccountsResult =
  | 'CONSENTED_ACCOUNTS_NOT_FOUND'
  | 'DISSENTED'
  | 'USER_NOT_AUTHORIZED_MISSING_CAPABILITY';

export type IncidentIntelligenceEnvironmentEnvironmentAlreadyExists = {
  __typename?: 'IncidentIntelligenceEnvironmentEnvironmentAlreadyExists';
  accountId: Scalars['Int']['output'];
  environment: IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment;
  masterAccountId: Scalars['Int']['output'];
};

export type IncidentIntelligenceEnvironmentEnvironmentCreated = {
  __typename?: 'IncidentIntelligenceEnvironmentEnvironmentCreated';
  environment: IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment;
};

export type IncidentIntelligenceEnvironmentEnvironmentKind =
  | 'CROSS_ACCOUNT_ENVIRONMENT'
  | 'SINGLE_ACCOUNT_ENVIRONMENT';

export type IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment = {
  __typename?: 'IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment';
  associatedAuthorizedAccounts: Array<Maybe<AccountReference>>;
  billingCycleQuota?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdBy?: Maybe<UserReference>;
  incidentIntelligenceAccount?: Maybe<AccountReference>;
  isConsentRequired: Scalars['Boolean']['output'];
  isEntitledForAi?: Maybe<Scalars['Boolean']['output']>;
  isFreeTier: Scalars['Boolean']['output'];
  kind?: Maybe<IncidentIntelligenceEnvironmentEnvironmentKind>;
  masterAccount?: Maybe<AccountReference>;
  name?: Maybe<Scalars['String']['output']>;
  wasConsented: Scalars['Boolean']['output'];
};

export type IncidentIntelligenceEnvironmentMultipleEnvironmentsAvailable = {
  __typename?: 'IncidentIntelligenceEnvironmentMultipleEnvironmentsAvailable';
  accountIds?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type IncidentIntelligenceEnvironmentSupportedEnvironmentKind =
  | 'CROSS_ACCOUNT'
  | 'SINGLE_AND_CROSS_ACCOUNT';

export type IncidentIntelligenceEnvironmentUserNotAuthorizedForAccount = {
  __typename?: 'IncidentIntelligenceEnvironmentUserNotAuthorizedForAccount';
  accountId: Scalars['Int']['output'];
};

export type IncidentIntelligenceEnvironmentUserNotCapableToOperateOnAccount = {
  __typename?: 'IncidentIntelligenceEnvironmentUserNotCapableToOperateOnAccount';
  accountId?: Maybe<Scalars['Int']['output']>;
  capability: Scalars['String']['output'];
};

export type IncidentIntelligenceIssueAccountStitchedFields = {
  __typename?: 'IncidentIntelligenceIssueAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidents?: Maybe<IncidentIntelligenceIssueIncidentsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  issues?: Maybe<IncidentIntelligenceIssueIssuesResponse>;
};


export type IncidentIntelligenceIssueAccountStitchedFieldsIncidentsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Array<InputMaybe<IncidentIntelligenceIssueIncidentFilter>>>;
  incidentId?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  numberOfEvents?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Scalars['String']['input']>;
  viewKind?: InputMaybe<IncidentIntelligenceIssueIncidentViewKind>;
};


export type IncidentIntelligenceIssueAccountStitchedFieldsIssuesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Array<InputMaybe<IncidentIntelligenceIssueIssueFilter>>>;
  issueId?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Scalars['String']['input']>;
};

export type IncidentIntelligenceIssueAccumulationPair = {
  __typename?: 'IncidentIntelligenceIssueAccumulationPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accumulationName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceIssueAttributesPair = {
  __typename?: 'IncidentIntelligenceIssueAttributesPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value?: Maybe<Scalars['String']['output']>;
};

export type IncidentIntelligenceIssueFilterOperators =
  | 'EQUALS'
  | 'GREATER_THAN'
  | 'GREATER_THAN_EQUALS'
  | 'JSON_CONTAINS'
  | 'LESS_THAN'
  | 'LESS_THAN_EQUALS'
  | 'NOT_EQUALS';

export type IncidentIntelligenceIssueIncident = {
  __typename?: 'IncidentIntelligenceIssueIncident';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  accumulations?: Maybe<Array<Maybe<IncidentIntelligenceIssueAccumulationPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  annotations?: Maybe<IncidentIntelligenceIssueIncidentAnnotations>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  events?: Maybe<Array<Maybe<IncidentIntelligenceIssueIncidentEvent>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  isCorrelated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  labels?: Maybe<Array<Maybe<IncidentIntelligenceIssueIncidentLabelPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueProgressReport?: Maybe<Array<Maybe<IncidentIntelligenceIssueIssueProgressReportAction>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueState?: Maybe<IncidentIntelligenceIssueIssueState>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority: IncidentIntelligenceIssuePriority;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: IncidentIntelligenceIssueIncidentState;
  /** @deprecated This field is experimental and subject to breaking changes. */
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalEvents: Scalars['Int']['output'];
};

export type IncidentIntelligenceIssueIncidentAnnotations = {
  __typename?: 'IncidentIntelligenceIssueIncidentAnnotations';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
};

export type IncidentIntelligenceIssueIncidentEvent = {
  __typename?: 'IncidentIntelligenceIssueIncidentEvent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes: Array<Maybe<IncidentIntelligenceIssueAttributesPair>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  text: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: Scalars['String']['output'];
};

export type IncidentIntelligenceIssueIncidentFilter = {
  field: IncidentIntelligenceIssueIncidentFilterFields;
  operator: IncidentIntelligenceIssueFilterOperators;
  value?: InputMaybe<Scalars['IncidentIntelligenceIssueFilterValue']['input']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['IncidentIntelligenceIssueFilterValue']['input']>>>;
};

export type IncidentIntelligenceIssueIncidentFilterFields =
  | 'ACCOUNT_ID'
  | 'CLOSED_ON'
  | 'CREATED_ON'
  | 'MODIFIED_ON'
  | 'PRIORITY'
  | 'RULE_ID'
  | 'STATE';

export type IncidentIntelligenceIssueIncidentLabelPair = {
  __typename?: 'IncidentIntelligenceIssueIncidentLabelPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  labelName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value?: Maybe<Scalars['String']['output']>;
};

export type IncidentIntelligenceIssueIncidentState =
  | 'CLOSED'
  | 'OPEN';

export type IncidentIntelligenceIssueIncidentViewKind =
  | 'EXTENDED'
  | 'REGULAR';

export type IncidentIntelligenceIssueIncidentsReason =
  | 'INVALID_FILTER'
  | 'INVALID_ID'
  | 'LIMIT_IS_LESS_THAN_ONE'
  | 'MISSING_CAPABILITIES'
  | 'NO_INCIDENTS_FOUND'
  | 'NUMBER_OF_EVENTS_IS_LESS_THAN_ONE'
  | 'SUCCESS';

export type IncidentIntelligenceIssueIncidentsResponse = {
  __typename?: 'IncidentIntelligenceIssueIncidentsResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason: IncidentIntelligenceIssueIncidentsReason;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<IncidentIntelligenceIssueIncident>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceIssueIssue = {
  __typename?: 'IncidentIntelligenceIssueIssue';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  accumulations?: Maybe<Array<Maybe<IncidentIntelligenceIssueAccumulationPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  activeSince?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  annotations?: Maybe<IncidentIntelligenceIssueIssueAnnotation>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closingReason?: Maybe<IncidentIntelligenceIssueIssueClosingReason>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  confidence?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIds: Array<Maybe<Scalars['String']['output']>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  isCorrelated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  labelsSet?: Maybe<Array<Maybe<Array<Maybe<IncidentIntelligenceIssueIncidentLabelPair>>>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathways?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  previousState?: Maybe<IncidentIntelligenceIssueIssueState>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority?: Maybe<IncidentIntelligenceIssuePriority>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  progressReport?: Maybe<Array<Maybe<IncidentIntelligenceIssueIssueProgressReportAction>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sources?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: IncidentIntelligenceIssueIssueState;
  /** @deprecated This field is experimental and subject to breaking changes. */
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceIssueIssueActionOriginType =
  | 'SYSTEM'
  | 'USER';

export type IncidentIntelligenceIssueIssueAnnotation = {
  __typename?: 'IncidentIntelligenceIssueIssueAnnotation';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsMaxModifiedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  isRootIssue?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
};

export type IncidentIntelligenceIssueIssueClosingReason =
  | 'NOT_ACKED'
  | 'RESOLVED'
  | 'SYSTEM';

export type IncidentIntelligenceIssueIssueFilter = {
  field: IncidentIntelligenceIssueIssueFilterFields;
  operator: IncidentIntelligenceIssueFilterOperators;
  value?: InputMaybe<Scalars['IncidentIntelligenceIssueFilterValue']['input']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['IncidentIntelligenceIssueFilterValue']['input']>>>;
};

export type IncidentIntelligenceIssueIssueFilterFields =
  | 'ACCOUNT_ID'
  | 'ACTIVE_SINCE'
  | 'CLOSED_ON'
  | 'CLOSING_REASON'
  | 'CREATED_ON'
  | 'MODIFIED_ON'
  | 'PREVIOUS_STATE'
  | 'PRIORITY'
  | 'RULE_ID'
  | 'STATE';

export type IncidentIntelligenceIssueIssueProgressReportAction = {
  __typename?: 'IncidentIntelligenceIssueIssueProgressReportAction';
  /** @deprecated This field is experimental and subject to breaking changes. */
  actionTimestamp: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes?: Maybe<Array<Maybe<IncidentIntelligenceIssueAttributesPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  eventType: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  originId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  originType: IncidentIntelligenceIssueIssueActionOriginType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathwayId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['Float']['output'];
};

export type IncidentIntelligenceIssueIssueState =
  | 'ACKNOWLEDGED'
  | 'ACTIVE'
  | 'CLOSED'
  | 'CREATED';

export type IncidentIntelligenceIssueIssuesReason =
  | 'INVALID_FILTER'
  | 'INVALID_ID'
  | 'LIMIT_IS_LESS_THAN_ONE'
  | 'MISSING_CAPABILITIES'
  | 'NO_ISSUES_FOUND'
  | 'SUCCESS';

export type IncidentIntelligenceIssueIssuesResponse = {
  __typename?: 'IncidentIntelligenceIssueIssuesResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason: IncidentIntelligenceIssueIssuesReason;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<IncidentIntelligenceIssueIssue>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceIssuePriority =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type IncidentIntelligencePlatformAccountStitchedFields = {
  __typename?: 'IncidentIntelligencePlatformAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  pagerdutyUsers?: Maybe<IncidentIntelligencePlatformPagerDutyUsersResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathway?: Maybe<IncidentIntelligencePlatformPathwayResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  platform?: Maybe<IncidentIntelligencePlatformPlatformResponse>;
};


export type IncidentIntelligencePlatformAccountStitchedFieldsPathwayArgs = {
  pathwayId: Scalars['String']['input'];
};


export type IncidentIntelligencePlatformAccountStitchedFieldsPlatformArgs = {
  platformType: IncidentIntelligencePlatformPlatforms;
};

export type IncidentIntelligencePlatformCombination =
  | 'AND'
  | 'OR';

export type IncidentIntelligencePlatformCombinator = {
  __typename?: 'IncidentIntelligencePlatformCombinator';
  /** @deprecated This field is experimental and subject to breaking changes. */
  combinator?: Maybe<IncidentIntelligencePlatformCombination>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  filterRules?: Maybe<Array<Maybe<IncidentIntelligencePlatformFilterRules>>>;
};

export type IncidentIntelligencePlatformCombinatorInput = {
  combinator?: InputMaybe<IncidentIntelligencePlatformCombination>;
  rules?: InputMaybe<Array<InputMaybe<IncidentIntelligencePlatformFilterRulesInput>>>;
};

export type IncidentIntelligencePlatformCreatePathway = {
  __typename?: 'IncidentIntelligencePlatformCreatePathway';
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathway?: Maybe<IncidentIntelligencePlatformPathway>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformCreatePathwayResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformCreatePathwayResult =
  | 'CREATED'
  | 'DESTINATION_NOT_FOUND'
  | 'MISSING_CAPABILITIES'
  | 'TEAM_ADDITION_FAILED'
  | 'TEAM_CREATION_FAILED';

export type IncidentIntelligencePlatformCreatePlatformPagerDuty = {
  __typename?: 'IncidentIntelligencePlatformCreatePlatformPagerDuty';
  /** @deprecated This field is experimental and subject to breaking changes. */
  platform?: Maybe<IncidentIntelligencePlatformPlatform>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformPlatformResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformDeletePathway = {
  __typename?: 'IncidentIntelligencePlatformDeletePathway';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDeletePathwayResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformDeletePathwayResult =
  | 'DELETED'
  | 'MISSING_CAPABILITIES'
  | 'PATHWAY_NOT_FOUND'
  | 'TEAM_REMOVAL_FAILED';

export type IncidentIntelligencePlatformDeletePlatform = {
  __typename?: 'IncidentIntelligencePlatformDeletePlatform';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDeletePlatformResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformDeletePlatformResult =
  | 'DELETED'
  | 'MISSING_CAPABILITIES'
  | 'PLATFORM_NOT_FOUND';

export type IncidentIntelligencePlatformDeprovisionDestination = {
  __typename?: 'IncidentIntelligencePlatformDeprovisionDestination';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDeprovisionDestinationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformDeprovisionDestinationResult =
  | 'DEPROVISIONED'
  | 'DESTINATION_DOES_NOT_EXIST'
  | 'MISSING_CAPABILITIES';

export type IncidentIntelligencePlatformDeprovisionSource = {
  __typename?: 'IncidentIntelligencePlatformDeprovisionSource';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDeprovisionSourceResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformDeprovisionSourceResult =
  | 'DEPROVISIONED'
  | 'MISSING_CAPABILITIES'
  | 'PLATFORM_NOT_FOUND'
  | 'SOURCE_NOT_FOUND';

export type IncidentIntelligencePlatformDestinationPagerDutyResult =
  | 'DESTINATION_NOT_FOUND'
  | 'MISSING_CAPABILITIES'
  | 'PAGERDUTY_ERROR'
  | 'PLATFORM_NOT_FOUND'
  | 'PROVISIONED'
  | 'UPDATED';

export type IncidentIntelligencePlatformDestinationWebhookResult =
  | 'DESTINATION_NOT_FOUND'
  | 'MISSING_CAPABILITIES'
  | 'PROVISIONED'
  | 'UPDATED';

export type IncidentIntelligencePlatformExtension = {
  __typename?: 'IncidentIntelligencePlatformExtension';
  /** @deprecated This field is experimental and subject to breaking changes. */
  endpointUrl: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformFilterOperators =
  | 'CONTAINS'
  | 'ENDS_WITH'
  | 'EQUALS'
  | 'GT'
  | 'GTE'
  | 'LT'
  | 'LTE'
  | 'NOT_CONTAINS'
  | 'NOT_EQUALS'
  | 'STARTS_WITH';

export type IncidentIntelligencePlatformFilterRules = {
  __typename?: 'IncidentIntelligencePlatformFilterRules';
  /** @deprecated This field is experimental and subject to breaking changes. */
  combinator?: Maybe<IncidentIntelligencePlatformCombinator>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  valueRule?: Maybe<IncidentIntelligencePlatformFilterValueRule>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  valuesRule?: Maybe<IncidentIntelligencePlatformFilterValuesRule>;
};

export type IncidentIntelligencePlatformFilterRulesInput = {
  combinatorRule?: InputMaybe<IncidentIntelligencePlatformCombinatorInput>;
  valueRule?: InputMaybe<IncidentIntelligencePlatformFilterValueInput>;
  valuesRule?: InputMaybe<IncidentIntelligencePlatformFilterValuesRuleInput>;
};

export type IncidentIntelligencePlatformFilterValueInput = {
  field: Scalars['String']['input'];
  operator?: InputMaybe<IncidentIntelligencePlatformFilterOperators>;
  value: Scalars['IncidentIntelligencePlatformFilterValue']['input'];
};

export type IncidentIntelligencePlatformFilterValueRule = {
  __typename?: 'IncidentIntelligencePlatformFilterValueRule';
  /** @deprecated This field is experimental and subject to breaking changes. */
  field: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  operator?: Maybe<IncidentIntelligencePlatformFilterOperators>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Scalars['IncidentIntelligencePlatformFilterValue']['output'];
};

export type IncidentIntelligencePlatformFilterValuesRule = {
  __typename?: 'IncidentIntelligencePlatformFilterValuesRule';
  /** @deprecated This field is experimental and subject to breaking changes. */
  field: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  operator?: Maybe<IncidentIntelligencePlatformFilterOperators>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  values?: Maybe<Array<Maybe<Scalars['IncidentIntelligencePlatformFilterValue']['output']>>>;
};

export type IncidentIntelligencePlatformFilterValuesRuleInput = {
  field: Scalars['String']['input'];
  operator?: InputMaybe<IncidentIntelligencePlatformFilterOperators>;
  values?: InputMaybe<Array<InputMaybe<Scalars['IncidentIntelligencePlatformFilterValue']['input']>>>;
};

export type IncidentIntelligencePlatformHeaderInput = {
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type IncidentIntelligencePlatformHeaderOutput = {
  __typename?: 'IncidentIntelligencePlatformHeaderOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformIntegration = {
  __typename?: 'IncidentIntelligencePlatformIntegration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  summary: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformPagerDutyDestinationConfigurationInput = {
  autoAckOriginalIncident: Scalars['Boolean']['input'];
  autoCloseOriginalIncident: Scalars['Boolean']['input'];
  shouldCreateNewUser: Scalars['Boolean']['input'];
  useOriginalServiceEscalationPolicy: Scalars['Boolean']['input'];
  userEmail: Scalars['String']['input'];
};

export type IncidentIntelligencePlatformPagerDutyDestinationConfigurationOutput = {
  __typename?: 'IncidentIntelligencePlatformPagerDutyDestinationConfigurationOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  autoAckOriginalIncident: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  autoCloseOriginalIncident: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  shouldCreateNewUser: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  useOriginalServiceEscalationPolicy: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  userEmail: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformPagerDutyDestinationOutput = {
  __typename?: 'IncidentIntelligencePlatformPagerDutyDestinationOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  configuration: IncidentIntelligencePlatformPagerDutyDestinationConfigurationOutput;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  integration: IncidentIntelligencePlatformIntegration;
  /** @deprecated This field is experimental and subject to breaking changes. */
  serviceId: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformPagerDutyPlatformConfiguration = {
  __typename?: 'IncidentIntelligencePlatformPagerDutyPlatformConfiguration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  adminUser?: Maybe<Scalars['String']['output']>;
};

export type IncidentIntelligencePlatformPagerDutyPlatformConfigurationInput = {
  adminUser?: InputMaybe<Scalars['String']['input']>;
  apiKey: Scalars['String']['input'];
};

export type IncidentIntelligencePlatformPagerDutySetAdmin = {
  __typename?: 'IncidentIntelligencePlatformPagerDutySetAdmin';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformUserSetAsAdminResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformPagerDutySourceOutput = {
  __typename?: 'IncidentIntelligencePlatformPagerDutySourceOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  extension: IncidentIntelligencePlatformExtension;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  kind: IncidentIntelligencePlatformSourceKind;
};

export type IncidentIntelligencePlatformPagerDutyUsersResponse = {
  __typename?: 'IncidentIntelligencePlatformPagerDutyUsersResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  pagerdutyUsers?: Maybe<Array<Maybe<IncidentIntelligencePlatformPagerdutyUserOutput>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformPagerDutyUsersResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformPagerDutyUsersResult =
  | 'FAILED'
  | 'MISSING_CAPABILITIES'
  | 'PLATFORM_NOT_FOUND'
  | 'SUCCESS';

export type IncidentIntelligencePlatformPagerdutyUserOutput = {
  __typename?: 'IncidentIntelligencePlatformPagerdutyUserOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  email?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  role?: Maybe<IncidentIntelligencePlatformRole>;
};

export type IncidentIntelligencePlatformPathway = {
  __typename?: 'IncidentIntelligencePlatformPathway';
  /** @deprecated This field is experimental and subject to breaking changes. */
  deletedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  destinationIds?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  enabled?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathwayFilter?: Maybe<IncidentIntelligencePlatformPathwayFilter>;
};

export type IncidentIntelligencePlatformPathwayFilter = {
  __typename?: 'IncidentIntelligencePlatformPathwayFilter';
  /** @deprecated This field is experimental and subject to breaking changes. */
  filterId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  filterRules?: Maybe<IncidentIntelligencePlatformFilterRules>;
};

export type IncidentIntelligencePlatformPathwayFilterInput = {
  filterRules: IncidentIntelligencePlatformFilterRulesInput;
};

export type IncidentIntelligencePlatformPathwayInput = {
  deletedOn?: InputMaybe<Scalars['DateTime']['input']>;
  description: Scalars['String']['input'];
  destinationIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  pathwayFilter: IncidentIntelligencePlatformPathwayFilterInput;
};

export type IncidentIntelligencePlatformPathwayResponse = {
  __typename?: 'IncidentIntelligencePlatformPathwayResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathway?: Maybe<IncidentIntelligencePlatformPathway>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformPathwayResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformPathwayResult =
  | 'MISSING_CAPABILITIES'
  | 'PATHWAY_NOT_FOUND'
  | 'SUCCESS';

export type IncidentIntelligencePlatformPlatform = {
  __typename?: 'IncidentIntelligencePlatformPlatform';
  /** @deprecated This field is experimental and subject to breaking changes. */
  endpointConfiguration: IncidentIntelligencePlatformPagerDutyPlatformConfiguration;
  /** @deprecated This field is experimental and subject to breaking changes. */
  endpointEnabled: Scalars['Boolean']['output'];
};

export type IncidentIntelligencePlatformPlatformResponse = {
  __typename?: 'IncidentIntelligencePlatformPlatformResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  platform?: Maybe<IncidentIntelligencePlatformPlatform>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformPlatformResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformPlatformResult =
  | 'CREATED'
  | 'MISSING_ARGUMENTS'
  | 'MISSING_CAPABILITIES'
  | 'PLATFORM_NOT_FOUND'
  | 'SUCCESS'
  | 'UPDATED';

export type IncidentIntelligencePlatformPlatforms =
  | 'PAGERDUTY'
  | 'WEBHOOK';

export type IncidentIntelligencePlatformPriority =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type IncidentIntelligencePlatformPriorityMappingInput = {
  fromPriority: IncidentIntelligencePlatformPriority;
  toPriority: Scalars['String']['input'];
};

export type IncidentIntelligencePlatformPriorityMappingOutput = {
  __typename?: 'IncidentIntelligencePlatformPriorityMappingOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  fromPriority: IncidentIntelligencePlatformPriority;
  /** @deprecated This field is experimental and subject to breaking changes. */
  toPriority: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformProvisionDestinationPagerDuty = {
  __typename?: 'IncidentIntelligencePlatformProvisionDestinationPagerDuty';
  /** @deprecated This field is experimental and subject to breaking changes. */
  destination?: Maybe<IncidentIntelligencePlatformPagerDutyDestinationOutput>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDestinationPagerDutyResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformProvisionDestinationWebhook = {
  __typename?: 'IncidentIntelligencePlatformProvisionDestinationWebhook';
  /** @deprecated This field is experimental and subject to breaking changes. */
  destination?: Maybe<IncidentIntelligencePlatformWebhookDestinationOutput>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDestinationWebhookResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformProvisionSourcePagerDuty = {
  __typename?: 'IncidentIntelligencePlatformProvisionSourcePagerDuty';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformProvisionSourcePagerDutyResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  source?: Maybe<IncidentIntelligencePlatformPagerDutySourceOutput>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformProvisionSourcePagerDutyResult =
  | 'MISSING_CAPABILITIES'
  | 'PAGERDUTY_ERROR'
  | 'PLATFORM_NOT_FOUND'
  | 'PROVISIONED';

export type IncidentIntelligencePlatformRole =
  | 'ADMIN'
  | 'LIMITED_USER'
  | 'OBSERVER'
  | 'OWNER'
  | 'READ_ONLY_LIMITED_USER'
  | 'READ_ONLY_USER'
  | 'RESTRICTED_ACCESS'
  | 'USER';

export type IncidentIntelligencePlatformSourceKind =
  | 'SYSTEM'
  | 'USER';

export type IncidentIntelligencePlatformSyncServicesPagerDuty = {
  __typename?: 'IncidentIntelligencePlatformSyncServicesPagerDuty';
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformSyncServicesPagerDutyResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformSyncServicesPagerDutyResult =
  | 'MISSING_CAPABILITIES'
  | 'NO_NEED_TO_SYNC'
  | 'PLATFORM_NOT_FOUND'
  | 'SYNCED';

export type IncidentIntelligencePlatformUpdateDestinationPagerDuty = {
  __typename?: 'IncidentIntelligencePlatformUpdateDestinationPagerDuty';
  /** @deprecated This field is experimental and subject to breaking changes. */
  destination?: Maybe<IncidentIntelligencePlatformPagerDutyDestinationOutput>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDestinationPagerDutyResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformUpdateDestinationWebhook = {
  __typename?: 'IncidentIntelligencePlatformUpdateDestinationWebhook';
  /** @deprecated This field is experimental and subject to breaking changes. */
  destination?: Maybe<IncidentIntelligencePlatformWebhookDestinationOutput>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformDestinationWebhookResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformUpdatePathway = {
  __typename?: 'IncidentIntelligencePlatformUpdatePathway';
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathway?: Maybe<IncidentIntelligencePlatformPathway>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformUpdatePathwayResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformUpdatePathwayFilterInput = {
  filterId: Scalars['String']['input'];
  filterRules: IncidentIntelligencePlatformFilterRulesInput;
};

export type IncidentIntelligencePlatformUpdatePathwayInput = {
  deletedOn?: InputMaybe<Scalars['DateTime']['input']>;
  description: Scalars['String']['input'];
  destinationIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['String']['input'];
  name: Scalars['String']['input'];
  pathwayFilter: IncidentIntelligencePlatformUpdatePathwayFilterInput;
};

export type IncidentIntelligencePlatformUpdatePathwayResult =
  | 'MISSING_CAPABILITIES'
  | 'PATHWAY_NOT_FOUND'
  | 'TEAM_ADDITION_FAILED'
  | 'TEAM_REMOVAL_FAILED'
  | 'TEAM_UPDATE_FAILED'
  | 'UPDATED';

export type IncidentIntelligencePlatformUpdatePlatformPagerDuty = {
  __typename?: 'IncidentIntelligencePlatformUpdatePlatformPagerDuty';
  /** @deprecated This field is experimental and subject to breaking changes. */
  platform?: Maybe<IncidentIntelligencePlatformPlatform>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligencePlatformPlatformResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligencePlatformUserSetAsAdminResult =
  | 'MISSING_CAPABILITIES'
  | 'PLATFORM_NOT_FOUND'
  | 'SET_AS_ADMIN';

export type IncidentIntelligencePlatformWebHookDestinationConfigurationInput = {
  headers: Array<InputMaybe<IncidentIntelligencePlatformHeaderInput>>;
  name: Scalars['String']['input'];
  priorityMapping: Array<InputMaybe<IncidentIntelligencePlatformPriorityMappingInput>>;
  requestSchema: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type IncidentIntelligencePlatformWebHookDestinationConfigurationOutput = {
  __typename?: 'IncidentIntelligencePlatformWebHookDestinationConfigurationOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  headers: Array<Maybe<IncidentIntelligencePlatformHeaderOutput>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  priorityMapping: Array<Maybe<IncidentIntelligencePlatformPriorityMappingOutput>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  requestSchema: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  url: Scalars['String']['output'];
};

export type IncidentIntelligencePlatformWebhookDestinationOutput = {
  __typename?: 'IncidentIntelligencePlatformWebhookDestinationOutput';
  /** @deprecated This field is experimental and subject to breaking changes. */
  configuration: IncidentIntelligencePlatformWebHookDestinationConfigurationOutput;
  /** @deprecated This field is experimental and subject to breaking changes. */
  disableReason?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['String']['output'];
};

export type IncidentIntelligenceSearchAccountStitchedFields = {
  __typename?: 'IncidentIntelligenceSearchAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidents?: Maybe<IncidentIntelligenceSearchIncidentsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  issues?: Maybe<IncidentIntelligenceSearchIssuesResponse>;
};


export type IncidentIntelligenceSearchAccountStitchedFieldsIncidentsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Array<InputMaybe<IncidentIntelligenceSearchIncidentsFilterInput>>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  numberOfEvents?: InputMaybe<Scalars['Int']['input']>;
  optionalWords?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  orderBy?: InputMaybe<IncidentIntelligenceSearchIncidentsOrderByOptions>;
  query?: InputMaybe<IncidentIntelligenceSearchIncidentsQueryInput>;
};


export type IncidentIntelligenceSearchAccountStitchedFieldsIssuesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Array<InputMaybe<IncidentIntelligenceSearchIssuesFilterInput>>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  optionalWords?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  orderBy?: InputMaybe<IncidentIntelligenceSearchIssuesOrderByOptions>;
  query?: InputMaybe<IncidentIntelligenceSearchIssuesQueryInput>;
};

export type IncidentIntelligenceSearchAccumulationPair = {
  __typename?: 'IncidentIntelligenceSearchAccumulationPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accumulationName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceSearchAttributesPair = {
  __typename?: 'IncidentIntelligenceSearchAttributesPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributeName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value?: Maybe<Scalars['String']['output']>;
};

export type IncidentIntelligenceSearchComparisonOperators =
  | 'EQUALS'
  | 'GREATER_THAN'
  | 'GREATER_THAN_EQUALS'
  | 'LESS_THAN'
  | 'LESS_THAN_EQUALS'
  | 'NOT_EQUALS';

export type IncidentIntelligenceSearchIncident = {
  __typename?: 'IncidentIntelligenceSearchIncident';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  accumulations?: Maybe<Array<Maybe<IncidentIntelligenceSearchAccumulationPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  annotations?: Maybe<IncidentIntelligenceSearchIncidentAnnotations>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  events?: Maybe<Array<Maybe<IncidentIntelligenceSearchIncidentEvent>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  isCorrelated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  labels?: Maybe<Array<Maybe<IncidentIntelligenceSearchIncidentLabelPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueProgressReport?: Maybe<Array<Maybe<IncidentIntelligenceSearchIssueProgressReportAction>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestIssueState?: Maybe<IncidentIntelligenceSearchIssueState>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority: IncidentIntelligenceSearchPriority;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: IncidentIntelligenceSearchIncidentState;
  /** @deprecated This field is experimental and subject to breaking changes. */
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalEvents: Scalars['Int']['output'];
};

export type IncidentIntelligenceSearchIncidentAnnotations = {
  __typename?: 'IncidentIntelligenceSearchIncidentAnnotations';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
};

export type IncidentIntelligenceSearchIncidentEvent = {
  __typename?: 'IncidentIntelligenceSearchIncidentEvent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes: Array<Maybe<IncidentIntelligenceSearchAttributesPair>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  text: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: Scalars['String']['output'];
};

export type IncidentIntelligenceSearchIncidentLabelPair = {
  __typename?: 'IncidentIntelligenceSearchIncidentLabelPair';
  /** @deprecated This field is experimental and subject to breaking changes. */
  labelName: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  value?: Maybe<Scalars['String']['output']>;
};

export type IncidentIntelligenceSearchIncidentState =
  | 'CLOSED'
  | 'OPEN';

export type IncidentIntelligenceSearchIncidentsFilterFields =
  | 'MODIFIED_ON'
  | 'SOURCES'
  | 'STATE';

export type IncidentIntelligenceSearchIncidentsFilterInput = {
  field: IncidentIntelligenceSearchIncidentsFilterFields;
  operator: IncidentIntelligenceSearchComparisonOperators;
  value: Scalars['IncidentIntelligenceSearchFilterValue']['input'];
};

export type IncidentIntelligenceSearchIncidentsOrderByOptions =
  | 'MODIFIED_ON';

export type IncidentIntelligenceSearchIncidentsQueryInput = {
  restrictToTitle?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type IncidentIntelligenceSearchIncidentsResponse = {
  __typename?: 'IncidentIntelligenceSearchIncidentsResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligenceSearchIncidentsResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<IncidentIntelligenceSearchIncident>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceSearchIncidentsResult =
  | 'BAD_FILTERS_DEFINITION'
  | 'MISSING_CAPABILITIES'
  | 'NO_INCIDENTS_FOUND'
  | 'NUMBER_OF_EVENTS_IS_LESS_THAN_ONE'
  | 'SUCCESS';

export type IncidentIntelligenceSearchIssue = {
  __typename?: 'IncidentIntelligenceSearchIssue';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  accumulations?: Maybe<Array<Maybe<IncidentIntelligenceSearchAccumulationPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  activeSince?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  annotations?: Maybe<IncidentIntelligenceSearchIssueAnnotation>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  closingReason?: Maybe<IncidentIntelligenceSearchIssueClosingReason>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  confidence?: Maybe<Scalars['Float']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIds: Array<Maybe<Scalars['String']['output']>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  isCorrelated?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  labelsSet?: Maybe<Array<Maybe<Array<Maybe<IncidentIntelligenceSearchIncidentLabelPair>>>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  modifiedOn: Scalars['DateTime']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathways?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  previousState?: Maybe<IncidentIntelligenceSearchIssueState>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  priority?: Maybe<IncidentIntelligenceSearchPriority>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  progressReport?: Maybe<Array<Maybe<IncidentIntelligenceSearchIssueProgressReportAction>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ruleId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sources?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: IncidentIntelligenceSearchIssueState;
  /** @deprecated This field is experimental and subject to breaking changes. */
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceSearchIssueActionOriginType =
  | 'SYSTEM'
  | 'USER';

export type IncidentIntelligenceSearchIssueAnnotation = {
  __typename?: 'IncidentIntelligenceSearchIssueAnnotation';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentsMaxModifiedOn?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  isRootIssue?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  title: Scalars['String']['output'];
};

export type IncidentIntelligenceSearchIssueClosingReason =
  | 'NOT_ACKED'
  | 'RESOLVED'
  | 'SYSTEM';

export type IncidentIntelligenceSearchIssueProgressReportAction = {
  __typename?: 'IncidentIntelligenceSearchIssueProgressReportAction';
  /** @deprecated This field is experimental and subject to breaking changes. */
  actionTimestamp: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  attributes?: Maybe<Array<Maybe<IncidentIntelligenceSearchAttributesPair>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  eventType: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  originId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  originType: IncidentIntelligenceSearchIssueActionOriginType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  pathwayId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['Float']['output'];
};

export type IncidentIntelligenceSearchIssueState =
  | 'ACKNOWLEDGED'
  | 'ACTIVE'
  | 'CLOSED'
  | 'CREATED';

export type IncidentIntelligenceSearchIssuesFilterFields =
  | 'CATEGORIES'
  | 'CLOSING_REASON'
  | 'CORRELATION_RULES'
  | 'HAS_FEEDBACK'
  | 'INCIDENT_COUNT'
  | 'IS_CORRELATED'
  | 'IS_FOLLOWED'
  | 'IS_SNOOZED'
  | 'MODIFIED_ON'
  | 'NOTIFICATION_ENDPOINTS'
  | 'PRIORITY'
  | 'SHARE_ENDPOINTS'
  | 'SOURCES'
  | 'STATE'
  | 'TEAMS'
  | 'WAS_SHARED';

export type IncidentIntelligenceSearchIssuesFilterInput = {
  field: IncidentIntelligenceSearchIssuesFilterFields;
  operator: IncidentIntelligenceSearchComparisonOperators;
  value: Scalars['IncidentIntelligenceSearchFilterValue']['input'];
};

export type IncidentIntelligenceSearchIssuesOrderByOptions =
  | 'MODIFIED_ON';

export type IncidentIntelligenceSearchIssuesQueryInput = {
  restrictToTitle?: InputMaybe<Scalars['Boolean']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type IncidentIntelligenceSearchIssuesResponse = {
  __typename?: 'IncidentIntelligenceSearchIssuesResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason?: Maybe<IncidentIntelligenceSearchIssuesResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<IncidentIntelligenceSearchIssue>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userMissingCapabilities?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type IncidentIntelligenceSearchIssuesResult =
  | 'BAD_FILTERS_DEFINITION'
  | 'MISSING_CAPABILITIES'
  | 'NO_ISSUES_FOUND'
  | 'SUCCESS';

export type IncidentIntelligenceSearchPriority =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type InfraFilterSet = {
  __typename?: 'InfraFilterSet';
  filter?: Maybe<Scalars['EncodedInfraFilterSet']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  queryFilter?: Maybe<Scalars['EncodedInfraFilterSet']['output']>;
};

export type InfraHost = {
  __typename?: 'InfraHost';
  /** @deprecated Please use `entitySearch` and `relationships` */
  apps?: Maybe<Array<Maybe<Agent>>>;
  entity?: Maybe<EntityGuidSegments>;
  entityId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  statuses?: Maybe<Array<Maybe<InfraStatus>>>;
  summary?: Maybe<InfraHostSummary>;
};


export type InfraHostSummaryArgs = {
  duration: Scalars['Int']['input'];
};

export type InfraHostSummary = {
  __typename?: 'InfraHostSummary';
  cpuUsage?: Maybe<SummaryValue>;
  diskUsage?: Maybe<SummaryValue>;
  loadAverage?: Maybe<SummaryValue>;
  memoryUsage?: Maybe<SummaryValue>;
};

export type InfraSearch = {
  __typename?: 'InfraSearch';
  hosts?: Maybe<Array<Maybe<InfraHost>>>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type InfraStatus = {
  __typename?: 'InfraStatus';
  alertStatus?: Maybe<AlertStatus>;
  label?: Maybe<Scalars['String']['output']>;
  level?: Maybe<Scalars['String']['output']>;
  openedAt?: Maybe<Scalars['Int']['output']>;
};

export type InfrastructureAgentInstrumentationStrategy =
  | 'JAVAAPM'
  | 'JFR'
  | 'JFRD'
  | 'JMX';

export type InfrastructureAgentSendCommandError = {
  __typename?: 'InfrastructureAgentSendCommandError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<InfrastructureAgentSendCommandErrorType>;
};

export type InfrastructureAgentSendCommandErrorType =
  | 'CONCURRENT_TASK_EXCEPTION'
  | 'INVALID_DOMAIN_TYPE'
  | 'INVALID_ENTITY_GUID'
  | 'NOT_FOUND'
  | 'NOT_PERMITTED';

export type InfrastructureAgentSendCommandResult = {
  __typename?: 'InfrastructureAgentSendCommandResult';
  errors?: Maybe<Array<Maybe<InfrastructureAgentSendCommandError>>>;
  success: Scalars['Boolean']['output'];
};

export type InfrastructureAgentServiceDetails = {
  __typename?: 'InfrastructureAgentServiceDetails';
  displayName: Scalars['String']['output'];
  guid: Scalars['EntityGuid']['output'];
  processId: Scalars['String']['output'];
  status: InfrastructureAgentServiceStatus;
  strategy: InfrastructureAgentInstrumentationStrategy;
};

export type InfrastructureAgentServiceStatus =
  | 'INSTRUMENTED'
  | 'KNOWN';

export type InfrastructureAgentTargetDetails = {
  processId: Scalars['String']['input'];
  status: InfrastructureAgentServiceStatus;
  strategy: InfrastructureAgentInstrumentationStrategy;
};

export type InfrastructureAwsLambdaFunctionEntity = AlertableEntity & Entity & InfrastructureIntegrationEntity & {
  __typename?: 'InfrastructureAwsLambdaFunctionEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  connections?: Maybe<RelatedExternalsEntityResult>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  integrationTypeCode?: Maybe<Scalars['String']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relatedTransactions?: Maybe<RelatedExternalsTransactionResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  runtime?: Maybe<Scalars['String']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type InfrastructureAwsLambdaFunctionEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type InfrastructureAwsLambdaFunctionEntityConnectionsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type InfrastructureAwsLambdaFunctionEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type InfrastructureAwsLambdaFunctionEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InfrastructureAwsLambdaFunctionEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InfrastructureAwsLambdaFunctionEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type InfrastructureAwsLambdaFunctionEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type InfrastructureAwsLambdaFunctionEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type InfrastructureAwsLambdaFunctionEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type InfrastructureAwsLambdaFunctionEntityRelatedTransactionsArgs = {
  search: RelatedExternalsSearch;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type InfrastructureAwsLambdaFunctionEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type InfrastructureAwsLambdaFunctionEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type InfrastructureAwsLambdaFunctionEntityOutline = AlertableEntityOutline & EntityOutline & InfrastructureIntegrationEntityOutline & {
  __typename?: 'InfrastructureAwsLambdaFunctionEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  integrationTypeCode?: Maybe<Scalars['String']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  runtime?: Maybe<Scalars['String']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type InfrastructureAwsLambdaFunctionEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type InfrastructureHostEntity = AlertableEntity & Entity & {
  __typename?: 'InfrastructureHostEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  availableServices?: Maybe<Array<Maybe<InfrastructureAgentServiceDetails>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  hostSummary?: Maybe<InfrastructureHostSummaryData>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rcairResults?: Maybe<RootCauseAnalysisResult>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type InfrastructureHostEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type InfrastructureHostEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type InfrastructureHostEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type InfrastructureHostEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type InfrastructureHostEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InfrastructureHostEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InfrastructureHostEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type InfrastructureHostEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type InfrastructureHostEntityRcairResultsArgs = {
  requestId: Scalars['String']['input'];
};


export type InfrastructureHostEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type InfrastructureHostEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type InfrastructureHostEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type InfrastructureHostEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type InfrastructureHostEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type InfrastructureHostEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'InfrastructureHostEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  hostSummary?: Maybe<InfrastructureHostSummaryData>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type InfrastructureHostEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type InfrastructureHostEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type InfrastructureHostEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type InfrastructureHostEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type InfrastructureHostSummaryData = {
  __typename?: 'InfrastructureHostSummaryData';
  cpuUtilizationPercent?: Maybe<Scalars['Float']['output']>;
  diskUsedPercent?: Maybe<Scalars['Float']['output']>;
  memoryUsedPercent?: Maybe<Scalars['Float']['output']>;
  networkReceiveRate?: Maybe<Scalars['Float']['output']>;
  networkTransmitRate?: Maybe<Scalars['Float']['output']>;
  servicesCount?: Maybe<Scalars['Int']['output']>;
};

export type InfrastructureIntegrationEntity = {
  integrationTypeCode?: Maybe<Scalars['String']['output']>;
};

export type InfrastructureIntegrationEntityOutline = {
  integrationTypeCode?: Maybe<Scalars['String']['output']>;
};

export type InstallationAccountStitchedFields = {
  __typename?: 'InstallationAccountStitchedFields';
  installStatus?: Maybe<InstallationInstallStatus>;
  recipeEvents?: Maybe<Array<InstallationRecipeEvent>>;
  recipes?: Maybe<InstallationRecipeEventResult>;
  statuses?: Maybe<InstallationInstallStatusResult>;
};


export type InstallationAccountStitchedFieldsRecipesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  installId?: InputMaybe<Scalars['String']['input']>;
};


export type InstallationAccountStitchedFieldsStatusesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  installId?: InputMaybe<Scalars['String']['input']>;
};

export type InstallationInstallStateType =
  | 'COMPLETED'
  | 'STARTED';

export type InstallationInstallStatus = {
  __typename?: 'InstallationInstallStatus';
  cliVersion: Scalars['SemVer']['output'];
  deployedBy: Scalars['String']['output'];
  enabledProxy: Scalars['Boolean']['output'];
  error: InstallationStatusError;
  hostName: Scalars['String']['output'];
  installId: Scalars['ID']['output'];
  installLibraryVersion: Scalars['SemVer']['output'];
  isUnsupported: Scalars['Boolean']['output'];
  kernelArch: Scalars['String']['output'];
  kernelVersion: Scalars['SemVer']['output'];
  logFilePath: Scalars['String']['output'];
  os: Scalars['String']['output'];
  platform: Scalars['String']['output'];
  platformFamily: Scalars['String']['output'];
  platformVersion: Scalars['SemVer']['output'];
  redirectUrl: Scalars['String']['output'];
  state: InstallationInstallStateType;
  targetedInstall: Scalars['Boolean']['output'];
  timestamp?: Maybe<Scalars['EpochSeconds']['output']>;
};

export type InstallationInstallStatusInput = {
  cliVersion: Scalars['SemVer']['input'];
  deployedBy?: InputMaybe<Scalars['String']['input']>;
  enabledProxy: Scalars['Boolean']['input'];
  error: InstallationStatusErrorInput;
  hostName: Scalars['String']['input'];
  installId: Scalars['ID']['input'];
  installLibraryVersion: Scalars['SemVer']['input'];
  isUnsupported: Scalars['Boolean']['input'];
  kernelArch: Scalars['String']['input'];
  kernelVersion: Scalars['SemVer']['input'];
  logFilePath: Scalars['String']['input'];
  os: Scalars['String']['input'];
  platform: Scalars['String']['input'];
  platformFamily: Scalars['String']['input'];
  platformVersion: Scalars['SemVer']['input'];
  redirectUrl: Scalars['String']['input'];
  state: InstallationInstallStateType;
  targetedInstall: Scalars['Boolean']['input'];
  timestamp?: InputMaybe<Scalars['EpochSeconds']['input']>;
};

export type InstallationInstallStatusResult = {
  __typename?: 'InstallationInstallStatusResult';
  cursor?: Maybe<Scalars['String']['output']>;
  installStatuses?: Maybe<Array<InstallationInstallStatus>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type InstallationRecipeEvent = {
  __typename?: 'InstallationRecipeEvent';
  cliVersion: Scalars['SemVer']['output'];
  complete: Scalars['Boolean']['output'];
  displayName: Scalars['String']['output'];
  entityGuid: Scalars['EntityGuid']['output'];
  error: InstallationStatusError;
  hostName: Scalars['String']['output'];
  installId?: Maybe<Scalars['ID']['output']>;
  installLibraryVersion?: Maybe<Scalars['SemVer']['output']>;
  kernelArch: Scalars['String']['output'];
  kernelVersion: Scalars['SemVer']['output'];
  logFilePath: Scalars['String']['output'];
  metadata?: Maybe<Scalars['InstallationRawMetadata']['output']>;
  name: Scalars['String']['output'];
  os: Scalars['String']['output'];
  platform: Scalars['String']['output'];
  platformFamily: Scalars['String']['output'];
  platformVersion: Scalars['SemVer']['output'];
  redirectUrl?: Maybe<Scalars['String']['output']>;
  status: InstallationRecipeStatusType;
  targetedInstall: Scalars['Boolean']['output'];
  taskPath?: Maybe<Scalars['String']['output']>;
  timestamp: Scalars['EpochSeconds']['output'];
  validationDurationMilliseconds: Scalars['EpochMilliseconds']['output'];
};

export type InstallationRecipeEventResult = {
  __typename?: 'InstallationRecipeEventResult';
  cursor?: Maybe<Scalars['String']['output']>;
  recipeEvents?: Maybe<Array<InstallationRecipeEvent>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type InstallationRecipeStatus = {
  cliVersion: Scalars['SemVer']['input'];
  complete: Scalars['Boolean']['input'];
  displayName: Scalars['String']['input'];
  entityGuid: Scalars['EntityGuid']['input'];
  error: InstallationStatusErrorInput;
  hostName: Scalars['String']['input'];
  installId?: InputMaybe<Scalars['ID']['input']>;
  installLibraryVersion?: InputMaybe<Scalars['SemVer']['input']>;
  kernelArch: Scalars['String']['input'];
  kernelVersion: Scalars['SemVer']['input'];
  logFilePath: Scalars['String']['input'];
  metadata?: InputMaybe<Scalars['InstallationRawMetadata']['input']>;
  name: Scalars['String']['input'];
  os: Scalars['String']['input'];
  platform: Scalars['String']['input'];
  platformFamily: Scalars['String']['input'];
  platformVersion: Scalars['SemVer']['input'];
  redirectUrl?: InputMaybe<Scalars['String']['input']>;
  status: InstallationRecipeStatusType;
  targetedInstall: Scalars['Boolean']['input'];
  taskPath?: InputMaybe<Scalars['String']['input']>;
  validationDurationMilliseconds: Scalars['EpochMilliseconds']['input'];
};

export type InstallationRecipeStatusType =
  | 'AVAILABLE'
  | 'CANCELED'
  | 'DETECTED'
  | 'FAILED'
  | 'INSTALLED'
  | 'INSTALLING'
  | 'RECOMMENDED'
  | 'SKIPPED'
  | 'UNSUPPORTED';

export type InstallationStatusError = {
  __typename?: 'InstallationStatusError';
  details?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

export type InstallationStatusErrorInput = {
  details?: InputMaybe<Scalars['String']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
};

export type InvitationsAccountStitchedFields = {
  __typename?: 'InvitationsAccountStitchedFields';
  userUpgradeRequests?: Maybe<Array<Maybe<InvitationsUserUpgradeRequest>>>;
};


export type InvitationsAccountStitchedFieldsUserUpgradeRequestsArgs = {
  filter?: InputMaybe<InvitationsUserUpgradeRequestsFilterInput>;
};

export type InvitationsAddUserRequestAdminResponse =
  | 'CREATED'
  | 'DENIED';

export type InvitationsAddUserToOrganizationRequest = {
  __typename?: 'InvitationsAddUserToOrganizationRequest';
  email: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  organizationId: Scalars['ID']['output'];
  timestamp: Scalars['DateTime']['output'];
};

export type InvitationsInviteResponse = {
  __typename?: 'InvitationsInviteResponse';
  accountId: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  invitee: InvitationsInvitee;
  status: InvitationsInviteStatus;
};

export type InvitationsInviteStatus =
  | 'CREATED'
  | 'REQUESTED'
  | 'USER_EXISTS';

export type InvitationsInviteUserToOrganizationRequest = {
  __typename?: 'InvitationsInviteUserToOrganizationRequest';
  comment?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  inviteeEmail: Scalars['String']['output'];
  inviteeName: Scalars['String']['output'];
  organizationId: Scalars['ID']['output'];
  requestType?: Maybe<Scalars['String']['output']>;
  requesterId: Scalars['Int']['output'];
  timestamp: Scalars['DateTime']['output'];
};

export type InvitationsInviteUserToOrganizationRequestsFilterInput = {
  userIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type InvitationsInviteUserToOrganizationResponse = {
  __typename?: 'InvitationsInviteUserToOrganizationResponse';
  id: Scalars['ID']['output'];
  status: InvitationsInviteStatus;
};

export type InvitationsInvitee = {
  __typename?: 'InvitationsInvitee';
  email: Scalars['String']['output'];
};

export type InvitationsInviteeInput = {
  email: Scalars['String']['input'];
};

export type InvitationsManageAddUserToOrganizationRequestsResponse = {
  __typename?: 'InvitationsManageAddUserToOrganizationRequestsResponse';
  status?: Maybe<Scalars['String']['output']>;
};

export type InvitationsManageInviteUserToOrganizationRequestsResponse = {
  __typename?: 'InvitationsManageInviteUserToOrganizationRequestsResponse';
  status?: Maybe<Scalars['String']['output']>;
};

export type InvitationsManageUserUpgradeRequestsResponse = {
  __typename?: 'InvitationsManageUserUpgradeRequestsResponse';
  status?: Maybe<Scalars['String']['output']>;
};

export type InvitationsOrganizationStitchedFields = {
  __typename?: 'InvitationsOrganizationStitchedFields';
  addUserToOrganizationRequests?: Maybe<Array<Maybe<InvitationsAddUserToOrganizationRequest>>>;
  inviteUserToOrganizationRequests?: Maybe<Array<Maybe<InvitationsInviteUserToOrganizationRequest>>>;
  pendingRequestsCount?: Maybe<InvitationsPendingRequestsCount>;
};


export type InvitationsOrganizationStitchedFieldsInviteUserToOrganizationRequestsArgs = {
  filter?: InputMaybe<InvitationsInviteUserToOrganizationRequestsFilterInput>;
};

export type InvitationsPendingRequestsCount = {
  __typename?: 'InvitationsPendingRequestsCount';
  domainCapturePendingRequestCount: Scalars['Int']['output'];
  inviteATeammatePendingRequestCount: Scalars['Int']['output'];
  selfInvitePendingRequestCount: Scalars['Int']['output'];
  totalPendingRequestCount: Scalars['Int']['output'];
};

export type InvitationsRequestAccessResponse = {
  __typename?: 'InvitationsRequestAccessResponse';
  accountId: Scalars['Int']['output'];
  userId: Scalars['Int']['output'];
};

export type InvitationsRequestableUserType =
  | 'BASIC'
  | 'CORE'
  | 'FULL_PLATFORM';

export type InvitationsSourceInfoInput = {
  channel?: InputMaybe<Scalars['String']['input']>;
  subchannel?: InputMaybe<Scalars['String']['input']>;
};

export type InvitationsUserInviteRequestAdminResponse =
  | 'CREATED'
  | 'DENIED';

export type InvitationsUserUpgradeRequest = {
  __typename?: 'InvitationsUserUpgradeRequest';
  accountId: Scalars['Int']['output'];
  currentUserTier: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  requestReason?: Maybe<Scalars['String']['output']>;
  requestedUserTier: Scalars['String']['output'];
  timestamp: Scalars['DateTime']['output'];
  userEmailAddress: Scalars['String']['output'];
  userId: Scalars['Int']['output'];
};

export type InvitationsUserUpgradeRequestAdminResponse =
  | 'APPROVED'
  | 'DENIED';

export type InvitationsUserUpgradeRequestsFilterInput = {
  userIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};

export type JavaFlightRecorderFlamegraph = {
  __typename?: 'JavaFlightRecorderFlamegraph';
  allFrames: Array<Maybe<JavaFlightRecorderStackFrame>>;
};

export type JavaFlightRecorderStackFrame = {
  __typename?: 'JavaFlightRecorderStackFrame';
  count: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  parentId?: Maybe<Scalars['ID']['output']>;
};

export type KeyTransactionApplication = {
  __typename?: 'KeyTransactionApplication';
  entity?: Maybe<EntityOutline>;
  guid: Scalars['EntityGuid']['output'];
};

export type KeyTransactionCreateResult = {
  __typename?: 'KeyTransactionCreateResult';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
  application: KeyTransactionApplication;
  browserApdexTarget?: Maybe<Scalars['Float']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  metricName?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type KeyTransactionDeleteResult = {
  __typename?: 'KeyTransactionDeleteResult';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type KeyTransactionEntity = AlertableEntity & Entity & {
  __typename?: 'KeyTransactionEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  apdexTarget: Scalars['Float']['output'];
  application: KeyTransactionApplication;
  browserApdexTarget?: Maybe<Scalars['Float']['output']>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  metricName: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type KeyTransactionEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type KeyTransactionEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type KeyTransactionEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type KeyTransactionEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type KeyTransactionEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type KeyTransactionEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type KeyTransactionEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type KeyTransactionEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type KeyTransactionEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type KeyTransactionEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type KeyTransactionEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type KeyTransactionEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type KeyTransactionEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type KeyTransactionEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'KeyTransactionEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type KeyTransactionEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type KeyTransactionEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type KeyTransactionEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type KeyTransactionEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type KeyTransactionUpdateResult = {
  __typename?: 'KeyTransactionUpdateResult';
  apdexTarget?: Maybe<Scalars['Float']['output']>;
  application: KeyTransactionApplication;
  browserApdexTarget?: Maybe<Scalars['Float']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type Label = {
  __typename?: 'Label';
  type?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type LabelSearchInput = {
  type: Scalars['String']['input'];
  value?: InputMaybe<Scalars['String']['input']>;
};

export type LogConfigurationsAccountStitchedFields = {
  __typename?: 'LogConfigurationsAccountStitchedFields';
  dataPartitionRules?: Maybe<Array<LogConfigurationsDataPartitionRule>>;
  liveArchiveConfigurations?: Maybe<Array<LogConfigurationsLiveArchiveConfiguration>>;
  obfuscationExpressions?: Maybe<Array<LogConfigurationsObfuscationExpression>>;
  obfuscationRules?: Maybe<Array<LogConfigurationsObfuscationRule>>;
  parsingRules?: Maybe<Array<LogConfigurationsParsingRule>>;
  pipelineConfiguration?: Maybe<LogConfigurationsPipelineConfiguration>;
  testGrok?: Maybe<Array<LogConfigurationsGrokTestResult>>;
};


export type LogConfigurationsAccountStitchedFieldsTestGrokArgs = {
  grok: Scalars['String']['input'];
  logLines: Array<Scalars['String']['input']>;
};

export type LogConfigurationsCreateDataPartitionRuleError = {
  __typename?: 'LogConfigurationsCreateDataPartitionRuleError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<LogConfigurationsCreateDataPartitionRuleErrorType>;
};

export type LogConfigurationsCreateDataPartitionRuleErrorType =
  | 'DUPLICATE_DATA_PARTITION_RULE_NAME'
  | 'INVALID_DATA_PARTITION_INPUT'
  | 'MAX_DATA_PARTITION_RULES';

export type LogConfigurationsCreateDataPartitionRuleInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  matchingCriteria?: InputMaybe<LogConfigurationsDataPartitionRuleMatchingCriteriaInput>;
  nrql?: InputMaybe<Scalars['Nrql']['input']>;
  retentionPolicy: LogConfigurationsDataPartitionRuleRetentionPolicyType;
  targetDataPartition: Scalars['LogConfigurationsLogDataPartitionName']['input'];
};

export type LogConfigurationsCreateDataPartitionRuleResponse = {
  __typename?: 'LogConfigurationsCreateDataPartitionRuleResponse';
  errors?: Maybe<Array<Maybe<LogConfigurationsCreateDataPartitionRuleError>>>;
  rule?: Maybe<LogConfigurationsDataPartitionRule>;
};

export type LogConfigurationsCreateObfuscationActionInput = {
  attributes: Array<Scalars['String']['input']>;
  expressionId: Scalars['ID']['input'];
  method: LogConfigurationsObfuscationMethod;
};

export type LogConfigurationsCreateObfuscationExpressionInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  regex: Scalars['String']['input'];
};

export type LogConfigurationsCreateObfuscationRuleInput = {
  actions: Array<LogConfigurationsCreateObfuscationActionInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  filter: Scalars['Nrql']['input'];
  name: Scalars['String']['input'];
};

export type LogConfigurationsCreateParsingRuleResponse = {
  __typename?: 'LogConfigurationsCreateParsingRuleResponse';
  errors?: Maybe<Array<Maybe<LogConfigurationsParsingRuleMutationError>>>;
  rule?: Maybe<LogConfigurationsParsingRule>;
};

export type LogConfigurationsDataPartitionRule = {
  __typename?: 'LogConfigurationsDataPartitionRule';
  createdAt: Scalars['DateTime']['output'];
  createdBy?: Maybe<UserReference>;
  deleted: Scalars['Boolean']['output'];
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  /** @deprecated matchingCriteria is deprecated and will eventually be replaced with a new field named nrql which will allow for greater flexibility in defining rules */
  matchingCriteria?: Maybe<LogConfigurationsDataPartitionRuleMatchingCriteria>;
  nrql?: Maybe<Scalars['Nrql']['output']>;
  retentionPolicy: LogConfigurationsDataPartitionRuleRetentionPolicyType;
  targetDataPartition: Scalars['LogConfigurationsLogDataPartitionName']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type LogConfigurationsDataPartitionRuleMatchingCriteria = {
  __typename?: 'LogConfigurationsDataPartitionRuleMatchingCriteria';
  attributeName: Scalars['String']['output'];
  matchingExpression: Scalars['String']['output'];
  matchingOperator: LogConfigurationsDataPartitionRuleMatchingOperator;
};

export type LogConfigurationsDataPartitionRuleMatchingCriteriaInput = {
  attributeName: Scalars['String']['input'];
  matchingExpression: Scalars['String']['input'];
  matchingMethod: LogConfigurationsDataPartitionRuleMatchingOperator;
};

export type LogConfigurationsDataPartitionRuleMatchingOperator =
  | 'EQUALS'
  | 'LIKE';

export type LogConfigurationsDataPartitionRuleMutationError = {
  __typename?: 'LogConfigurationsDataPartitionRuleMutationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<LogConfigurationsDataPartitionRuleMutationErrorType>;
};

export type LogConfigurationsDataPartitionRuleMutationErrorType =
  | 'INVALID_ID'
  | 'INVALID_RULE'
  | 'NOT_FOUND';

export type LogConfigurationsDataPartitionRuleRetentionPolicyType =
  | 'SECONDARY'
  | 'STANDARD';

export type LogConfigurationsDeleteDataPartitionRuleResponse = {
  __typename?: 'LogConfigurationsDeleteDataPartitionRuleResponse';
  errors?: Maybe<Array<Maybe<LogConfigurationsDataPartitionRuleMutationError>>>;
};

export type LogConfigurationsDeleteParsingRuleResponse = {
  __typename?: 'LogConfigurationsDeleteParsingRuleResponse';
  errors?: Maybe<Array<Maybe<LogConfigurationsParsingRuleMutationError>>>;
};

export type LogConfigurationsGrokTestExtractedAttribute = {
  __typename?: 'LogConfigurationsGrokTestExtractedAttribute';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type LogConfigurationsGrokTestResult = {
  __typename?: 'LogConfigurationsGrokTestResult';
  attributes?: Maybe<Array<LogConfigurationsGrokTestExtractedAttribute>>;
  logLine: Scalars['String']['output'];
  matched: Scalars['Boolean']['output'];
};

export type LogConfigurationsLiveArchiveConfiguration = {
  __typename?: 'LogConfigurationsLiveArchiveConfiguration';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['DateTime']['output'];
  createdBy?: Maybe<UserReference>;
  enabled: Scalars['Boolean']['output'];
  eventType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  retentionPolicy: LogConfigurationsLiveArchiveRetentionPolicyType;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type LogConfigurationsLiveArchiveRetentionPolicyType =
  | 'NONE'
  | 'STANDARD_ARCHIVE';

export type LogConfigurationsObfuscationAction = {
  __typename?: 'LogConfigurationsObfuscationAction';
  attributes: Array<Scalars['String']['output']>;
  expression: LogConfigurationsObfuscationExpression;
  id: Scalars['ID']['output'];
  method: LogConfigurationsObfuscationMethod;
};

export type LogConfigurationsObfuscationExpression = {
  __typename?: 'LogConfigurationsObfuscationExpression';
  createdAt: Scalars['DateTime']['output'];
  createdBy?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  regex: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
  updatedBy?: Maybe<UserReference>;
};

export type LogConfigurationsObfuscationMethod =
  | 'HASH_SHA256'
  | 'MASK';

export type LogConfigurationsObfuscationRule = {
  __typename?: 'LogConfigurationsObfuscationRule';
  actions?: Maybe<Array<LogConfigurationsObfuscationAction>>;
  createdAt: Scalars['DateTime']['output'];
  createdBy?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  filter: Scalars['Nrql']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
  updatedBy?: Maybe<UserReference>;
};

export type LogConfigurationsParsingRule = {
  __typename?: 'LogConfigurationsParsingRule';
  accountId: Scalars['Int']['output'];
  attribute: Scalars['String']['output'];
  createdBy?: Maybe<UserReference>;
  deleted: Scalars['Boolean']['output'];
  description: Scalars['String']['output'];
  enabled: Scalars['Boolean']['output'];
  grok: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lucene: Scalars['String']['output'];
  nrql: Scalars['Nrql']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type LogConfigurationsParsingRuleConfiguration = {
  attribute?: InputMaybe<Scalars['String']['input']>;
  description: Scalars['String']['input'];
  enabled: Scalars['Boolean']['input'];
  grok: Scalars['String']['input'];
  lucene: Scalars['String']['input'];
  nrql: Scalars['Nrql']['input'];
};

export type LogConfigurationsParsingRuleMutationError = {
  __typename?: 'LogConfigurationsParsingRuleMutationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<LogConfigurationsParsingRuleMutationErrorType>;
};

export type LogConfigurationsParsingRuleMutationErrorType =
  | 'INVALID_GROK'
  | 'INVALID_ID'
  | 'INVALID_NRQL'
  | 'NOT_FOUND';

export type LogConfigurationsPipelineConfiguration = {
  __typename?: 'LogConfigurationsPipelineConfiguration';
  accountId: Scalars['Int']['output'];
  enrichmentDisabled: Scalars['Boolean']['output'];
  entitySynthesisDisabled: Scalars['Boolean']['output'];
  infraAgentAttributesCleanupEnabled: Scalars['Boolean']['output'];
  jsonParsingDisabled: Scalars['Boolean']['output'];
  nrLinkingExtractionDisabled: Scalars['Boolean']['output'];
  nrUnmarshallingFieldsDisabled: Scalars['Boolean']['output'];
  obfuscationDisabled: Scalars['Boolean']['output'];
  parsingDisabled: Scalars['Boolean']['output'];
  patternsEnabled: Scalars['Boolean']['output'];
  pluginAttributesCleanupEnabled: Scalars['Boolean']['output'];
  recursiveJsonParsingDisabled: Scalars['Boolean']['output'];
  syslogJsonParsingDisabled: Scalars['Boolean']['output'];
  transformationDisabled: Scalars['Boolean']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type LogConfigurationsPipelineConfigurationInput = {
  enrichmentDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  entitySynthesisDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  infraAgentAttributesCleanupEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  jsonParsingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  nrLinkingExtractionDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  nrUnmarshallingFieldsDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  obfuscationDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  parsingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  patternsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  pluginAttributesCleanupEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  recursiveJsonParsingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  syslogJsonParsingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  transformationDisabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LogConfigurationsUpdateDataPartitionRuleInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  matchingCriteria?: InputMaybe<LogConfigurationsDataPartitionRuleMatchingCriteriaInput>;
  nrql?: InputMaybe<Scalars['Nrql']['input']>;
};

export type LogConfigurationsUpdateDataPartitionRuleResponse = {
  __typename?: 'LogConfigurationsUpdateDataPartitionRuleResponse';
  errors?: Maybe<Array<Maybe<LogConfigurationsDataPartitionRuleMutationError>>>;
  rule?: Maybe<LogConfigurationsDataPartitionRule>;
};

export type LogConfigurationsUpdateObfuscationActionInput = {
  attributes: Array<Scalars['String']['input']>;
  expressionId: Scalars['ID']['input'];
  method: LogConfigurationsObfuscationMethod;
};

export type LogConfigurationsUpdateObfuscationExpressionInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  regex?: InputMaybe<Scalars['String']['input']>;
};

export type LogConfigurationsUpdateObfuscationRuleInput = {
  actions?: InputMaybe<Array<LogConfigurationsUpdateObfuscationActionInput>>;
  description?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['Nrql']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

export type LogConfigurationsUpdateParsingRuleResponse = {
  __typename?: 'LogConfigurationsUpdateParsingRuleResponse';
  errors?: Maybe<Array<Maybe<LogConfigurationsParsingRuleMutationError>>>;
  rule?: Maybe<LogConfigurationsParsingRule>;
};

export type LogConfigurationsUpsertPipelineConfigurationResponse = {
  __typename?: 'LogConfigurationsUpsertPipelineConfigurationResponse';
  pipelineConfiguration?: Maybe<LogConfigurationsPipelineConfiguration>;
};

export type LogsLiveTailResult = {
  __typename?: 'LogsLiveTailResult';
  count?: Maybe<Scalars['Int']['output']>;
  lines?: Maybe<Array<Maybe<Scalars['LogLine']['output']>>>;
};

export type Metric = {
  __typename?: 'Metric';
  name?: Maybe<Scalars['String']['output']>;
  scope?: Maybe<Scalars['String']['output']>;
};

export type MetricNormalizationAccountStitchedFields = {
  __typename?: 'MetricNormalizationAccountStitchedFields';
  metricNormalizationRule?: Maybe<MetricNormalizationRule>;
  metricNormalizationRules?: Maybe<Array<MetricNormalizationRule>>;
};


export type MetricNormalizationAccountStitchedFieldsMetricNormalizationRuleArgs = {
  id: Scalars['Int']['input'];
};


export type MetricNormalizationAccountStitchedFieldsMetricNormalizationRulesArgs = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MetricNormalizationCreateRuleInput = {
  action: MetricNormalizationCustomerRuleAction;
  applicationGuid?: InputMaybe<Scalars['EntityGuid']['input']>;
  enabled: Scalars['Boolean']['input'];
  evalOrder?: InputMaybe<Scalars['Int']['input']>;
  matchExpression: Scalars['String']['input'];
  notes?: InputMaybe<Scalars['String']['input']>;
  replacement?: InputMaybe<Scalars['String']['input']>;
  terminateChain?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MetricNormalizationCustomerRuleAction =
  | 'DENY_NEW_METRICS'
  | 'IGNORE'
  | 'REPLACE';

export type MetricNormalizationEditRuleInput = {
  action: MetricNormalizationCustomerRuleAction;
  enabled: Scalars['Boolean']['input'];
  evalOrder?: InputMaybe<Scalars['Int']['input']>;
  id: Scalars['Int']['input'];
  matchExpression: Scalars['String']['input'];
  notes?: InputMaybe<Scalars['String']['input']>;
  replacement?: InputMaybe<Scalars['String']['input']>;
  terminateChain?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MetricNormalizationRule = {
  __typename?: 'MetricNormalizationRule';
  action?: Maybe<MetricNormalizationRuleAction>;
  applicationGuid?: Maybe<Scalars['EntityGuid']['output']>;
  applicationName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  enabled: Scalars['Boolean']['output'];
  evalOrder?: Maybe<Scalars['Int']['output']>;
  id: Scalars['Int']['output'];
  matchExpression: Scalars['String']['output'];
  notes?: Maybe<Scalars['String']['output']>;
  replacement?: Maybe<Scalars['String']['output']>;
  terminateChain?: Maybe<Scalars['Boolean']['output']>;
};

export type MetricNormalizationRuleAction =
  | 'DENY_NEW_METRICS'
  | 'IGNORE'
  | 'REPLACE';

export type MetricNormalizationRuleErrorType =
  | 'CREATION_ERROR'
  | 'EDITION_ERROR'
  | 'RULE_NOT_FOUND'
  | 'VALIDATION_ERROR';

export type MetricNormalizationRuleMetricGroupingIssue = {
  __typename?: 'MetricNormalizationRuleMetricGroupingIssue';
  deniedMetricsCount?: Maybe<Scalars['Int']['output']>;
  deniedMetricsRatePerMinute?: Maybe<Scalars['Float']['output']>;
  metricNormalizationRuleId: Scalars['Int']['output'];
  mitigated?: Maybe<Scalars['Boolean']['output']>;
  mitigationRateThreshold?: Maybe<Scalars['Float']['output']>;
  mitigationRateWindowSize?: Maybe<Scalars['Int']['output']>;
};

export type MetricNormalizationRuleMutationError = {
  __typename?: 'MetricNormalizationRuleMutationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<MetricNormalizationRuleErrorType>;
};

export type MetricNormalizationRuleMutationResponse = {
  __typename?: 'MetricNormalizationRuleMutationResponse';
  errors?: Maybe<Array<Maybe<MetricNormalizationRuleMutationError>>>;
  rule?: Maybe<MetricNormalizationRule>;
};

export type MobileAppSummaryData = {
  __typename?: 'MobileAppSummaryData';
  appLaunchCount?: Maybe<Scalars['Int']['output']>;
  crashCount?: Maybe<Scalars['Int']['output']>;
  crashRate?: Maybe<Scalars['Float']['output']>;
  httpErrorRate?: Maybe<Scalars['Float']['output']>;
  httpRequestCount?: Maybe<Scalars['Int']['output']>;
  httpRequestRate?: Maybe<Scalars['Float']['output']>;
  httpResponseTimeAverage?: Maybe<Scalars['Seconds']['output']>;
  mobileSessionCount?: Maybe<Scalars['Int']['output']>;
  networkFailureRate?: Maybe<Scalars['Float']['output']>;
  usersAffectedCount?: Maybe<Scalars['Int']['output']>;
};

export type MobileApplicationEntity = AlertableEntity & Entity & {
  __typename?: 'MobileApplicationEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  applicationId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  connections?: Maybe<RelatedExternalsEntityResult>;
  crash?: Maybe<StackTraceMobileCrash>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  exception?: Maybe<StackTraceMobileException>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  metricGroupingIssues?: Maybe<Array<MetricNormalizationRuleMetricGroupingIssue>>;
  metricNormalizationRule?: Maybe<MetricNormalizationRule>;
  metricNormalizationRules?: Maybe<Array<MetricNormalizationRule>>;
  mobileProperties?: Maybe<AgentApplicationSettingsMobileProperties>;
  mobileSettings?: Maybe<AgentApplicationSettingsMobileBase>;
  mobileSummary?: Maybe<MobileAppSummaryData>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relatedTransactions?: Maybe<RelatedExternalsTransactionResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type MobileApplicationEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type MobileApplicationEntityConnectionsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityCrashArgs = {
  occurrenceId: Scalars['String']['input'];
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type MobileApplicationEntityExceptionArgs = {
  fingerprint?: InputMaybe<Scalars['String']['input']>;
  occurrenceId?: InputMaybe<Scalars['String']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type MobileApplicationEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type MobileApplicationEntityMetricGroupingIssuesArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  metricNormalizationRuleIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  startTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};


export type MobileApplicationEntityMetricNormalizationRuleArgs = {
  id: Scalars['Int']['input'];
};


export type MobileApplicationEntityMetricNormalizationRulesArgs = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MobileApplicationEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MobileApplicationEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MobileApplicationEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type MobileApplicationEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type MobileApplicationEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type MobileApplicationEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type MobileApplicationEntityRelatedTransactionsArgs = {
  search: RelatedExternalsSearch;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type MobileApplicationEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type MobileApplicationEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type MobileApplicationEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'MobileApplicationEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  applicationId?: Maybe<Scalars['Int']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  mobileSummary?: Maybe<MobileAppSummaryData>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type MobileApplicationEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type MobileApplicationEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type MobileApplicationEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type MobileApplicationEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type MobilePushNotificationActorStitchedFields = {
  __typename?: 'MobilePushNotificationActorStitchedFields';
  devices?: Maybe<Array<Maybe<MobilePushNotificationDevice>>>;
};

export type MobilePushNotificationDevice = {
  __typename?: 'MobilePushNotificationDevice';
  appVersion: Scalars['SemVer']['output'];
  deviceId: Scalars['String']['output'];
  deviceName: Scalars['String']['output'];
  deviceToken: Scalars['SecureValue']['output'];
  operatingSystem: Scalars['String']['output'];
  userId: Scalars['Int']['output'];
};

export type MobilePushNotificationRemoveDeviceResult = {
  __typename?: 'MobilePushNotificationRemoveDeviceResult';
  deviceId?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

export type MobilePushNotificationSendPushResult = {
  __typename?: 'MobilePushNotificationSendPushResult';
  message?: Maybe<Scalars['String']['output']>;
};

export type MultiTenantAuthorizationGrant = {
  __typename?: 'MultiTenantAuthorizationGrant';
  group: MultiTenantAuthorizationGrantGroup;
  id: Scalars['Int']['output'];
  role: MultiTenantAuthorizationGrantRole;
  scope: MultiTenantAuthorizationGrantScope;
};

export type MultiTenantAuthorizationGrantAuthenticationDomainIdInputFilter = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MultiTenantAuthorizationGrantCollection = {
  __typename?: 'MultiTenantAuthorizationGrantCollection';
  items: Array<MultiTenantAuthorizationGrant>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type MultiTenantAuthorizationGrantFilterInputExpression = {
  authenticationDomainId?: InputMaybe<MultiTenantAuthorizationGrantAuthenticationDomainIdInputFilter>;
  groupId?: InputMaybe<MultiTenantAuthorizationGrantGroupIdInputFilter>;
  id?: InputMaybe<MultiTenantAuthorizationGrantIdInputFilter>;
  organizationId: MultiTenantAuthorizationGrantOrganizationIdInputFilter;
  roleId?: InputMaybe<MultiTenantAuthorizationGrantRoleIdInputFilter>;
  scopeId?: InputMaybe<MultiTenantAuthorizationGrantScopeIdInputFilter>;
  scopeType?: InputMaybe<MultiTenantAuthorizationGrantScopeTypeInputFilter>;
};

export type MultiTenantAuthorizationGrantGroup = {
  __typename?: 'MultiTenantAuthorizationGrantGroup';
  id: Scalars['ID']['output'];
};

export type MultiTenantAuthorizationGrantGroupIdInputFilter = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MultiTenantAuthorizationGrantIdInputFilter = {
  eq: Scalars['Int']['input'];
};

export type MultiTenantAuthorizationGrantOrganizationIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type MultiTenantAuthorizationGrantRole = {
  __typename?: 'MultiTenantAuthorizationGrantRole';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

export type MultiTenantAuthorizationGrantRoleIdInputFilter = {
  eq?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type MultiTenantAuthorizationGrantScope = {
  __typename?: 'MultiTenantAuthorizationGrantScope';
  id: Scalars['String']['output'];
  type: MultiTenantAuthorizationGrantScopeEnum;
};

export type MultiTenantAuthorizationGrantScopeEnum =
  | 'ACCOUNT'
  | 'GROUP'
  | 'ORGANIZATION';

export type MultiTenantAuthorizationGrantScopeIdInputFilter = {
  eq?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type MultiTenantAuthorizationGrantScopeTypeInputFilter = {
  eq: MultiTenantAuthorizationGrantScopeEnum;
};

export type MultiTenantAuthorizationGrantSortEnum =
  | 'ID';

export type MultiTenantAuthorizationGrantSortInput = {
  direction?: InputMaybe<MultiTenantAuthorizationSortDirectionEnum>;
  key: MultiTenantAuthorizationGrantSortEnum;
};

export type MultiTenantAuthorizationPermission = {
  __typename?: 'MultiTenantAuthorizationPermission';
  category?: Maybe<MultiTenantAuthorizationPermissionCategoryEnum>;
  feature?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  product?: Maybe<Scalars['String']['output']>;
  subsetIds?: Maybe<Array<Scalars['ID']['output']>>;
};

export type MultiTenantAuthorizationPermissionCategoryEnum =
  | 'DELETE'
  | 'MANAGE'
  | 'MODIFY'
  | 'OTHER'
  | 'READ'
  | 'VIEW';

export type MultiTenantAuthorizationPermissionCollection = {
  __typename?: 'MultiTenantAuthorizationPermissionCollection';
  items: Array<MultiTenantAuthorizationPermission>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type MultiTenantAuthorizationPermissionFilter = {
  roleId?: InputMaybe<MultiTenantAuthorizationPermissionFilterRoleIdInput>;
};

export type MultiTenantAuthorizationPermissionFilterRoleIdInput = {
  eq: Scalars['ID']['input'];
};

export type MultiTenantAuthorizationRole = {
  __typename?: 'MultiTenantAuthorizationRole';
  id: Scalars['Int']['output'];
  internalName: Scalars['String']['output'];
  name: Scalars['String']['output'];
  scope: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type MultiTenantAuthorizationRoleCollection = {
  __typename?: 'MultiTenantAuthorizationRoleCollection';
  items: Array<MultiTenantAuthorizationRole>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type MultiTenantAuthorizationRoleFilterInputExpression = {
  id?: InputMaybe<MultiTenantAuthorizationRoleIdInputFilter>;
  name?: InputMaybe<MultiTenantAuthorizationRoleNameInputFilter>;
  organizationId: MultiTenantAuthorizationRoleOrganizationIdInputFilter;
  scope?: InputMaybe<MultiTenantAuthorizationRoleScopeInputFilter>;
  type?: InputMaybe<MultiTenantAuthorizationRoleTypeInputFilter>;
};

export type MultiTenantAuthorizationRoleIdInputFilter = {
  eq: Scalars['Int']['input'];
};

export type MultiTenantAuthorizationRoleNameInputFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type MultiTenantAuthorizationRoleOrganizationIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type MultiTenantAuthorizationRoleScopeEnum =
  | 'ACCOUNT'
  | 'GROUP'
  | 'ORGANIZATION';

export type MultiTenantAuthorizationRoleScopeInputFilter = {
  eq: MultiTenantAuthorizationRoleScopeEnum;
};

export type MultiTenantAuthorizationRoleSortEnum =
  | 'ID'
  | 'NAME'
  | 'SCOPE'
  | 'TYPE';

export type MultiTenantAuthorizationRoleSortInput = {
  direction?: InputMaybe<MultiTenantAuthorizationSortDirectionEnum>;
  key: MultiTenantAuthorizationRoleSortEnum;
};

export type MultiTenantAuthorizationRoleTypeEnum =
  | 'CUSTOM'
  | 'STANDARD';

export type MultiTenantAuthorizationRoleTypeInputFilter = {
  eq: MultiTenantAuthorizationRoleTypeEnum;
};

export type MultiTenantAuthorizationSortDirectionEnum =
  | 'ASCENDING'
  | 'DESCENDING';

export type MultiTenantIdentityAllowsCapabilityInput = {
  in?: InputMaybe<Array<MultiTenantIdentityCapability>>;
};

export type MultiTenantIdentityAuthenticationDomainIdInput = {
  eq: Scalars['ID']['input'];
};

export type MultiTenantIdentityCapability =
  | 'DELETE_GROUP'
  | 'GRANT_GROUP_MEMBERSHIP'
  | 'REVOKE_GROUP_MEMBERSHIP'
  | 'UPDATE_GROUP_NAME';

export type MultiTenantIdentityEmailVerificationState =
  | 'NOT_VERIFIABLE'
  | 'PENDING'
  | 'VERIFIED';

export type MultiTenantIdentityEmailVerificationStateInput = {
  pending: Scalars['Boolean']['input'];
};

export type MultiTenantIdentityGrantRole = {
  __typename?: 'MultiTenantIdentityGrantRole';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type MultiTenantIdentityGrantScope = {
  __typename?: 'MultiTenantIdentityGrantScope';
  id: Scalars['ID']['output'];
  type: Scalars['String']['output'];
};

export type MultiTenantIdentityGroup = {
  __typename?: 'MultiTenantIdentityGroup';
  authenticationDomainId: Scalars['ID']['output'];
  grants?: Maybe<MultiTenantIdentityGroupGrants>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  users?: Maybe<MultiTenantIdentityGroupUsers>;
};


export type MultiTenantIdentityGroupGrantsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type MultiTenantIdentityGroupUsersArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<MultiTenantIdentityGroupUserFilterInput>;
};

export type MultiTenantIdentityGroupCollection = {
  __typename?: 'MultiTenantIdentityGroupCollection';
  items: Array<MultiTenantIdentityGroup>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type MultiTenantIdentityGroupFilterInput = {
  allowsCapability?: InputMaybe<MultiTenantIdentityAllowsCapabilityInput>;
  authenticationDomainId?: InputMaybe<MultiTenantIdentityAuthenticationDomainIdInput>;
  id?: InputMaybe<MultiTenantIdentityGroupIdInput>;
  members?: InputMaybe<MultiTenantIdentityGroupMemberIdInput>;
  name?: InputMaybe<MultiTenantIdentityGroupNameInput>;
  organizationId: MultiTenantIdentityOrganizationIdInput;
};

export type MultiTenantIdentityGroupGrant = {
  __typename?: 'MultiTenantIdentityGroupGrant';
  id: Scalars['ID']['output'];
  role?: Maybe<MultiTenantIdentityGrantRole>;
  scope: MultiTenantIdentityGrantScope;
};

export type MultiTenantIdentityGroupGrants = {
  __typename?: 'MultiTenantIdentityGroupGrants';
  items: Array<MultiTenantIdentityGroupGrant>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type MultiTenantIdentityGroupIdInput = {
  eq: Scalars['ID']['input'];
};

export type MultiTenantIdentityGroupMemberIdInput = {
  contains: Array<Scalars['ID']['input']>;
};

export type MultiTenantIdentityGroupNameInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type MultiTenantIdentityGroupSortInput = {
  direction?: InputMaybe<MultiTenantIdentitySortDirection>;
  key?: InputMaybe<MultiTenantIdentitySortKeyEnum>;
};

export type MultiTenantIdentityGroupUser = {
  __typename?: 'MultiTenantIdentityGroupUser';
  email: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  timeZone?: Maybe<Scalars['String']['output']>;
};

export type MultiTenantIdentityGroupUserFilterInput = {
  id?: InputMaybe<MultiTenantIdentityUserIdInput>;
};

export type MultiTenantIdentityGroupUsers = {
  __typename?: 'MultiTenantIdentityGroupUsers';
  items: Array<MultiTenantIdentityGroupUser>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type MultiTenantIdentityOrganizationIdInput = {
  eq: Scalars['ID']['input'];
};

export type MultiTenantIdentityPendingUpgradeRequest = {
  __typename?: 'MultiTenantIdentityPendingUpgradeRequest';
  id: Scalars['ID']['output'];
  message?: Maybe<Scalars['String']['output']>;
  requestedUserType?: Maybe<MultiTenantIdentityUserType>;
};

export type MultiTenantIdentityPendingUpgradeRequestInput = {
  exists: Scalars['Boolean']['input'];
};

export type MultiTenantIdentitySortDirection =
  | 'ASCENDING'
  | 'DESCENDING';

export type MultiTenantIdentitySortKeyEnum =
  | 'AUTHENTICATION_DOMAIN_ID'
  | 'ID'
  | 'NAME';

export type MultiTenantIdentityUser = {
  __typename?: 'MultiTenantIdentityUser';
  authenticationDomainId: Scalars['ID']['output'];
  email?: Maybe<Scalars['String']['output']>;
  emailVerificationState: MultiTenantIdentityEmailVerificationState;
  groups?: Maybe<MultiTenantIdentityUserGroups>;
  id: Scalars['ID']['output'];
  lastActive?: Maybe<Scalars['DateTime']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pendingUpgradeRequest?: Maybe<MultiTenantIdentityPendingUpgradeRequest>;
  timeZone?: Maybe<Scalars['String']['output']>;
  type: MultiTenantIdentityUserType;
};


export type MultiTenantIdentityUserGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};

export type MultiTenantIdentityUserCollection = {
  __typename?: 'MultiTenantIdentityUserCollection';
  items: Array<MultiTenantIdentityUser>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type MultiTenantIdentityUserEmailInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type MultiTenantIdentityUserFilterInput = {
  authenticationDomainId: MultiTenantIdentityAuthenticationDomainIdInput;
  email?: InputMaybe<MultiTenantIdentityUserEmailInput>;
  emailVerificationState?: InputMaybe<MultiTenantIdentityEmailVerificationStateInput>;
  groupId?: InputMaybe<MultiTenantIdentityUserGroupIdInput>;
  id?: InputMaybe<MultiTenantIdentityUserIdInput>;
  name?: InputMaybe<MultiTenantIdentityUserNameInput>;
  pendingUpgradeRequest?: InputMaybe<MultiTenantIdentityPendingUpgradeRequestInput>;
};

export type MultiTenantIdentityUserGroup = {
  __typename?: 'MultiTenantIdentityUserGroup';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type MultiTenantIdentityUserGroupIdInput = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MultiTenantIdentityUserGroups = {
  __typename?: 'MultiTenantIdentityUserGroups';
  items: Array<MultiTenantIdentityUserGroup>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type MultiTenantIdentityUserIdInput = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type MultiTenantIdentityUserNameInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type MultiTenantIdentityUserSortInput = {
  direction?: InputMaybe<MultiTenantIdentitySortDirection>;
  key?: InputMaybe<MultiTenantIdentityUserSortKey>;
};

export type MultiTenantIdentityUserSortKey =
  | 'EMAIL'
  | 'ID'
  | 'LAST_ACTIVE'
  | 'NAME'
  | 'TYPE';

export type MultiTenantIdentityUserType = {
  __typename?: 'MultiTenantIdentityUserType';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type NerdGraph = {
  __typename?: 'NerdGraph';
  experimentalNamespaces?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  mutationGroupings?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type NerdGraphContext = {
  __typename?: 'NerdGraphContext';
  accountId?: Maybe<Scalars['Int']['output']>;
  actualUser?: Maybe<UserObject>;
  actualUserId?: Maybe<Scalars['Int']['output']>;
  currentAccount?: Maybe<AccountInfo>;
  hardFail?: Maybe<Scalars['String']['output']>;
  impersonatedUser?: Maybe<UserInfo>;
  impersonatedUserId?: Maybe<Scalars['Int']['output']>;
  internal?: Maybe<Scalars['Boolean']['output']>;
  isImpersonating?: Maybe<Scalars['Boolean']['output']>;
  isNewrelicAdmin?: Maybe<Scalars['Boolean']['output']>;
  nerdGraphKey?: Maybe<Scalars['String']['output']>;
  referrer?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['Int']['output']>;
  visibility?: Maybe<NerdGraphVisibility>;
};

export type NerdGraphVisibility =
  | 'CUSTOME'
  | 'PRODUCT';

export type NerdStorageAccountScope = {
  __typename?: 'NerdStorageAccountScope';
  collection?: Maybe<Array<Maybe<NerdStorageCollectionMember>>>;
  document?: Maybe<Scalars['NerdStorageDocument']['output']>;
};


export type NerdStorageAccountScopeCollectionArgs = {
  collection: Scalars['String']['input'];
};


export type NerdStorageAccountScopeDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};

export type NerdStorageActorScope = {
  __typename?: 'NerdStorageActorScope';
  collection?: Maybe<Array<Maybe<NerdStorageCollectionMember>>>;
  document?: Maybe<Scalars['NerdStorageDocument']['output']>;
};


export type NerdStorageActorScopeCollectionArgs = {
  collection: Scalars['String']['input'];
};


export type NerdStorageActorScopeDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};

export type NerdStorageCollectionMember = {
  __typename?: 'NerdStorageCollectionMember';
  document?: Maybe<Scalars['NerdStorageDocument']['output']>;
  id?: Maybe<Scalars['String']['output']>;
};

export type NerdStorageDeleteResult = {
  __typename?: 'NerdStorageDeleteResult';
  deleted?: Maybe<Scalars['Int']['output']>;
};

export type NerdStorageEntityScope = {
  __typename?: 'NerdStorageEntityScope';
  collection?: Maybe<Array<Maybe<NerdStorageCollectionMember>>>;
  document?: Maybe<Scalars['NerdStorageDocument']['output']>;
};


export type NerdStorageEntityScopeCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type NerdStorageEntityScopeDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};

export type NerdStorageScope =
  | 'ACCOUNT'
  | 'ACTOR'
  | 'ENTITY';

export type NerdStorageScopeInput = {
  id: Scalars['String']['input'];
  name: NerdStorageScope;
};

export type NerdStorageVaultActorScope =
  | 'CURRENT_USER';

export type NerdStorageVaultActorStitchedFields = {
  __typename?: 'NerdStorageVaultActorStitchedFields';
  secret?: Maybe<NerdStorageVaultSecret>;
  secrets: Array<NerdStorageVaultSecret>;
};


export type NerdStorageVaultActorStitchedFieldsSecretArgs = {
  key: Scalars['String']['input'];
};

export type NerdStorageVaultDeleteSecretResult = {
  __typename?: 'NerdStorageVaultDeleteSecretResult';
  errors?: Maybe<Array<NerdStorageVaultResultError>>;
  status: NerdStorageVaultResultStatus;
};

export type NerdStorageVaultErrorType =
  | 'ACCESS_DENIED'
  | 'BAD_INPUT'
  | 'NOT_FOUND'
  | 'VALIDATION_FAILED';

export type NerdStorageVaultResultError = {
  __typename?: 'NerdStorageVaultResultError';
  message?: Maybe<Scalars['String']['output']>;
  type: NerdStorageVaultErrorType;
};

export type NerdStorageVaultResultStatus =
  | 'FAILURE'
  | 'SUCCESS';

export type NerdStorageVaultScope = {
  actor?: InputMaybe<NerdStorageVaultActorScope>;
};

export type NerdStorageVaultSecret = {
  __typename?: 'NerdStorageVaultSecret';
  key: Scalars['String']['output'];
  value: Scalars['SecureValue']['output'];
};

export type NerdStorageVaultWriteSecretInput = {
  key: Scalars['String']['input'];
  value: Scalars['SecureValue']['input'];
};

export type NerdStorageVaultWriteSecretResult = {
  __typename?: 'NerdStorageVaultWriteSecretResult';
  errors?: Maybe<Array<NerdStorageVaultResultError>>;
  status: NerdStorageVaultResultStatus;
};

export type NerdStoreCollectionMember = {
  __typename?: 'NerdStoreCollectionMember';
  document?: Maybe<Scalars['NerdStoreDocument']['output']>;
  id?: Maybe<Scalars['String']['output']>;
};

export type NerdStoreDeleteResult = {
  __typename?: 'NerdStoreDeleteResult';
  deleted?: Maybe<Scalars['Int']['output']>;
};

export type NerdStoreScope =
  | 'ACCOUNTS'
  | 'ENTITIES'
  | 'USERS';

export type NerdStoreScopeInput = {
  id: Scalars['String']['input'];
  name: NerdStoreScope;
};

export type NerdpackAllowListInput = {
  accountIds: Array<InputMaybe<Scalars['Int']['input']>>;
};

export type NerdpackAllowListResult = {
  __typename?: 'NerdpackAllowListResult';
  nerdpack: NerdpackData;
  resultsPerAccount?: Maybe<Array<Maybe<NerdpackMutationResultPerAccount>>>;
};

export type NerdpackAllowedAccount = {
  __typename?: 'NerdpackAllowedAccount';
  accountId: Scalars['Int']['output'];
};

export type NerdpackArtifact = {
  __typename?: 'NerdpackArtifact';
  artifactId?: Maybe<Scalars['String']['output']>;
  css?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  entities?: Maybe<Array<Maybe<NerdpackEntityFilter>>>;
  icon?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  js?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  otherFiles?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  rawMetadata: Scalars['NerdpackRawMetadata']['output'];
  schemaType?: Maybe<Scalars['String']['output']>;
};

export type NerdpackArtifactMetadata = {
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id: Scalars['NerdpackFullArtifactId']['output'];
};

export type NerdpackArtifactOutput = {
  __typename?: 'NerdpackArtifactOutput';
  id: Scalars['NerdpackFullArtifactId']['output'];
  metadata: NerdpackArtifactMetadata;
};

export type NerdpackArtifactSchemaType =
  | 'LAUNCHER'
  | 'NERDLET'
  | 'VISUALIZATION';

export type NerdpackAssetInfo = {
  __typename?: 'NerdpackAssetInfo';
  name?: Maybe<Scalars['String']['output']>;
  sizeInBytes?: Maybe<Scalars['Int']['output']>;
};

export type NerdpackContext = {
  __typename?: 'NerdpackContext';
  entities?: Maybe<Array<Maybe<NerdpackEntityContextFilter>>>;
};

export type NerdpackCreationInput = {
  ownerAccount?: InputMaybe<Scalars['Int']['input']>;
};

export type NerdpackData = {
  __typename?: 'NerdpackData';
  accountId: Scalars['Int']['output'];
  allowedAccounts?: Maybe<Array<Maybe<NerdpackAllowedAccount>>>;
  id: Scalars['ID']['output'];
  subscriptionModel?: Maybe<NerdpackSubscriptionModel>;
  subscriptions?: Maybe<Array<Maybe<NerdpackSubscription>>>;
  versions?: Maybe<NerdpackVersionsResult>;
};


export type NerdpackDataVersionsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<NerdpackVersionFilter>;
};

export type NerdpackDataFilter = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  subscriptionModel?: InputMaybe<NerdpackSubscriptionModel>;
  tag?: InputMaybe<Scalars['NerdpackTagName']['input']>;
};

export type NerdpackEntityContextFilter = {
  __typename?: 'NerdpackEntityContextFilter';
  domain?: Maybe<Scalars['String']['output']>;
  tags?: Maybe<Array<NerdpackEntityTag>>;
  type: Scalars['String']['output'];
};

export type NerdpackEntityFilter = {
  __typename?: 'NerdpackEntityFilter';
  domain?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type NerdpackEntityTag = {
  __typename?: 'NerdpackEntityTag';
  key: Scalars['String']['output'];
  values?: Maybe<Array<Scalars['String']['output']>>;
};

export type NerdpackLauncherMetadata = NerdpackArtifactMetadata & {
  __typename?: 'NerdpackLauncherMetadata';
  context?: Maybe<NerdpackContext>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  hidden?: Maybe<Scalars['Boolean']['output']>;
  icon?: Maybe<Scalars['String']['output']>;
  id: Scalars['NerdpackFullArtifactId']['output'];
};

export type NerdpackMutationErrorType =
  | 'CAPABILITY_NOT_GRANTED'
  | 'DOWNSTREAM_ERROR'
  | 'NOT_FOUND'
  | 'TNC_NOT_ACCEPTED'
  | 'UNAUTHORIZED_ACCOUNT';

export type NerdpackMutationResult =
  | 'ERROR'
  | 'OK';

export type NerdpackMutationResultPerAccount = {
  __typename?: 'NerdpackMutationResultPerAccount';
  accountId: Scalars['Int']['output'];
  reason?: Maybe<NerdpackMutationErrorType>;
  result: NerdpackMutationResult;
};

export type NerdpackNerdletMetadata = NerdpackArtifactMetadata & {
  __typename?: 'NerdpackNerdletMetadata';
  context?: Maybe<NerdpackContext>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['String']['output']>;
  id: Scalars['NerdpackFullArtifactId']['output'];
};

export type NerdpackNerdpacks = {
  __typename?: 'NerdpackNerdpacks';
  artifacts?: Maybe<Array<Maybe<NerdpackArtifactOutput>>>;
  effectiveSubscribedVersions?: Maybe<Array<Maybe<NerdpackVersion>>>;
  nerdpack?: Maybe<NerdpackData>;
  subscribable?: Maybe<Array<Maybe<NerdpackData>>>;
};


export type NerdpackNerdpacksArtifactsArgs = {
  ids?: InputMaybe<Array<Scalars['NerdpackFullArtifactId']['input']>>;
  nerdpackVersionOverrides?: InputMaybe<Array<InputMaybe<NerdpackOverrideVersionRules>>>;
  types?: InputMaybe<Array<NerdpackArtifactSchemaType>>;
};


export type NerdpackNerdpacksEffectiveSubscribedVersionsArgs = {
  overrides?: InputMaybe<Array<InputMaybe<NerdpackOverrideVersionRules>>>;
};


export type NerdpackNerdpacksNerdpackArgs = {
  id: Scalars['ID']['input'];
};


export type NerdpackNerdpacksSubscribableArgs = {
  nerdpackFilter?: InputMaybe<NerdpackDataFilter>;
};

export type NerdpackOverrideVersionRules = {
  nerdpackId: Scalars['ID']['input'];
  tag?: InputMaybe<Scalars['NerdpackTagName']['input']>;
  version?: InputMaybe<Scalars['SemVer']['input']>;
};

export type NerdpackRemoveVersionTagInput = {
  tag?: InputMaybe<Scalars['NerdpackTagName']['input']>;
};

export type NerdpackRemovedTagInfo = {
  __typename?: 'NerdpackRemovedTagInfo';
  nerdpackId?: Maybe<Scalars['ID']['output']>;
  tagName?: Maybe<Scalars['NerdpackTagName']['output']>;
  version?: Maybe<Scalars['SemVer']['output']>;
};

export type NerdpackRemovedTagResponse = {
  __typename?: 'NerdpackRemovedTagResponse';
  removedTagInfo?: Maybe<NerdpackRemovedTagInfo>;
  status?: Maybe<NerdpackRemovedTagResponseType>;
};

export type NerdpackRemovedTagResponseType =
  | 'NOTHING_TO_REMOVE'
  | 'REMOVED';

export type NerdpackSubscribeAccountsInput = {
  accountIds: Array<Scalars['Int']['input']>;
  tag: Scalars['NerdpackTagName']['input'];
};

export type NerdpackSubscribeResult = {
  __typename?: 'NerdpackSubscribeResult';
  nerdpack: NerdpackData;
  resultsPerAccount?: Maybe<Array<Maybe<NerdpackMutationResultPerAccount>>>;
  tag?: Maybe<Scalars['NerdpackTagName']['output']>;
};

export type NerdpackSubscription = {
  __typename?: 'NerdpackSubscription';
  accessType?: Maybe<Array<Maybe<NerdpackSubscriptionAccessType>>>;
  accountId?: Maybe<Scalars['Int']['output']>;
  nerdpackVersion?: Maybe<NerdpackVersion>;
  tag?: Maybe<Scalars['NerdpackTagName']['output']>;
};

export type NerdpackSubscriptionAccessType =
  | 'DIRECT'
  | 'INHERITED';

export type NerdpackSubscriptionModel =
  | 'CORE'
  | 'GLOBAL'
  | 'OWNER_AND_ALLOWED';

export type NerdpackTagVersionInput = {
  tag?: InputMaybe<Scalars['NerdpackTagName']['input']>;
  version?: InputMaybe<Scalars['SemVer']['input']>;
};

export type NerdpackTeamInfo = {
  __typename?: 'NerdpackTeamInfo';
  id?: Maybe<Scalars['ID']['output']>;
  jiraUrl?: Maybe<Scalars['String']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slack?: Maybe<Scalars['String']['output']>;
  slackUrl?: Maybe<Scalars['String']['output']>;
  teamstoreUrl?: Maybe<Scalars['String']['output']>;
};

export type NerdpackUnsubscribeAccountsInput = {
  accountIds: Array<Scalars['Int']['input']>;
};

export type NerdpackUnsubscribeResult = {
  __typename?: 'NerdpackUnsubscribeResult';
  nerdpack: NerdpackData;
  resultsPerAccount?: Maybe<Array<Maybe<NerdpackMutationResultPerAccount>>>;
};

export type NerdpackVersion = {
  __typename?: 'NerdpackVersion';
  artifacts?: Maybe<Array<Maybe<NerdpackArtifact>>>;
  assets?: Maybe<Array<Maybe<NerdpackAssetInfo>>>;
  cliVersion?: Maybe<Scalars['SemVer']['output']>;
  createdAt: Scalars['DateTime']['output'];
  createdByUser: Scalars['Int']['output'];
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['String']['output']>;
  nerdpackId?: Maybe<Scalars['ID']['output']>;
  repositoryUrl?: Maybe<Scalars['String']['output']>;
  sdkVersion?: Maybe<Scalars['String']['output']>;
  subscriptionModel?: Maybe<NerdpackSubscriptionModel>;
  tags: Array<Maybe<Scalars['NerdpackTagName']['output']>>;
  teams?: Maybe<Array<Maybe<NerdpackTeamInfo>>>;
  version: Scalars['SemVer']['output'];
};

export type NerdpackVersionFilter = {
  fallback?: InputMaybe<NerdpackVersionFilterFallback>;
  tag?: InputMaybe<Scalars['NerdpackTagName']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['NerdpackTagName']['input']>>>;
  version?: InputMaybe<Scalars['SemVer']['input']>;
};

export type NerdpackVersionFilterFallback =
  | 'LATEST_SEMVER';

export type NerdpackVersionsResult = {
  __typename?: 'NerdpackVersionsResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<Maybe<NerdpackVersion>>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type NerdpackVisualizationMetadata = NerdpackArtifactMetadata & {
  __typename?: 'NerdpackVisualizationMetadata';
  configuration?: Maybe<Array<Scalars['NerdpackRawVisualizationMetadataConfiguration']['output']>>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id: Scalars['NerdpackFullArtifactId']['output'];
};

export type NetworkMonitoringActorStitchedFields = {
  __typename?: 'NetworkMonitoringActorStitchedFields';
  agentConfiguration?: Maybe<NetworkMonitoringAgentConfigurationWithData>;
  agentConfigurationRevisions?: Maybe<Array<NetworkMonitoringAgentConfigurationRevision>>;
  agentConfigurations?: Maybe<Array<Maybe<NetworkMonitoringAgentConfiguration>>>;
};


export type NetworkMonitoringActorStitchedFieldsAgentConfigurationArgs = {
  configurationId: Scalars['ID']['input'];
  revisionId?: InputMaybe<Scalars['Int']['input']>;
};


export type NetworkMonitoringActorStitchedFieldsAgentConfigurationRevisionsArgs = {
  filter: NetworkMonitoringAgentConfigurationRevisionFilterInput;
};


export type NetworkMonitoringActorStitchedFieldsAgentConfigurationsArgs = {
  filters?: InputMaybe<NetworkMonitoringAgentConfigurationFilterInput>;
};

export type NetworkMonitoringAgentConfiguration = {
  __typename?: 'NetworkMonitoringAgentConfiguration';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  revisionId: Scalars['Int']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type NetworkMonitoringAgentConfigurationFilterInput = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type NetworkMonitoringAgentConfigurationRevision = {
  __typename?: 'NetworkMonitoringAgentConfigurationRevision';
  configId: Scalars['ID']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  revisionId: Scalars['Int']['output'];
  userId: Scalars['Int']['output'];
};

export type NetworkMonitoringAgentConfigurationRevisionFilterInput = {
  configurationId: Scalars['ID']['input'];
  revisionIds?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NetworkMonitoringAgentConfigurationWithData = {
  __typename?: 'NetworkMonitoringAgentConfigurationWithData';
  accountId: Scalars['Int']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  rawConfiguration: Scalars['NetworkMonitoringRawConfiguration']['output'];
  revisionId: Scalars['Int']['output'];
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type NetworkMonitoringCreateAgentConfigurationInput = {
  accountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  rawConfiguration: Scalars['NetworkMonitoringRawConfiguration']['input'];
};

export type NetworkMonitoringPublishAgentConfigurationResponse = {
  __typename?: 'NetworkMonitoringPublishAgentConfigurationResponse';
  createdDeviceIds?: Maybe<Array<Scalars['ID']['output']>>;
  deletedDeviceIds?: Maybe<Array<Scalars['ID']['output']>>;
  skippedDeviceKeys?: Maybe<Array<Scalars['ID']['output']>>;
  updatedDeviceIds?: Maybe<Array<Scalars['ID']['output']>>;
};

export type NetworkMonitoringUpdateAgentConfigurationInput = {
  id: Scalars['ID']['input'];
  rawConfiguration: Scalars['NetworkMonitoringRawConfiguration']['input'];
};

export type NewRelicServiceHealthActorStitchedFields = {
  __typename?: 'NewRelicServiceHealthActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  currentStatus?: Maybe<NewRelicServiceHealthCurrentStatus>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  historicalStatus?: Maybe<Array<Maybe<NewRelicServiceHealthHistoricalStatus>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  statusNotificationConfigurations?: Maybe<Array<Maybe<NewRelicServiceHealthNotificationConfiguration>>>;
};


export type NewRelicServiceHealthActorStitchedFieldsCurrentStatusArgs = {
  accountIds: Array<Scalars['Int']['input']>;
};


export type NewRelicServiceHealthActorStitchedFieldsHistoricalStatusArgs = {
  accountIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  queryWindow?: InputMaybe<DateTimeWindowInput>;
};

export type NewRelicServiceHealthCurrentStatus = {
  __typename?: 'NewRelicServiceHealthCurrentStatus';
  /** @deprecated This field is experimental and subject to breaking changes. */
  services?: Maybe<Array<Maybe<NewRelicServiceHealthService>>>;
};

export type NewRelicServiceHealthHistoricalImpact = {
  __typename?: 'NewRelicServiceHealthHistoricalImpact';
  /** @deprecated This field is experimental and subject to breaking changes. */
  services?: Maybe<Array<Maybe<NewRelicServiceHealthHistoricalService>>>;
};

export type NewRelicServiceHealthHistoricalService = {
  __typename?: 'NewRelicServiceHealthHistoricalService';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  status?: Maybe<NewRelicServiceHealthHistoricalStatusEntry>;
};

export type NewRelicServiceHealthHistoricalStatus = {
  __typename?: 'NewRelicServiceHealthHistoricalStatus';
  /** @deprecated This field is experimental and subject to breaking changes. */
  endedImpact?: Maybe<NewRelicServiceHealthHistoricalImpact>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  newImpact?: Maybe<NewRelicServiceHealthHistoricalImpact>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  ongoingImpact?: Maybe<NewRelicServiceHealthHistoricalImpact>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['String']['output'];
};

export type NewRelicServiceHealthHistoricalStatusEntry = {
  __typename?: 'NewRelicServiceHealthHistoricalStatusEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  impactedAccounts?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type NewRelicServiceHealthMessage = {
  __typename?: 'NewRelicServiceHealthMessage';
  /** @deprecated This field is experimental and subject to breaking changes. */
  text: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['String']['output'];
};

export type NewRelicServiceHealthNotificationConfiguration = {
  __typename?: 'NewRelicServiceHealthNotificationConfiguration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accounts: Array<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  active: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  email: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  services: Array<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  uuid: Scalars['String']['output'];
};

export type NewRelicServiceHealthService = {
  __typename?: 'NewRelicServiceHealthService';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  status: NewRelicServiceHealthStatusEntry;
};

export type NewRelicServiceHealthStatusEntry = {
  __typename?: 'NewRelicServiceHealthStatusEntry';
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  impactedAccounts: Array<Maybe<Scalars['Int']['output']>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  messages?: Maybe<Array<Maybe<NewRelicServiceHealthMessage>>>;
};

export type NotificationAuthenticationGenerateTokenResponse = {
  __typename?: 'NotificationAuthenticationGenerateTokenResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  status: Scalars['SecureValue']['output'];
};

export type Nr1CatalogActorStitchedFields = {
  __typename?: 'Nr1CatalogActorStitchedFields';
  alertPolicyTemplate?: Maybe<Nr1CatalogAlertPolicyTemplate>;
  alertPolicyTemplates?: Maybe<Nr1CatalogAlertPolicyTemplatesListing>;
  categories?: Maybe<Array<Nr1CatalogCategory>>;
  dashboardTemplate?: Maybe<Nr1CatalogDashboardTemplate>;
  dashboardTemplates?: Maybe<Nr1CatalogDashboardTemplatesListing>;
  dataSource?: Maybe<Nr1CatalogDataSource>;
  nerdpack?: Maybe<Nr1CatalogNerdpack>;
  nerdpacks?: Maybe<Array<Nr1CatalogNerdpack>>;
  quickstart?: Maybe<Nr1CatalogQuickstart>;
  quickstarts?: Maybe<Nr1CatalogQuickstartsListing>;
  search?: Maybe<Nr1CatalogSearchResponse>;
};


export type Nr1CatalogActorStitchedFieldsAlertPolicyTemplateArgs = {
  id: Scalars['ID']['input'];
};


export type Nr1CatalogActorStitchedFieldsDashboardTemplateArgs = {
  id: Scalars['ID']['input'];
};


export type Nr1CatalogActorStitchedFieldsDataSourceArgs = {
  id: Scalars['ID']['input'];
};


export type Nr1CatalogActorStitchedFieldsNerdpackArgs = {
  id: Scalars['ID']['input'];
};


export type Nr1CatalogActorStitchedFieldsQuickstartArgs = {
  id: Scalars['ID']['input'];
};


export type Nr1CatalogActorStitchedFieldsQuickstartsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};


export type Nr1CatalogActorStitchedFieldsSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<Nr1CatalogSearchFilter>;
  query?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Nr1CatalogSearchSortOption>;
};

export type Nr1CatalogAlertConditionOutline = {
  __typename?: 'Nr1CatalogAlertConditionOutline';
  alertConditionTemplate: Nr1CatalogAlertConditionTemplate;
  id: Scalars['ID']['output'];
};

export type Nr1CatalogAlertConditionTemplate = {
  __typename?: 'Nr1CatalogAlertConditionTemplate';
  id: Scalars['ID']['output'];
  metadata: Nr1CatalogAlertConditionTemplateMetadata;
  sourceUrl?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogAlertConditionTemplateMetadata = {
  __typename?: 'Nr1CatalogAlertConditionTemplateMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  type: Nr1CatalogAlertConditionType;
};

export type Nr1CatalogAlertConditionType =
  | 'BASELINE'
  | 'STATIC';

export type Nr1CatalogAlertPolicyOutline = {
  __typename?: 'Nr1CatalogAlertPolicyOutline';
  conditions?: Maybe<Array<Nr1CatalogAlertConditionOutline>>;
  id: Scalars['ID']['output'];
};

export type Nr1CatalogAlertPolicyTemplate = {
  __typename?: 'Nr1CatalogAlertPolicyTemplate';
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogAlertPolicyTemplateMetadata>;
  supportLevel: Nr1CatalogSupportLevel;
  updatedAt: Scalars['DateTime']['output'];
};

export type Nr1CatalogAlertPolicyTemplateMetadata = {
  __typename?: 'Nr1CatalogAlertPolicyTemplateMetadata';
  authors: Array<Nr1CatalogAuthor>;
  categories: Array<Nr1CatalogCategory>;
  categoryTerms: Array<Scalars['String']['output']>;
  conditions: Array<Nr1CatalogAlertConditionTemplate>;
  displayName?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Nr1CatalogIcon>;
  requiredDataSources: Array<Nr1CatalogDataSource>;
};

export type Nr1CatalogAlertPolicyTemplatesListing = {
  __typename?: 'Nr1CatalogAlertPolicyTemplatesListing';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<Nr1CatalogAlertPolicyTemplate>;
  totalCount: Scalars['Int']['output'];
};

export type Nr1CatalogAllSupportedEntityTypes = Nr1CatalogSupportedEntityTypes & {
  __typename?: 'Nr1CatalogAllSupportedEntityTypes';
  mode: Nr1CatalogSupportedEntityTypesMode;
};

export type Nr1CatalogAuthor = {
  __typename?: 'Nr1CatalogAuthor';
  name: Scalars['String']['output'];
};

export type Nr1CatalogAuthorInput = {
  name: Scalars['String']['input'];
};

export type Nr1CatalogCategory = {
  __typename?: 'Nr1CatalogCategory';
  displayName: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  terms: Array<Scalars['String']['output']>;
};

export type Nr1CatalogCategoryFacet = {
  __typename?: 'Nr1CatalogCategoryFacet';
  count: Scalars['Int']['output'];
  displayName: Scalars['String']['output'];
};

export type Nr1CatalogCommunityContactChannel = {
  __typename?: 'Nr1CatalogCommunityContactChannel';
  url: Scalars['String']['output'];
};

export type Nr1CatalogCommunityContactChannelInput = {
  url: Scalars['String']['input'];
};

export type Nr1CatalogComponentFacet = {
  __typename?: 'Nr1CatalogComponentFacet';
  component: Nr1CatalogSearchComponentType;
  count: Scalars['Int']['output'];
};

export type Nr1CatalogCreateQuickstartResult = {
  __typename?: 'Nr1CatalogCreateQuickstartResult';
  quickstart?: Maybe<Nr1CatalogQuickstart>;
};

export type Nr1CatalogDashboardOutline = {
  __typename?: 'Nr1CatalogDashboardOutline';
  dashboardGuid: Scalars['EntityGuid']['output'];
};

export type Nr1CatalogDashboardTemplate = {
  __typename?: 'Nr1CatalogDashboardTemplate';
  id: Scalars['ID']['output'];
  metadata: Nr1CatalogDashboardTemplateMetadata;
  sourceUrl?: Maybe<Scalars['String']['output']>;
  supportLevel: Nr1CatalogSupportLevel;
  updatedAt: Scalars['DateTime']['output'];
};

export type Nr1CatalogDashboardTemplateMetadata = {
  __typename?: 'Nr1CatalogDashboardTemplateMetadata';
  authors: Array<Nr1CatalogAuthor>;
  categories: Array<Nr1CatalogCategory>;
  categoryTerms: Array<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  previews: Array<Nr1CatalogPreview>;
  requiredDataSources: Array<Nr1CatalogDataSource>;
};

export type Nr1CatalogDashboardTemplatesListing = {
  __typename?: 'Nr1CatalogDashboardTemplatesListing';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<Nr1CatalogDashboardTemplate>;
  totalCount: Scalars['Int']['output'];
};

export type Nr1CatalogDataSource = {
  __typename?: 'Nr1CatalogDataSource';
  id: Scalars['ID']['output'];
  metadata: Nr1CatalogDataSourceMetadata;
};

export type Nr1CatalogDataSourceInstall = {
  __typename?: 'Nr1CatalogDataSourceInstall';
  fallback?: Maybe<Nr1CatalogDataSourceInstallDirective>;
  primary: Nr1CatalogDataSourceInstallDirective;
};

export type Nr1CatalogDataSourceInstallDirective = Nr1CatalogLinkInstallDirective | Nr1CatalogNerdletInstallDirective;

export type Nr1CatalogDataSourceInstallInput = {
  fallback?: InputMaybe<Nr1CatalogInstallDirectiveInput>;
  primary: Nr1CatalogInstallDirectiveInput;
};

export type Nr1CatalogDataSourceMetadata = {
  __typename?: 'Nr1CatalogDataSourceMetadata';
  autoInstallAlertPolicyTemplates: Array<Nr1CatalogAlertPolicyTemplate>;
  autoInstallDashboardTemplates: Array<Nr1CatalogDashboardTemplate>;
  categories: Array<Nr1CatalogCategory>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Nr1CatalogIcon>;
  /**
   * @deprecated This field is no longer supported. Please use icon instead.
   *
   * If using the icon name to map the icon for an icon library, consider
   * matching against the data source ID instead.
   *
   */
  iconName?: Maybe<Scalars['String']['output']>;
  install: Nr1CatalogDataSourceInstall;
  /** @deprecated This field is no longer supported. Please use install.primary instead */
  installDirective: Nr1CatalogInstallPlanDirective;
  keywords: Array<Scalars['String']['output']>;
};

export type Nr1CatalogDataSourceMetadataInput = {
  categoryTerms?: InputMaybe<Array<Scalars['String']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName: Scalars['String']['input'];
  icon: Scalars['String']['input'];
  install: Nr1CatalogDataSourceInstallInput;
  keywords?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type Nr1CatalogEmailContactChannel = {
  __typename?: 'Nr1CatalogEmailContactChannel';
  address: Scalars['String']['output'];
};

export type Nr1CatalogEmailContactChannelInput = {
  address: Scalars['String']['input'];
};

export type Nr1CatalogIcon = {
  __typename?: 'Nr1CatalogIcon';
  url: Scalars['String']['output'];
};

export type Nr1CatalogInstallAlertPolicyTemplateResult = {
  __typename?: 'Nr1CatalogInstallAlertPolicyTemplateResult';
  alertPolicyTemplate: Nr1CatalogAlertPolicyTemplate;
  createdAlertPolicy: Nr1CatalogAlertPolicyOutline;
};

export type Nr1CatalogInstallDashboardTemplateResult = {
  __typename?: 'Nr1CatalogInstallDashboardTemplateResult';
  createdDashboard: Nr1CatalogDashboardOutline;
  dashboardTemplate: Nr1CatalogDashboardTemplate;
};

export type Nr1CatalogInstallDirectiveInput = {
  link?: InputMaybe<Nr1CatalogLinkInstallDirectiveInput>;
  nerdlet?: InputMaybe<Nr1CatalogNerdletInstallDirectiveInput>;
};

export type Nr1CatalogInstallPlan = Nr1CatalogInstaller & {
  __typename?: 'Nr1CatalogInstallPlan';
  steps: Array<Nr1CatalogInstallPlanStep>;
  type: Nr1CatalogInstallerType;
};

export type Nr1CatalogInstallPlanDestination =
  | 'APPLICATION'
  | 'CLOUD'
  | 'HOST'
  | 'KUBERNETES'
  | 'UNKNOWN';

export type Nr1CatalogInstallPlanDirective = {
  mode: Nr1CatalogInstallPlanDirectiveMode;
};

export type Nr1CatalogInstallPlanDirectiveInput = {
  destination?: InputMaybe<Scalars['String']['input']>;
  link?: InputMaybe<Nr1CatalogLinkDirectiveInput>;
  mode?: InputMaybe<Nr1CatalogInstallPlanDirectiveMode>;
  nerdlet?: InputMaybe<Nr1CatalogNerdletDirectiveInput>;
  targeted?: InputMaybe<Nr1CatalogTargetedDirectiveInput>;
};

export type Nr1CatalogInstallPlanDirectiveMode =
  | 'LINK'
  | 'NERDLET'
  | 'TARGETED';

export type Nr1CatalogInstallPlanOperatingSystem =
  | 'DARWIN'
  | 'LINUX'
  | 'WINDOWS';

export type Nr1CatalogInstallPlanStep = {
  __typename?: 'Nr1CatalogInstallPlanStep';
  description?: Maybe<Scalars['String']['output']>;
  displayName: Scalars['String']['output'];
  fallback?: Maybe<Nr1CatalogInstallPlanDirective>;
  heading: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  primary: Nr1CatalogInstallPlanDirective;
  target: Nr1CatalogInstallPlanTarget;
};

export type Nr1CatalogInstallPlanStepInput = {
  description: Scalars['String']['input'];
  displayName: Scalars['String']['input'];
  fallback?: InputMaybe<Nr1CatalogInstallPlanDirectiveInput>;
  heading: Scalars['String']['input'];
  id: Scalars['ID']['input'];
  primary: Nr1CatalogInstallPlanDirectiveInput;
  target: Nr1CatalogInstallPlanTargetInput;
};

export type Nr1CatalogInstallPlanTarget = {
  __typename?: 'Nr1CatalogInstallPlanTarget';
  destination: Nr1CatalogInstallPlanDestination;
  os: Array<Nr1CatalogInstallPlanOperatingSystem>;
  type: Nr1CatalogInstallPlanTargetType;
};

export type Nr1CatalogInstallPlanTargetInput = {
  destination: Nr1CatalogInstallPlanDestination;
  os?: InputMaybe<Array<Nr1CatalogInstallPlanOperatingSystem>>;
  type: Nr1CatalogInstallPlanTargetType;
};

export type Nr1CatalogInstallPlanTargetType =
  | 'AGENT'
  | 'INTEGRATION'
  | 'ON_HOST_INTEGRATION'
  | 'UNKNOWN';

export type Nr1CatalogInstaller = {
  type: Nr1CatalogInstallerType;
};

export type Nr1CatalogInstallerType =
  | 'INSTALL_PLAN';

export type Nr1CatalogIssuesContactChannel = {
  __typename?: 'Nr1CatalogIssuesContactChannel';
  url: Scalars['String']['output'];
};

export type Nr1CatalogIssuesContactChannelInput = {
  url: Scalars['String']['input'];
};

export type Nr1CatalogLauncher = Nr1CatalogNerdpackItem & {
  __typename?: 'Nr1CatalogLauncher';
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogLauncherMetadata>;
};

export type Nr1CatalogLauncherMetadata = Nr1CatalogNerdpackItemMetadata & {
  __typename?: 'Nr1CatalogLauncherMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Nr1CatalogIcon>;
  previews: Array<Nr1CatalogPreview>;
};

export type Nr1CatalogLinkDirectiveInput = {
  url: Scalars['String']['input'];
};

export type Nr1CatalogLinkInstallDirective = {
  __typename?: 'Nr1CatalogLinkInstallDirective';
  url: Scalars['String']['output'];
};

export type Nr1CatalogLinkInstallDirectiveInput = {
  url: Scalars['String']['input'];
};

export type Nr1CatalogLinkInstallPlanDirective = Nr1CatalogInstallPlanDirective & {
  __typename?: 'Nr1CatalogLinkInstallPlanDirective';
  mode: Nr1CatalogInstallPlanDirectiveMode;
  url: Scalars['String']['output'];
};

export type Nr1CatalogMutationResult =
  | 'ERROR'
  | 'OK';

export type Nr1CatalogNerdlet = Nr1CatalogNerdpackItem & {
  __typename?: 'Nr1CatalogNerdlet';
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogNerdletMetadata>;
};

export type Nr1CatalogNerdletDirectiveInput = {
  nerdletId: Scalars['String']['input'];
  nerdletState?: InputMaybe<Scalars['Nr1CatalogRawNerdletState']['input']>;
};

export type Nr1CatalogNerdletInstallDirective = {
  __typename?: 'Nr1CatalogNerdletInstallDirective';
  nerdletId: Scalars['ID']['output'];
  nerdletState?: Maybe<Scalars['Nr1CatalogRawNerdletState']['output']>;
  requiresAccount: Scalars['Boolean']['output'];
};

export type Nr1CatalogNerdletInstallDirectiveInput = {
  nerdletId: Scalars['String']['input'];
  nerdletState?: InputMaybe<Scalars['Nr1CatalogRawNerdletState']['input']>;
  requiresAccount: Scalars['Boolean']['input'];
};

export type Nr1CatalogNerdletInstallPlanDirective = Nr1CatalogInstallPlanDirective & {
  __typename?: 'Nr1CatalogNerdletInstallPlanDirective';
  mode: Nr1CatalogInstallPlanDirectiveMode;
  nerdletId: Scalars['ID']['output'];
  nerdletState?: Maybe<Scalars['Nr1CatalogRawNerdletState']['output']>;
  requiresAccount: Scalars['Boolean']['output'];
};

export type Nr1CatalogNerdletMetadata = Nr1CatalogNerdpackItemMetadata & {
  __typename?: 'Nr1CatalogNerdletMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  previews: Array<Nr1CatalogPreview>;
  supportedEntityTypes?: Maybe<Nr1CatalogSupportedEntityTypes>;
};

export type Nr1CatalogNerdpack = {
  __typename?: 'Nr1CatalogNerdpack';
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogNerdpackMetadata>;
  visibility: Nr1CatalogNerdpackVisibility;
};

export type Nr1CatalogNerdpackItem = {
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogNerdpackItemMetadata>;
};

export type Nr1CatalogNerdpackItemMetadata = {
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  previews: Array<Nr1CatalogPreview>;
};

export type Nr1CatalogNerdpackMetadata = {
  __typename?: 'Nr1CatalogNerdpackMetadata';
  additionalInfo?: Maybe<Scalars['String']['output']>;
  categories: Array<Nr1CatalogCategory>;
  categoryTerms: Array<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  details?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  documentation?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Nr1CatalogIcon>;
  includedArtifactTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  keywords: Array<Scalars['String']['output']>;
  nerdpackItems: Array<Nr1CatalogNerdpackItem>;
  previews: Array<Nr1CatalogPreview>;
  publishDate?: Maybe<Scalars['DateTime']['output']>;
  /** @deprecated This field is no longer supported. Please use publishDate instead. */
  releaseDate?: Maybe<Scalars['DateTime']['output']>;
  repository?: Maybe<Scalars['String']['output']>;
  support: Nr1CatalogSupportChannels;
  tagline?: Maybe<Scalars['String']['output']>;
  version: Scalars['SemVer']['output'];
  whatsNew?: Maybe<Nr1CatalogReleaseNote>;
};


export type Nr1CatalogNerdpackMetadataAdditionalInfoArgs = {
  format?: InputMaybe<Nr1CatalogRenderFormat>;
};


export type Nr1CatalogNerdpackMetadataDocumentationArgs = {
  format?: InputMaybe<Nr1CatalogRenderFormat>;
};

export type Nr1CatalogNerdpackVisibility =
  | 'GLOBAL'
  | 'OWNER_AND_ALLOWED';

export type Nr1CatalogNoSupportedEntityTypes = Nr1CatalogSupportedEntityTypes & {
  __typename?: 'Nr1CatalogNoSupportedEntityTypes';
  mode: Nr1CatalogSupportedEntityTypesMode;
};

export type Nr1CatalogPreview = {
  url: Scalars['String']['output'];
};

export type Nr1CatalogQuickstart = {
  __typename?: 'Nr1CatalogQuickstart';
  featured: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogQuickstartMetadata>;
  sourceUrl?: Maybe<Scalars['String']['output']>;
  supportLevel: Nr1CatalogSupportLevel;
};

export type Nr1CatalogQuickstartAlert = Nr1CatalogQuickstartComponent & {
  __typename?: 'Nr1CatalogQuickstartAlert';
  /** @deprecated This field is no longer supported. Please use Nr1CatalogQuickstartAlertCondition instead. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is no longer supported. Please use Nr1CatalogQuickstartAlertCondition instead. */
  metadata: Nr1CatalogQuickstartAlertMetadata;
};

export type Nr1CatalogQuickstartAlertCondition = Nr1CatalogQuickstartComponent & {
  __typename?: 'Nr1CatalogQuickstartAlertCondition';
  id: Scalars['ID']['output'];
  metadata: Nr1CatalogQuickstartAlertConditionMetadata;
  sourceUrl?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogQuickstartAlertConditionMetadata = Nr1CatalogQuickstartComponentMetadata & {
  __typename?: 'Nr1CatalogQuickstartAlertConditionMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  type: Nr1CatalogQuickstartAlertConditionType;
};

export type Nr1CatalogQuickstartAlertConditionType =
  | 'BASELINE'
  | 'OUTLIER'
  | 'STATIC';

export type Nr1CatalogQuickstartAlertMetadata = Nr1CatalogQuickstartComponentMetadata & {
  __typename?: 'Nr1CatalogQuickstartAlertMetadata';
  /** @deprecated This field is no longer supported. Please use Nr1CatalogQuickstartAlertCondition instead. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is no longer supported. Please use Nr1CatalogQuickstartAlertCondition instead. */
  displayName?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogQuickstartComponent = {
  metadata: Nr1CatalogQuickstartComponentMetadata;
};

export type Nr1CatalogQuickstartComponentMetadata = {
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogQuickstartDashboard = Nr1CatalogQuickstartComponent & {
  __typename?: 'Nr1CatalogQuickstartDashboard';
  id: Scalars['ID']['output'];
  metadata: Nr1CatalogQuickstartDashboardMetadata;
  sourceUrl?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogQuickstartDashboardMetadata = Nr1CatalogQuickstartComponentMetadata & {
  __typename?: 'Nr1CatalogQuickstartDashboardMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  previews: Array<Nr1CatalogPreview>;
};

export type Nr1CatalogQuickstartDocumentation = Nr1CatalogQuickstartComponent & {
  __typename?: 'Nr1CatalogQuickstartDocumentation';
  metadata: Nr1CatalogQuickstartDocumentationMetadata;
};

export type Nr1CatalogQuickstartDocumentationMetadata = Nr1CatalogQuickstartComponentMetadata & {
  __typename?: 'Nr1CatalogQuickstartDocumentationMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type Nr1CatalogQuickstartInstallPlan = Nr1CatalogQuickstartComponent & {
  __typename?: 'Nr1CatalogQuickstartInstallPlan';
  /** @deprecated This field is no longer supported. Please use installer instead. */
  metadata: Nr1CatalogQuickstartInstallPlanMetadata;
};

export type Nr1CatalogQuickstartInstallPlanMetadata = Nr1CatalogQuickstartComponentMetadata & {
  __typename?: 'Nr1CatalogQuickstartInstallPlanMetadata';
  /** @deprecated This field is no longer supported. Please use installer instead. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is no longer supported. Please use installer instead. */
  displayName?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogQuickstartMetadata = {
  __typename?: 'Nr1CatalogQuickstartMetadata';
  authors: Array<Nr1CatalogAuthor>;
  categories: Array<Nr1CatalogCategory>;
  categoryTerms: Array<Scalars['String']['output']>;
  dataSources: Array<Nr1CatalogDataSource>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Nr1CatalogIcon>;
  /** @deprecated This field is in a deprecation period. Please refer to `dataSources` for how a quickstart is installed. */
  installer?: Maybe<Nr1CatalogInstaller>;
  keywords: Array<Scalars['String']['output']>;
  quickstartComponents: Array<Nr1CatalogQuickstartComponent>;
  slug: Scalars['String']['output'];
  summary?: Maybe<Scalars['String']['output']>;
};

export type Nr1CatalogQuickstartMetadataAlertConditionInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  displayName: Scalars['String']['input'];
  rawConfiguration: Scalars['Nr1CatalogRawConfiguration']['input'];
  sourceUrl?: InputMaybe<Scalars['String']['input']>;
  type: Nr1CatalogQuickstartAlertConditionType;
};

export type Nr1CatalogQuickstartMetadataDashboardInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  displayName: Scalars['String']['input'];
  rawConfiguration: Scalars['Nr1CatalogRawConfiguration']['input'];
  screenshots?: InputMaybe<Array<Nr1CatalogScreenshotInput>>;
  sourceUrl?: InputMaybe<Scalars['String']['input']>;
};

export type Nr1CatalogQuickstartMetadataDocumentationInput = {
  description: Scalars['String']['input'];
  displayName: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type Nr1CatalogQuickstartMetadataInput = {
  alertConditions?: InputMaybe<Array<Nr1CatalogQuickstartMetadataAlertConditionInput>>;
  authors: Array<Nr1CatalogAuthorInput>;
  categoryTerms?: InputMaybe<Array<Scalars['String']['input']>>;
  dashboards?: InputMaybe<Array<Nr1CatalogQuickstartMetadataDashboardInput>>;
  dataSourceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  description: Scalars['String']['input'];
  displayName: Scalars['String']['input'];
  documentation?: InputMaybe<Array<Nr1CatalogQuickstartMetadataDocumentationInput>>;
  icon: Scalars['String']['input'];
  installPlanStepIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  keywords?: InputMaybe<Array<Scalars['String']['input']>>;
  slug?: InputMaybe<Scalars['String']['input']>;
  sourceUrl?: InputMaybe<Scalars['String']['input']>;
  summary: Scalars['String']['input'];
  supportLevel?: InputMaybe<Nr1CatalogSupportLevel>;
};

export type Nr1CatalogQuickstartsListing = {
  __typename?: 'Nr1CatalogQuickstartsListing';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<Nr1CatalogQuickstart>;
  totalCount: Scalars['Int']['output'];
};

export type Nr1CatalogReleaseNote = {
  __typename?: 'Nr1CatalogReleaseNote';
  changes: Scalars['String']['output'];
  version: Scalars['SemVer']['output'];
};

export type Nr1CatalogRenderFormat =
  | 'MARKDOWN';

export type Nr1CatalogScreenshot = Nr1CatalogPreview & {
  __typename?: 'Nr1CatalogScreenshot';
  url: Scalars['String']['output'];
};

export type Nr1CatalogScreenshotInput = {
  url: Scalars['String']['input'];
};

export type Nr1CatalogSearchComponentType =
  | 'ALERTS'
  | 'APPS'
  | 'DASHBOARDS'
  | 'DATA_SOURCES'
  | 'VISUALIZATIONS';

export type Nr1CatalogSearchFacets = {
  __typename?: 'Nr1CatalogSearchFacets';
  categories: Array<Nr1CatalogCategoryFacet>;
  components: Array<Nr1CatalogComponentFacet>;
  featured: Scalars['Int']['output'];
  types: Array<Nr1CatalogSearchResultTypeFacet>;
};

export type Nr1CatalogSearchFilter = {
  categories?: InputMaybe<Array<Scalars['String']['input']>>;
  category?: InputMaybe<Scalars['String']['input']>;
  components?: InputMaybe<Array<Nr1CatalogSearchComponentType>>;
  keywords?: InputMaybe<Array<Scalars['String']['input']>>;
  recipeNames?: InputMaybe<Array<Scalars['String']['input']>>;
  types?: InputMaybe<Array<Nr1CatalogSearchResultType>>;
};

export type Nr1CatalogSearchResponse = {
  __typename?: 'Nr1CatalogSearchResponse';
  facets: Nr1CatalogSearchFacets;
  nextCursor?: Maybe<Scalars['String']['output']>;
  results: Array<Nr1CatalogSearchResult>;
  totalCount: Scalars['Int']['output'];
};

export type Nr1CatalogSearchResult = Nr1CatalogAlertPolicyTemplate | Nr1CatalogDashboardTemplate | Nr1CatalogDataSource | Nr1CatalogNerdpack | Nr1CatalogQuickstart;

export type Nr1CatalogSearchResultType =
  | 'ALERT_POLICY_TEMPLATE'
  | 'DASHBOARD_TEMPLATE'
  | 'DATA_SOURCE'
  | 'NERDPACK'
  | 'QUICKSTART';

export type Nr1CatalogSearchResultTypeFacet = {
  __typename?: 'Nr1CatalogSearchResultTypeFacet';
  count: Scalars['Int']['output'];
  type: Nr1CatalogSearchResultType;
};

export type Nr1CatalogSearchSortOption =
  | 'ALPHABETICAL'
  | 'POPULARITY'
  | 'RELEVANCE'
  | 'REVERSE_ALPHABETICAL';

export type Nr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSourceResult = {
  __typename?: 'Nr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSourceResult';
  dataSource?: Maybe<Nr1CatalogDataSource>;
};

export type Nr1CatalogSetAutoInstallDashboardTemplatesForDataSourceResult = {
  __typename?: 'Nr1CatalogSetAutoInstallDashboardTemplatesForDataSourceResult';
  dataSource?: Maybe<Nr1CatalogDataSource>;
};

export type Nr1CatalogSetRequiredDataSourcesForAlertPolicyTemplateResult = {
  __typename?: 'Nr1CatalogSetRequiredDataSourcesForAlertPolicyTemplateResult';
  alertPolicyTemplate?: Maybe<Nr1CatalogAlertPolicyTemplate>;
};

export type Nr1CatalogSetRequiredDataSourcesForDashboardTemplateResult = {
  __typename?: 'Nr1CatalogSetRequiredDataSourcesForDashboardTemplateResult';
  dashboardTemplate?: Maybe<Nr1CatalogDashboardTemplate>;
};

export type Nr1CatalogSpecificSupportedEntityTypes = Nr1CatalogSupportedEntityTypes & {
  __typename?: 'Nr1CatalogSpecificSupportedEntityTypes';
  entityTypes: Array<DomainType>;
  mode: Nr1CatalogSupportedEntityTypesMode;
};

export type Nr1CatalogSubmitDataSourceResult = {
  __typename?: 'Nr1CatalogSubmitDataSourceResult';
  dataSource?: Maybe<Nr1CatalogDataSource>;
};

export type Nr1CatalogSubmitInstallPlanStepResult = {
  __typename?: 'Nr1CatalogSubmitInstallPlanStepResult';
  installPlanStep?: Maybe<Nr1CatalogInstallPlanStep>;
};

export type Nr1CatalogSubmitMetadataError = {
  __typename?: 'Nr1CatalogSubmitMetadataError';
  description: Scalars['String']['output'];
  field?: Maybe<Array<Scalars['String']['output']>>;
  type: Nr1CatalogSubmitMetadataErrorType;
};

export type Nr1CatalogSubmitMetadataErrorType =
  | 'NERDPACK_NOT_FOUND'
  | 'SERVER_ERROR'
  | 'UNAUTHORIZED'
  | 'UNSUPPORTED_TYPE'
  | 'VALIDATION_FAILED';

export type Nr1CatalogSubmitMetadataInput = {
  additionalInfo?: InputMaybe<Scalars['String']['input']>;
  categoryTerms?: InputMaybe<Array<Scalars['String']['input']>>;
  details?: InputMaybe<Scalars['String']['input']>;
  documentation?: InputMaybe<Scalars['String']['input']>;
  keywords?: InputMaybe<Array<Scalars['String']['input']>>;
  repository?: InputMaybe<Scalars['String']['input']>;
  support?: InputMaybe<Nr1CatalogSupportInput>;
  tagline?: InputMaybe<Scalars['String']['input']>;
  version: Scalars['SemVer']['input'];
  whatsNew?: InputMaybe<Scalars['String']['input']>;
};

export type Nr1CatalogSubmitMetadataResult = {
  __typename?: 'Nr1CatalogSubmitMetadataResult';
  errors?: Maybe<Array<Nr1CatalogSubmitMetadataError>>;
  nerdpack?: Maybe<Nr1CatalogNerdpack>;
  result: Nr1CatalogMutationResult;
};

export type Nr1CatalogSubmitQuickstartResult = {
  __typename?: 'Nr1CatalogSubmitQuickstartResult';
  quickstart?: Maybe<Nr1CatalogQuickstart>;
};

export type Nr1CatalogSupportChannels = {
  __typename?: 'Nr1CatalogSupportChannels';
  community?: Maybe<Nr1CatalogCommunityContactChannel>;
  email?: Maybe<Nr1CatalogEmailContactChannel>;
  issues?: Maybe<Nr1CatalogIssuesContactChannel>;
};

export type Nr1CatalogSupportInput = {
  community?: InputMaybe<Nr1CatalogCommunityContactChannelInput>;
  email?: InputMaybe<Nr1CatalogEmailContactChannelInput>;
  issues?: InputMaybe<Nr1CatalogIssuesContactChannelInput>;
};

export type Nr1CatalogSupportLevel =
  | 'COMMUNITY'
  | 'ENTERPRISE'
  | 'NEW_RELIC'
  | 'VERIFIED';

export type Nr1CatalogSupportedEntityTypes = {
  mode: Nr1CatalogSupportedEntityTypesMode;
};

export type Nr1CatalogSupportedEntityTypesMode =
  | 'ALL'
  | 'NONE'
  | 'SPECIFIC';

export type Nr1CatalogTargetedDirectiveInput = {
  recipeName: Scalars['String']['input'];
};

export type Nr1CatalogTargetedInstallPlanDirective = Nr1CatalogInstallPlanDirective & {
  __typename?: 'Nr1CatalogTargetedInstallPlanDirective';
  mode: Nr1CatalogInstallPlanDirectiveMode;
  recipeName: Scalars['String']['output'];
};

export type Nr1CatalogUpdateQuickstartResult = {
  __typename?: 'Nr1CatalogUpdateQuickstartResult';
  quickstart?: Maybe<Nr1CatalogQuickstart>;
};

export type Nr1CatalogVisualization = Nr1CatalogNerdpackItem & {
  __typename?: 'Nr1CatalogVisualization';
  id: Scalars['ID']['output'];
  metadata?: Maybe<Nr1CatalogVisualizationMetadata>;
};

export type Nr1CatalogVisualizationMetadata = Nr1CatalogNerdpackItemMetadata & {
  __typename?: 'Nr1CatalogVisualizationMetadata';
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  previews: Array<Nr1CatalogPreview>;
};

export type NrPlatformQueryNamespace = {
  __typename?: 'NrPlatformQueryNamespace';
  addressAutocomplete?: Maybe<AddressAutocompleteNrPlatformStitchedFields>;
  nerdGraph?: Maybe<NerdGraph>;
  nerdStoreCollections?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  provisioning?: Maybe<ProvisioningNrPlatformStitchedFields>;
  serviceDiscovery?: Maybe<ServiceDiscoveryNamespace>;
};


export type NrPlatformQueryNamespaceNerdStoreCollectionsArgs = {
  scope: NerdStoreScopeInput;
};

export type NrdbMetadata = {
  __typename?: 'NrdbMetadata';
  eventTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  facets?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  messages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  timeWindow?: Maybe<NrdbMetadataTimeWindow>;
};

export type NrdbMetadataTimeWindow = {
  __typename?: 'NrdbMetadataTimeWindow';
  begin?: Maybe<Scalars['EpochMilliseconds']['output']>;
  compareWith?: Maybe<Scalars['String']['output']>;
  end?: Maybe<Scalars['EpochMilliseconds']['output']>;
  since?: Maybe<Scalars['String']['output']>;
  until?: Maybe<Scalars['String']['output']>;
};

export type NrdbQueryProgress = {
  __typename?: 'NrdbQueryProgress';
  completed?: Maybe<Scalars['Boolean']['output']>;
  queryId?: Maybe<Scalars['ID']['output']>;
  resultExpiration?: Maybe<Scalars['Seconds']['output']>;
  retryAfter?: Maybe<Scalars['Seconds']['output']>;
  retryDeadline?: Maybe<Scalars['Seconds']['output']>;
};

export type NrdbResultContainer = {
  __typename?: 'NrdbResultContainer';
  currentResults?: Maybe<Array<Maybe<Scalars['NrdbResult']['output']>>>;
  embeddedChartUrl?: Maybe<Scalars['String']['output']>;
  eventDefinitions?: Maybe<Array<Maybe<EventDefinition>>>;
  metadata?: Maybe<NrdbMetadata>;
  nrql?: Maybe<Scalars['Nrql']['output']>;
  otherResult?: Maybe<Scalars['NrdbResult']['output']>;
  previousResults?: Maybe<Array<Maybe<Scalars['NrdbResult']['output']>>>;
  queryProgress?: Maybe<NrdbQueryProgress>;
  rawResponse?: Maybe<Scalars['NrdbRawResults']['output']>;
  results?: Maybe<Array<Maybe<Scalars['NrdbResult']['output']>>>;
  staticChartUrl?: Maybe<Scalars['String']['output']>;
  suggestedFacets?: Maybe<Array<Maybe<NrqlFacetSuggestion>>>;
  suggestedQueries?: Maybe<SuggestedNrqlQueryResponse>;
  totalResult?: Maybe<Scalars['NrdbResult']['output']>;
};


export type NrdbResultContainerEmbeddedChartUrlArgs = {
  chartType?: InputMaybe<EmbeddedChartType>;
};


export type NrdbResultContainerStaticChartUrlArgs = {
  chartType?: InputMaybe<ChartImageType>;
  format?: InputMaybe<ChartFormatType>;
  height?: InputMaybe<Scalars['Int']['input']>;
  width?: InputMaybe<Scalars['Int']['input']>;
};


export type NrdbResultContainerSuggestedQueriesArgs = {
  anomalyTimeWindow?: InputMaybe<TimeWindowInput>;
};

export type NrqlDropRulesAccountStitchedFields = {
  __typename?: 'NrqlDropRulesAccountStitchedFields';
  list?: Maybe<NrqlDropRulesListDropRulesResult>;
};

export type NrqlDropRulesAction =
  | 'DROP_ATTRIBUTES'
  | 'DROP_ATTRIBUTES_FROM_METRIC_AGGREGATES'
  | 'DROP_DATA';

export type NrqlDropRulesCreateDropRuleFailure = {
  __typename?: 'NrqlDropRulesCreateDropRuleFailure';
  error: NrqlDropRulesError;
  submitted: NrqlDropRulesCreateDropRuleSubmission;
};

export type NrqlDropRulesCreateDropRuleInput = {
  action: NrqlDropRulesAction;
  description?: InputMaybe<Scalars['String']['input']>;
  nrql: Scalars['String']['input'];
  source?: InputMaybe<Scalars['String']['input']>;
};

export type NrqlDropRulesCreateDropRuleResult = {
  __typename?: 'NrqlDropRulesCreateDropRuleResult';
  failures?: Maybe<Array<Maybe<NrqlDropRulesCreateDropRuleFailure>>>;
  successes?: Maybe<Array<Maybe<NrqlDropRulesDropRule>>>;
};

export type NrqlDropRulesCreateDropRuleSubmission = {
  __typename?: 'NrqlDropRulesCreateDropRuleSubmission';
  accountId: Scalars['Int']['output'];
  action: NrqlDropRulesAction;
  description?: Maybe<Scalars['String']['output']>;
  nrql: Scalars['String']['output'];
  source?: Maybe<Scalars['String']['output']>;
};

export type NrqlDropRulesDeleteDropRuleFailure = {
  __typename?: 'NrqlDropRulesDeleteDropRuleFailure';
  error: NrqlDropRulesError;
  submitted: NrqlDropRulesDeleteDropRuleSubmission;
};

export type NrqlDropRulesDeleteDropRuleResult = {
  __typename?: 'NrqlDropRulesDeleteDropRuleResult';
  failures?: Maybe<Array<Maybe<NrqlDropRulesDeleteDropRuleFailure>>>;
  successes?: Maybe<Array<Maybe<NrqlDropRulesDropRule>>>;
};

export type NrqlDropRulesDeleteDropRuleSubmission = {
  __typename?: 'NrqlDropRulesDeleteDropRuleSubmission';
  accountId: Scalars['Int']['output'];
  ruleId: Scalars['ID']['output'];
};

export type NrqlDropRulesDropRule = {
  __typename?: 'NrqlDropRulesDropRule';
  account?: Maybe<AccountReference>;
  accountId: Scalars['Int']['output'];
  action: NrqlDropRulesAction;
  createdAt: Scalars['DateTime']['output'];
  createdBy: Scalars['Int']['output'];
  creator?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  nrql: Scalars['String']['output'];
  source?: Maybe<Scalars['String']['output']>;
};

export type NrqlDropRulesError = {
  __typename?: 'NrqlDropRulesError';
  description: Scalars['String']['output'];
  reason: NrqlDropRulesErrorReason;
};

export type NrqlDropRulesErrorReason =
  | 'FEATURE_FLAG_DISABLED'
  | 'GENERAL'
  | 'INVALID_INPUT'
  | 'INVALID_QUERY'
  | 'RULE_NOT_FOUND'
  | 'USER_NOT_AUTHORIZED';

export type NrqlDropRulesListDropRulesResult = {
  __typename?: 'NrqlDropRulesListDropRulesResult';
  error?: Maybe<NrqlDropRulesError>;
  rules?: Maybe<Array<Maybe<NrqlDropRulesDropRule>>>;
};

export type NrqlFacetSuggestion = {
  __typename?: 'NrqlFacetSuggestion';
  attributes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  nrql?: Maybe<Scalars['Nrql']['output']>;
};

export type NrqlHistoricalQuery = {
  __typename?: 'NrqlHistoricalQuery';
  accountId?: Maybe<Scalars['Int']['output']>;
  nrql?: Maybe<Scalars['Nrql']['output']>;
  timestamp?: Maybe<Scalars['EpochSeconds']['output']>;
};

export type NrqlLookupsAccountStitchedFields = {
  __typename?: 'NrqlLookupsAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  fileEndpoint?: Maybe<NrqlLookupsFileEndpoint>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  tables?: Maybe<Array<Maybe<NrqlLookupsLookupFileSummary>>>;
};


export type NrqlLookupsAccountStitchedFieldsFileEndpointArgs = {
  name: Scalars['String']['input'];
};

export type NrqlLookupsFileEndpoint = {
  __typename?: 'NrqlLookupsFileEndpoint';
  /** @deprecated This field is experimental and subject to breaking changes. */
  uri: Scalars['String']['output'];
};

export type NrqlLookupsLookupFileSummary = {
  __typename?: 'NrqlLookupsLookupFileSummary';
  /** @deprecated This field is experimental and subject to breaking changes. */
  account?: Maybe<AccountReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  description?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fileEndpoint: NrqlLookupsFileEndpoint;
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastUpdatedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastUpdatedBy: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  rows: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  size: Scalars['Int']['output'];
};

export type NrqlQueriedEntitiesActorStitchedFields = {
  __typename?: 'NrqlQueriedEntitiesActorStitchedFields';
  query?: Maybe<NrqlQueriedEntitiesQueriedEntitiesResult>;
};


export type NrqlQueriedEntitiesActorStitchedFieldsQueryArgs = {
  filters?: InputMaybe<NrqlQueriedEntitiesFilters>;
  nrql: Scalars['Nrql']['input'];
};

export type NrqlQueriedEntitiesFilters = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NrqlQueriedEntitiesQueriedEntitiesResult = {
  __typename?: 'NrqlQueriedEntitiesQueriedEntitiesResult';
  entities?: Maybe<Array<Maybe<EntityOutline>>>;
};

export type NrqlQueryOptions = {
  eventNamespaces?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type OpenAgentManagementAccountStitchedFields = {
  __typename?: 'OpenAgentManagementAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  agent?: Maybe<OpenAgentManagementAgent>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  agents?: Maybe<OpenAgentManagementAgents>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  configuration?: Maybe<OpenAgentManagementConfiguration>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  configurationRevision?: Maybe<OpenAgentManagementConfigurationRevision>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  configurations?: Maybe<Array<Maybe<OpenAgentManagementConfiguration>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleet?: Maybe<OpenAgentManagementFleet>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleets?: Maybe<OpenAgentManagementFleets>;
};


export type OpenAgentManagementAccountStitchedFieldsAgentArgs = {
  agentUid: Scalars['ID']['input'];
};


export type OpenAgentManagementAccountStitchedFieldsAgentsArgs = {
  agentType?: InputMaybe<OpenAgentManagementAgentType>;
  authState?: InputMaybe<OpenAgentManagementAuthState>;
  configurationRevision?: InputMaybe<OpenAgentManagementConfigurationRevisionIdentifier>;
  cursor?: InputMaybe<Scalars['String']['input']>;
  fleetGuid?: InputMaybe<Scalars['EntityGuid']['input']>;
};


export type OpenAgentManagementAccountStitchedFieldsConfigurationArgs = {
  id: Scalars['ID']['input'];
};


export type OpenAgentManagementAccountStitchedFieldsConfigurationRevisionArgs = {
  configurationId: Scalars['ID']['input'];
  revisionNumber: Scalars['Int']['input'];
};


export type OpenAgentManagementAccountStitchedFieldsConfigurationsArgs = {
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type OpenAgentManagementAccountStitchedFieldsFleetArgs = {
  fleetGuid: Scalars['EntityGuid']['input'];
};


export type OpenAgentManagementAccountStitchedFieldsFleetsArgs = {
  configurationRevision?: InputMaybe<OpenAgentManagementConfigurationRevisionIdentifier>;
  cursor?: InputMaybe<Scalars['String']['input']>;
};

export type OpenAgentManagementAgent = {
  __typename?: 'OpenAgentManagementAgent';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  authorization?: Maybe<OpenAgentManagementAuthStateLastUpdated>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  effectiveConfigurations?: Maybe<Array<Maybe<OpenAgentManagementEffectiveConfiguration>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleet?: Maybe<OpenAgentManagementFleet>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  healthy?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  host?: Maybe<OpenAgentManagementHost>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastError?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastRemoteConfigError?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastRemoteConfigHash?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastRemoteConfigStatus?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastSeen?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  os?: Maybe<OpenAgentManagementOs>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  remoteConfigurations?: Maybe<Array<Maybe<OpenAgentManagementConfigurationRevision>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  startTime?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  type?: Maybe<OpenAgentManagementAgentType>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  uid?: Maybe<Scalars['ID']['output']>;
};

export type OpenAgentManagementAgentDeploymentInput = {
  configurationId: Scalars['ID']['input'];
  revisionNumber: Scalars['Int']['input'];
};

export type OpenAgentManagementAgentType =
  | 'NEWRELIC_INFRA'
  | 'NEWRELIC_SUPER'
  | 'OTEL_COLLECTOR'
  | 'UNKNOWN';

export type OpenAgentManagementAgents = {
  __typename?: 'OpenAgentManagementAgents';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<OpenAgentManagementAgent>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type OpenAgentManagementAuthState =
  | 'AUTHORIZED'
  | 'DENIED'
  | 'UNAUTHORIZED';

export type OpenAgentManagementAuthStateLastUpdated = {
  __typename?: 'OpenAgentManagementAuthStateLastUpdated';
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastUpdated: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: OpenAgentManagementAuthState;
};

export type OpenAgentManagementConfiguration = {
  __typename?: 'OpenAgentManagementConfiguration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountId?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  latestRevision?: Maybe<OpenAgentManagementConfigurationRevision>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  revisionNumbers?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
};

export type OpenAgentManagementConfigurationInput = {
  name: Scalars['String']['input'];
};

export type OpenAgentManagementConfigurationRevision = {
  __typename?: 'OpenAgentManagementConfigurationRevision';
  /** @deprecated This field is experimental and subject to breaking changes. */
  configurationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  configurationName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  content?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contentType?: Maybe<OpenAgentManagementContentType>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  revisionNumber?: Maybe<Scalars['Int']['output']>;
};

export type OpenAgentManagementConfigurationRevisionIdentifier = {
  configurationId: Scalars['ID']['input'];
  revisionNumber: Scalars['Int']['input'];
};

export type OpenAgentManagementConfigurationRevisionInput = {
  configurationId: Scalars['ID']['input'];
  content: Scalars['String']['input'];
  contentType?: InputMaybe<OpenAgentManagementContentType>;
};

export type OpenAgentManagementContentType =
  | 'YAML';

export type OpenAgentManagementDeleteConfigurationResult = {
  __typename?: 'OpenAgentManagementDeleteConfigurationResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id?: Maybe<Scalars['ID']['output']>;
};

export type OpenAgentManagementDeleteConfigurationRevisionResult = {
  __typename?: 'OpenAgentManagementDeleteConfigurationRevisionResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  configurationId?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  revisionNumber?: Maybe<Scalars['Int']['output']>;
};

export type OpenAgentManagementDeleteFleetResult = {
  __typename?: 'OpenAgentManagementDeleteFleetResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleetGuid: Scalars['EntityGuid']['output'];
};

export type OpenAgentManagementDeployAgentConfigurationRevisionsResult = {
  __typename?: 'OpenAgentManagementDeployAgentConfigurationRevisionsResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  agentUid?: Maybe<Scalars['ID']['output']>;
};

export type OpenAgentManagementDeployFleetConfigurationRevisionsResult = {
  __typename?: 'OpenAgentManagementDeployFleetConfigurationRevisionsResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleetGuid: Scalars['EntityGuid']['output'];
};

export type OpenAgentManagementEffectiveConfiguration = {
  __typename?: 'OpenAgentManagementEffectiveConfiguration';
  /** @deprecated This field is experimental and subject to breaking changes. */
  content?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  contentType?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
};

export type OpenAgentManagementFleet = {
  __typename?: 'OpenAgentManagementFleet';
  /** @deprecated This field is experimental and subject to breaking changes. */
  agentType: OpenAgentManagementAgentType;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleetGuid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  remoteConfigurations?: Maybe<Array<Maybe<OpenAgentManagementConfigurationRevision>>>;
};

export type OpenAgentManagementFleetDeploymentInput = {
  configurationId: Scalars['ID']['input'];
  revisionNumber: Scalars['Int']['input'];
};

export type OpenAgentManagementFleets = {
  __typename?: 'OpenAgentManagementFleets';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<Maybe<OpenAgentManagementFleet>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type OpenAgentManagementHost = {
  __typename?: 'OpenAgentManagementHost';
  /** @deprecated This field is experimental and subject to breaking changes. */
  arch?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hostId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  type?: Maybe<Scalars['String']['output']>;
};

export type OpenAgentManagementMoveAgentToFleetResult = {
  __typename?: 'OpenAgentManagementMoveAgentToFleetResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  agentUid?: Maybe<Scalars['ID']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  fleetGuid: Scalars['EntityGuid']['output'];
};

export type OpenAgentManagementOs = {
  __typename?: 'OpenAgentManagementOs';
  /** @deprecated This field is experimental and subject to breaking changes. */
  name?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  type?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  version?: Maybe<Scalars['String']['output']>;
};

export type OpenAgentManagementSetAgentAuthStateResult = {
  __typename?: 'OpenAgentManagementSetAgentAuthStateResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  agentUid: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  lastUpdated: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  state: OpenAgentManagementAuthState;
};

export type Organization = {
  __typename?: 'Organization';
  accountManagement?: Maybe<AccountManagementOrganizationStitchedFields>;
  accountShareInvitations?: Maybe<AccountShareInvitationsOrganizationStitchedFields>;
  accountShares?: Maybe<OrganizationAccountShares>;
  administrator?: Maybe<OrganizationOrganizationAdministrator>;
  authorizationManagement?: Maybe<AuthorizationManagementOrganizationStitchedFields>;
  billingStructure?: Maybe<OrganizationBillingStructure>;
  customerId?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainManagement?: Maybe<DomainManagementOrganizationStitchedFields>;
  id?: Maybe<Scalars['ID']['output']>;
  invitations?: Maybe<InvitationsOrganizationStitchedFields>;
  name?: Maybe<Scalars['String']['output']>;
  productRating?: Maybe<ProductRatingOrganizationStitchedFields>;
  team?: Maybe<TeamOrganizationStitchedFields>;
  telemetryId?: Maybe<Scalars['String']['output']>;
  userConsumption?: Maybe<UserConsumptionOrganizationStitchedFields>;
  userManagement?: Maybe<UserManagementOrganizationStitchedFields>;
  usersCount?: Maybe<UsersCountOrganizationStitchedFields>;
};


export type OrganizationAccountSharesArgs = {
  limitingRoleId?: InputMaybe<Scalars['Int']['input']>;
  sourceOrganizationId?: InputMaybe<Scalars['ID']['input']>;
  targetOrganizationId?: InputMaybe<Scalars['ID']['input']>;
};

export type OrganizationAccount = {
  __typename?: 'OrganizationAccount';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  regionCode: Scalars['String']['output'];
  status: Scalars['String']['output'];
};

export type OrganizationAccountCollection = {
  __typename?: 'OrganizationAccountCollection';
  items?: Maybe<Array<OrganizationAccount>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type OrganizationAccountFilterInput = {
  id?: InputMaybe<OrganizationAccountIdFilterInput>;
  name?: InputMaybe<OrganizationAccountNameFilterInput>;
  organizationId: OrganizationAccountOrganizationIdFilterInput;
  sharingMode?: InputMaybe<OrganizationAccountSharingModeFilterInput>;
  status?: InputMaybe<OrganizationAccountStatusFilterInput>;
};

export type OrganizationAccountIdFilterInput = {
  eq?: InputMaybe<Scalars['Int']['input']>;
};

export type OrganizationAccountIdInput = {
  eq: Scalars['Int']['input'];
};

export type OrganizationAccountNameFilterInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationAccountOrganizationIdFilterInput = {
  eq: Scalars['ID']['input'];
};

export type OrganizationAccountShare = {
  __typename?: 'OrganizationAccountShare';
  accountId: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  limitingRole: OrganizationAccountShareLimitingRoleWrapper;
  name: Scalars['String']['output'];
  source: OrganizationAccountShareOrganizationWrapper;
  target: OrganizationAccountShareOrganizationWrapper;
};

export type OrganizationAccountShareCollection = {
  __typename?: 'OrganizationAccountShareCollection';
  items?: Maybe<Array<OrganizationAccountShare>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type OrganizationAccountShareFilterInput = {
  accountId: OrganizationAccountIdInput;
  targetId?: InputMaybe<OrganizationTargetIdInput>;
};

export type OrganizationAccountShareLimitingRoleWrapper = {
  __typename?: 'OrganizationAccountShareLimitingRoleWrapper';
  id: Scalars['ID']['output'];
};

export type OrganizationAccountShareOrganizationWrapper = {
  __typename?: 'OrganizationAccountShareOrganizationWrapper';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type OrganizationAccountShareSortDirectionEnum =
  | 'ASCENDING'
  | 'DESCENDING';

export type OrganizationAccountShareSortInput = {
  direction?: InputMaybe<OrganizationAccountShareSortDirectionEnum>;
  key?: InputMaybe<OrganizationAccountShareSortKeyEnum>;
};

export type OrganizationAccountShareSortKeyEnum =
  | 'ACCOUNT_ID'
  | 'TARGET_ORGANIZATION_NAME';

export type OrganizationAccountShares = {
  __typename?: 'OrganizationAccountShares';
  sharedAccounts?: Maybe<Array<OrganizationSharedAccount>>;
};

export type OrganizationAccountSharingModeFilterInput = {
  eq?: InputMaybe<OrganizationSharingMode>;
};

export type OrganizationAccountSortDirectionEnum =
  | 'ASCENDING'
  | 'DESCENDING';

export type OrganizationAccountSortInput = {
  direction?: InputMaybe<OrganizationAccountSortDirectionEnum>;
  key?: InputMaybe<OrganizationAccountSortKeyEnum>;
};

export type OrganizationAccountSortKeyEnum =
  | 'ID'
  | 'NAME';

export type OrganizationAccountStatus =
  | 'ACTIVE'
  | 'CANCELED';

export type OrganizationAccountStatusFilterInput = {
  eq?: InputMaybe<OrganizationAccountStatus>;
};

export type OrganizationAuthenticationDomain = {
  __typename?: 'OrganizationAuthenticationDomain';
  authenticationType: OrganizationAuthenticationTypeEnum;
  id: Scalars['ID']['output'];
  idpManagedAttributes: Array<OrganizationIdpManagedAttributesTypeEnum>;
  name: Scalars['String']['output'];
  organizationId: Scalars['ID']['output'];
  provisioningType: OrganizationProvisioningTypeEnum;
};

export type OrganizationAuthenticationDomainCollection = {
  __typename?: 'OrganizationAuthenticationDomainCollection';
  items: Array<OrganizationAuthenticationDomain>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type OrganizationAuthenticationDomainFilterInput = {
  id?: InputMaybe<OrganizationIdInput>;
  name?: InputMaybe<OrganizationNameInput>;
  organizationId: OrganizationOrganizationIdInput;
};

export type OrganizationAuthenticationDomainSortInput = {
  direction?: InputMaybe<OrganizationSortDirectionEnum>;
  key?: InputMaybe<OrganizationSortKeyEnum>;
};

export type OrganizationAuthenticationTypeEnum =
  | 'DISABLED'
  | 'HEROKU_SSO'
  | 'OIDC_SSO'
  | 'PASSWORD'
  | 'SAML_SSO';

export type OrganizationBillingStructure =
  | 'ACCOUNT_HIERARCHY'
  | 'CUSTOMER_CONTRACT'
  | 'UNSTRUCTURED';

export type OrganizationContractCustomerIdInputFilter = {
  eq: Scalars['String']['input'];
};

export type OrganizationContractOrganizationIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type OrganizationCreateOrganizationInput = {
  name: Scalars['String']['input'];
};

export type OrganizationCreateOrganizationResponse = {
  __typename?: 'OrganizationCreateOrganizationResponse';
  jobId: Scalars['String']['output'];
};

export type OrganizationCreateSharedAccountInput = {
  accountId: Scalars['Int']['input'];
  limitingRoleId: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  targetOrganizationId: Scalars['ID']['input'];
};

export type OrganizationCreateSharedAccountResponse = {
  __typename?: 'OrganizationCreateSharedAccountResponse';
  sharedAccount?: Maybe<OrganizationSharedAccount>;
};

export type OrganizationCustomerContract = {
  __typename?: 'OrganizationCustomerContract';
  billingStructure?: Maybe<OrganizationBillingStructure>;
  customerId: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  organizationGroups: OrganizationOrganizationGroupWrapper;
  telemetryId?: Maybe<Scalars['String']['output']>;
};


export type OrganizationCustomerContractOrganizationGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<OrganizationOrganizationGroupFilterInput>;
};

export type OrganizationCustomerContractFilterInput = {
  customerId?: InputMaybe<OrganizationContractCustomerIdInputFilter>;
  organizationId?: InputMaybe<OrganizationContractOrganizationIdInputFilter>;
};

export type OrganizationCustomerContractWrapper = {
  __typename?: 'OrganizationCustomerContractWrapper';
  items: Array<OrganizationCustomerContract>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type OrganizationCustomerOrganization = {
  __typename?: 'OrganizationCustomerOrganization';
  contractId?: Maybe<Scalars['ID']['output']>;
  customerId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  organizationGroupId?: Maybe<Scalars['ID']['output']>;
};

export type OrganizationCustomerOrganizationFilterInput = {
  accountId?: InputMaybe<OrganizationOrganizationAccountIdInputFilter>;
  authenticationDomainId?: InputMaybe<OrganizationOrganizationAuthenticationDomainIdInputFilter>;
  customerId?: InputMaybe<OrganizationOrganizationCustomerIdInputFilter>;
  id?: InputMaybe<OrganizationOrganizationIdInputFilter>;
  name?: InputMaybe<OrganizationOrganizationNameInputFilter>;
};

export type OrganizationCustomerOrganizationWrapper = {
  __typename?: 'OrganizationCustomerOrganizationWrapper';
  items: Array<OrganizationCustomerOrganization>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type OrganizationError = {
  __typename?: 'OrganizationError';
  message: Scalars['String']['output'];
  type: OrganizationUpdateErrorType;
};

export type OrganizationIdInput = {
  eq: Scalars['ID']['input'];
};

export type OrganizationIdpManagedAttributesTypeEnum =
  | 'USER_TIER_ID';

export type OrganizationInformation = {
  __typename?: 'OrganizationInformation';
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
};

export type OrganizationNameInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationNewManagedAccountInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  regionCode?: InputMaybe<OrganizationRegionCodeEnum>;
};

export type OrganizationOrganizationAccountIdInputFilter = {
  eq: Scalars['Int']['input'];
};

export type OrganizationOrganizationAdministrator = {
  __typename?: 'OrganizationOrganizationAdministrator';
  organizationId?: Maybe<Scalars['ID']['output']>;
  organizationName?: Maybe<Scalars['String']['output']>;
};

export type OrganizationOrganizationAuthenticationDomainIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type OrganizationOrganizationCreateAsyncCustomerResult = {
  __typename?: 'OrganizationOrganizationCreateAsyncCustomerResult';
  customerId?: Maybe<Scalars['String']['output']>;
};

export type OrganizationOrganizationCreateAsyncJobResult = {
  __typename?: 'OrganizationOrganizationCreateAsyncJobResult';
  createdUtc: Scalars['String']['output'];
  errorMessage?: Maybe<Scalars['String']['output']>;
  finishedUtc?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  status: OrganizationOrganizationCreateJobResultStatusEnum;
};

export type OrganizationOrganizationCreateAsyncOrganizationResult = {
  __typename?: 'OrganizationOrganizationCreateAsyncOrganizationResult';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type OrganizationOrganizationCreateAsyncResult = {
  __typename?: 'OrganizationOrganizationCreateAsyncResult';
  customer?: Maybe<OrganizationOrganizationCreateAsyncCustomerResult>;
  job: OrganizationOrganizationCreateAsyncJobResult;
  organization?: Maybe<OrganizationOrganizationCreateAsyncOrganizationResult>;
};

export type OrganizationOrganizationCreateAsyncResultCollection = {
  __typename?: 'OrganizationOrganizationCreateAsyncResultCollection';
  items: Array<OrganizationOrganizationCreateAsyncResult>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type OrganizationOrganizationCreateAsyncResultFilterInput = {
  customerId?: InputMaybe<OrganizationOrganizationCreateJobCustomerIdInput>;
  jobId?: InputMaybe<OrganizationOrganizationCreateJobIdInput>;
  status?: InputMaybe<OrganizationOrganizationCreateJobStatusInput>;
};

export type OrganizationOrganizationCreateJobCustomerIdInput = {
  eq: Scalars['String']['input'];
};

export type OrganizationOrganizationCreateJobIdInput = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type OrganizationOrganizationCreateJobResultStatusEnum =
  | 'CREATED'
  | 'FAILED'
  | 'RUNNING'
  | 'SUCCEEDED';

export type OrganizationOrganizationCreateJobStatusEnum =
  | 'ALL'
  | 'CREATED'
  | 'FAILED'
  | 'RUNNING'
  | 'SUCCEEDED';

export type OrganizationOrganizationCreateJobStatusInput = {
  eq?: InputMaybe<OrganizationOrganizationCreateJobStatusEnum>;
  in?: InputMaybe<Array<OrganizationOrganizationCreateJobStatusEnum>>;
};

export type OrganizationOrganizationCustomerIdInputFilter = {
  eq: Scalars['String']['input'];
};

export type OrganizationOrganizationGroup = {
  __typename?: 'OrganizationOrganizationGroup';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type OrganizationOrganizationGroupFilterInput = {
  id?: InputMaybe<OrganizationOrganizationGroupIdInputFilter>;
  name?: InputMaybe<OrganizationOrganizationGroupNameInputFilter>;
  organizationId?: InputMaybe<OrganizationOrganizationGroupOrganizationIdInputFilter>;
};

export type OrganizationOrganizationGroupIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type OrganizationOrganizationGroupNameInputFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationOrganizationGroupOrganizationIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type OrganizationOrganizationGroupWrapper = {
  __typename?: 'OrganizationOrganizationGroupWrapper';
  items?: Maybe<Array<OrganizationOrganizationGroup>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type OrganizationOrganizationIdInput = {
  eq: Scalars['ID']['input'];
};

export type OrganizationOrganizationIdInputFilter = {
  eq: Scalars['ID']['input'];
};

export type OrganizationOrganizationNameInputFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationProvisioningProductInput = {
  id: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  unitsOfMeasure?: InputMaybe<Array<OrganizationProvisioningUnitOfMeasureInput>>;
};

export type OrganizationProvisioningTypeEnum =
  | 'DISABLED'
  | 'MANUAL'
  | 'SCIM';

export type OrganizationProvisioningUnit =
  | 'ADDITIONAL_DAYS_OF_RETENTION'
  | 'APPS'
  | 'APP_TRANSACTIONS_IN_MILLIONS'
  | 'CHECKS'
  | 'COMPUTE_UNIT'
  | 'DATA_RETENTION_IN_DAYS'
  | 'DPM'
  | 'EVENTS_IN_MILLIONS'
  | 'GB_INGESTED'
  | 'GB_PER_DAY'
  | 'GRACE_PERIOD'
  | 'HOSTS'
  | 'INCIDENT_EVENTS'
  | 'INGESTED_EVENTS'
  | 'MONTHLY_ACTIVE_USERS'
  | 'PAGE_VIEWS'
  | 'PROVISIONED_USERS'
  | 'SPANS_IN_MILLIONS'
  | 'USERS';

export type OrganizationProvisioningUnitOfMeasureInput = {
  quantity: Scalars['Int']['input'];
  unit: OrganizationProvisioningUnit;
};

export type OrganizationProvisioningUpdateSubscriptionResult = {
  __typename?: 'OrganizationProvisioningUpdateSubscriptionResult';
  enqueued: Scalars['Boolean']['output'];
  errors: Array<OrganizationProvisioningUserError>;
};

export type OrganizationProvisioningUserError = {
  __typename?: 'OrganizationProvisioningUserError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type OrganizationRegionCodeEnum =
  | 'EU01'
  | 'US01';

export type OrganizationRevokeSharedAccountInput = {
  id: Scalars['String']['input'];
};

export type OrganizationRevokeSharedAccountResponse = {
  __typename?: 'OrganizationRevokeSharedAccountResponse';
  sharedAccount?: Maybe<OrganizationSharedAccount>;
};

export type OrganizationSharedAccount = {
  __typename?: 'OrganizationSharedAccount';
  accountId: Scalars['Int']['output'];
  id: Scalars['String']['output'];
  limitingRoleId: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  sourceOrganizationId: Scalars['ID']['output'];
  sourceOrganizationName?: Maybe<Scalars['String']['output']>;
  targetOrganizationId: Scalars['ID']['output'];
  targetOrganizationName?: Maybe<Scalars['String']['output']>;
};

export type OrganizationSharedAccountInput = {
  accountId: Scalars['Int']['input'];
  limitingRoleId?: InputMaybe<Scalars['Int']['input']>;
};

export type OrganizationSharingMode =
  | 'ALL'
  | 'MANAGED'
  | 'SHARED_WITH_OTHER_ORGANIZATIONS'
  | 'SHARED_WITH_THIS_ORGANIZATION';

export type OrganizationSortDirectionEnum =
  | 'ASCENDING'
  | 'DESCENDING';

export type OrganizationSortKeyEnum =
  | 'ID'
  | 'NAME';

export type OrganizationTargetIdInput = {
  eq: Scalars['ID']['input'];
};

export type OrganizationUpdateErrorType =
  | 'INVALID_RECORD'
  | 'NOT_AUTHORIZED';

export type OrganizationUpdateInput = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationUpdateResponse = {
  __typename?: 'OrganizationUpdateResponse';
  errors: Array<OrganizationError>;
  organizationInformation?: Maybe<OrganizationInformation>;
};

export type OrganizationUpdateSharedAccountInput = {
  id: Scalars['String']['input'];
  limitingRoleId: Scalars['Int']['input'];
};

export type OrganizationUpdateSharedAccountResponse = {
  __typename?: 'OrganizationUpdateSharedAccountResponse';
  sharedAccount?: Maybe<OrganizationSharedAccount>;
};

export type ParentAccountInfo = {
  __typename?: 'ParentAccountInfo';
  createdAt?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  region?: Maybe<Region>;
  status?: Maybe<AccountStatus>;
};

export type PartnerAccountInfo = {
  __typename?: 'PartnerAccountInfo';
  children?: Maybe<Array<Maybe<AccountInfo>>>;
  createdAt?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  status?: Maybe<AccountStatus>;
};

export type Partnership = {
  __typename?: 'Partnership';
  accounts?: Maybe<Array<Maybe<PartnerAccountInfo>>>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  owner?: Maybe<AccountInfo>;
  payMethod?: Maybe<Scalars['String']['output']>;
};

export type PartnershipMigrationMigrateAccountResponse = {
  __typename?: 'PartnershipMigrationMigrateAccountResponse';
  success: Scalars['Boolean']['output'];
};

export type PersonalizationActorStitchedFields = {
  __typename?: 'PersonalizationActorStitchedFields';
  hasIngestedData?: Maybe<Scalars['Boolean']['output']>;
};

export type PixieAccountStitchedFields = {
  __typename?: 'PixieAccountStitchedFields';
  linkedPixieProject?: Maybe<PixiePixieProject>;
  pixieAccessToken?: Maybe<Scalars['SecureValue']['output']>;
};

export type PixieActorStitchedFields = {
  __typename?: 'PixieActorStitchedFields';
  linkedPixieProjects: Array<Maybe<PixieLinkedPixieProject>>;
};

export type PixieLinkPixieProjectError = {
  __typename?: 'PixieLinkPixieProjectError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<PixieLinkPixieProjectErrorType>;
};

export type PixieLinkPixieProjectErrorType =
  | 'ALREADY_LINKED'
  | 'AUTO_CREATION_NOT_SUPPORTED'
  | 'INVALID_NEWRELIC_ACCOUNT'
  | 'INVALID_PIXIE_API_KEY'
  | 'UNLINKING_NOT_SUPPORTED';

export type PixieLinkPixieProjectResult = {
  __typename?: 'PixieLinkPixieProjectResult';
  errors?: Maybe<Array<Maybe<PixieLinkPixieProjectError>>>;
  linkedPixieProject?: Maybe<PixiePixieProject>;
  success: Scalars['Boolean']['output'];
};

export type PixieLinkedPixieProject = {
  __typename?: 'PixieLinkedPixieProject';
  accountId: Scalars['Int']['output'];
  pixieProject: PixiePixieProject;
};

export type PixiePixieProject = {
  __typename?: 'PixiePixieProject';
  apiKey?: Maybe<Scalars['SecureValue']['output']>;
  deployKey?: Maybe<Scalars['SecureValue']['output']>;
};

export type PixieRecordPixieTosAcceptanceError = {
  __typename?: 'PixieRecordPixieTosAcceptanceError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<PixieRecordPixieTosAcceptanceErrorType>;
};

export type PixieRecordPixieTosAcceptanceErrorType =
  | 'MISSING_DATA';

export type PixieRecordPixieTosAcceptanceResult = {
  __typename?: 'PixieRecordPixieTosAcceptanceResult';
  errors?: Maybe<Array<Maybe<PixieRecordPixieTosAcceptanceError>>>;
  success: Scalars['Boolean']['output'];
};

export type PreReleaseProgramActorStitchedFields = {
  __typename?: 'PreReleaseProgramActorStitchedFields';
  agreementRequired?: Maybe<PreReleaseProgramAgreementRequired>;
  hasAccess?: Maybe<Scalars['Boolean']['output']>;
  isEligible?: Maybe<Scalars['Boolean']['output']>;
  program?: Maybe<PreReleaseProgramProgram>;
  submissionByProgramId?: Maybe<PreReleaseProgramSubmission>;
};


export type PreReleaseProgramActorStitchedFieldsAgreementRequiredArgs = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
};


export type PreReleaseProgramActorStitchedFieldsHasAccessArgs = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  readableId?: InputMaybe<Scalars['String']['input']>;
};


export type PreReleaseProgramActorStitchedFieldsIsEligibleArgs = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
};


export type PreReleaseProgramActorStitchedFieldsProgramArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  readableId?: InputMaybe<Scalars['String']['input']>;
};


export type PreReleaseProgramActorStitchedFieldsSubmissionByProgramIdArgs = {
  programId?: InputMaybe<Scalars['ID']['input']>;
};

export type PreReleaseProgramAgreementRequired = {
  __typename?: 'PreReleaseProgramAgreementRequired';
  accountId: Scalars['Int']['output'];
  accountName?: Maybe<Scalars['String']['output']>;
  accountType?: Maybe<Scalars['String']['output']>;
  dateAccepted?: Maybe<Scalars['EpochMilliseconds']['output']>;
  id: Scalars['ID']['output'];
  organizationId?: Maybe<Scalars['ID']['output']>;
};

export type PreReleaseProgramProgram = {
  __typename?: 'PreReleaseProgramProgram';
  createdAt: Scalars['EpochMilliseconds']['output'];
  creatorId: Scalars['ID']['output'];
  customLegal?: Maybe<Scalars['String']['output']>;
  customLegalAddendum?: Maybe<Scalars['String']['output']>;
  customLegalRequired?: Maybe<Scalars['Boolean']['output']>;
  customLegalStandalone?: Maybe<Scalars['String']['output']>;
  disabled: Scalars['Boolean']['output'];
  emailBody?: Maybe<Scalars['String']['output']>;
  emailCustomer?: Maybe<Scalars['Boolean']['output']>;
  emailFrom?: Maybe<Scalars['String']['output']>;
  emailSubject?: Maybe<Scalars['String']['output']>;
  excludeEntitlements?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  excludeFedramp?: Maybe<Scalars['Boolean']['output']>;
  excludeHippa?: Maybe<Scalars['Boolean']['output']>;
  excludeTiers?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  formSubmitCopy: Scalars['String']['output'];
  hasGroupSubmission?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  includeEntitlements?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  includeFeatureFlags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  marketingDescription?: Maybe<Scalars['String']['output']>;
  marketingDivider?: Maybe<Scalars['Boolean']['output']>;
  marketingExtraContent?: Maybe<Scalars['String']['output']>;
  marketingLabelType?: Maybe<PreReleaseProgramProgramMarketingLabelType>;
  marketingLink?: Maybe<Scalars['String']['output']>;
  marketingSubtext?: Maybe<Scalars['String']['output']>;
  marketingTitle?: Maybe<Scalars['String']['output']>;
  marketingVideoUrl?: Maybe<Scalars['String']['output']>;
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  name: Scalars['String']['output'];
  readableId: Scalars['String']['output'];
  scope: PreReleaseProgramProgramScope;
  status: PreReleaseProgramProgramStatus;
  submission?: Maybe<PreReleaseProgramSubmission>;
  submissions?: Maybe<Array<Maybe<PreReleaseProgramSubmission>>>;
  team?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type PreReleaseProgramProgramMarketingLabelType =
  | 'GET_DATA_PLUS'
  | 'GET_STARTED'
  | 'MONITOR_MORE';

export type PreReleaseProgramProgramScope =
  | 'ACCOUNT'
  | 'ORGANIZATION'
  | 'USER';

export type PreReleaseProgramProgramStatus =
  | 'ACTIVE'
  | 'INACTIVE';

export type PreReleaseProgramSubmission = {
  __typename?: 'PreReleaseProgramSubmission';
  accepted?: Maybe<Scalars['Boolean']['output']>;
  accountId: Scalars['Int']['output'];
  agreementTypeAccepted?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  creatorId: Scalars['ID']['output'];
  enabledDate?: Maybe<Scalars['EpochMilliseconds']['output']>;
  expirationDate?: Maybe<Scalars['EpochMilliseconds']['output']>;
  id: Scalars['ID']['output'];
  modifiedAt: Scalars['EpochMilliseconds']['output'];
  organizationId?: Maybe<Scalars['ID']['output']>;
  program?: Maybe<PreReleaseProgramProgram>;
  programId: Scalars['String']['output'];
  status: Scalars['String']['output'];
  userId: Scalars['ID']['output'];
};

export type ProductConsumptionAccountStitchedFields = {
  __typename?: 'ProductConsumptionAccountStitchedFields';
  annualPoolOfFundsSummary?: Maybe<ProductConsumptionAnnualPoolOfFundsSummary>;
  consumptionSummary?: Maybe<Array<Maybe<ProductConsumptionConsumptionSummary>>>;
  pricebook?: Maybe<Array<Maybe<ProductConsumptionPriceTier>>>;
};


export type ProductConsumptionAccountStitchedFieldsConsumptionSummaryArgs = {
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ProductConsumptionAccountStitchedFieldsPricebookArgs = {
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ProductConsumptionActorStitchedFields = {
  __typename?: 'ProductConsumptionActorStitchedFields';
  annualPoolOfFundsAccounts?: Maybe<Array<Maybe<ProductConsumptionAnnualPoolOfFundsAccount>>>;
};

export type ProductConsumptionAnnualPoolOfFundsAccount = {
  __typename?: 'ProductConsumptionAnnualPoolOfFundsAccount';
  accountId?: Maybe<Scalars['Int']['output']>;
};

export type ProductConsumptionAnnualPoolOfFundsSummary = {
  __typename?: 'ProductConsumptionAnnualPoolOfFundsSummary';
  accountId?: Maybe<Scalars['Int']['output']>;
  annualCommit?: Maybe<Scalars['ProductConsumptionBalance']['output']>;
  commitOutstandingBalance?: Maybe<Scalars['ProductConsumptionBalance']['output']>;
  contractStartDate?: Maybe<Scalars['Date']['output']>;
  customerId?: Maybe<Scalars['ID']['output']>;
  lastInvoiceAmount?: Maybe<Scalars['ProductConsumptionBalance']['output']>;
  lastInvoiceDate?: Maybe<Scalars['Date']['output']>;
  lastUpdated?: Maybe<Scalars['Date']['output']>;
  planType?: Maybe<Scalars['String']['output']>;
  prepaidBalance?: Maybe<Scalars['ProductConsumptionBalance']['output']>;
  utilization?: Maybe<Scalars['ProductConsumptionBalance']['output']>;
};

export type ProductConsumptionConsumptionSummary = {
  __typename?: 'ProductConsumptionConsumptionSummary';
  /** @deprecated estimated cost fields no longer provided */
  averageCostPerUnit?: Maybe<ProductConsumptionHistoricalDataPoint>;
  consumptionMetric?: Maybe<Scalars['String']['output']>;
  /** @deprecated estimated cost fields no longer provided */
  projectedMonthlyCost?: Maybe<ProductConsumptionHistoricalDataPoint>;
  totalConsumption?: Maybe<ProductConsumptionHistoricalDataPoint>;
};

export type ProductConsumptionCustomerAdministrationStitchedFields = {
  __typename?: 'ProductConsumptionCustomerAdministrationStitchedFields';
  annualPoolOfFundsSummary?: Maybe<ProductConsumptionAnnualPoolOfFundsSummary>;
};


export type ProductConsumptionCustomerAdministrationStitchedFieldsAnnualPoolOfFundsSummaryArgs = {
  customerId: ProductConsumptionOrganizationCustomerIdInputFilter;
};

export type ProductConsumptionHistoricalDataPoint = {
  __typename?: 'ProductConsumptionHistoricalDataPoint';
  current?: Maybe<Scalars['String']['output']>;
  previous?: Maybe<Scalars['String']['output']>;
};

export type ProductConsumptionOrganizationCustomerIdInputFilter = {
  eq: Scalars['String']['input'];
};

export type ProductConsumptionPriceTier = {
  __typename?: 'ProductConsumptionPriceTier';
  isTiered?: Maybe<Scalars['Boolean']['output']>;
  metric?: Maybe<Scalars['String']['output']>;
  pricePerUnit?: Maybe<Scalars['ProductConsumptionBalance']['output']>;
  threshold?: Maybe<Scalars['Int']['output']>;
  tier?: Maybe<Scalars['Int']['output']>;
};

export type ProductRatingIngestAccount = {
  __typename?: 'ProductRatingIngestAccount';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ProductRatingIngestAccountsResult = {
  __typename?: 'ProductRatingIngestAccountsResult';
  accounts?: Maybe<Array<Maybe<ProductRatingIngestAccount>>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type ProductRatingOrganizationStitchedFields = {
  __typename?: 'ProductRatingOrganizationStitchedFields';
  ingestAccounts?: Maybe<ProductRatingIngestAccountsResult>;
};


export type ProductRatingOrganizationStitchedFieldsIngestAccountsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  queryWindow: DateTimeWindowInput;
};

export type ProductRatingV2AccountFilterInput = {
  organizationId: ProductRatingV2OrganizationIdFilterInput;
  queryWindow: DateTimeWindowInput;
};

export type ProductRatingV2IngestAccount = {
  __typename?: 'ProductRatingV2IngestAccount';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ProductRatingV2IngestAccountsResultV2 = {
  __typename?: 'ProductRatingV2IngestAccountsResultV2';
  items?: Maybe<Array<Maybe<ProductRatingV2IngestAccount>>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type ProductRatingV2IngestOrganization = {
  __typename?: 'ProductRatingV2IngestOrganization';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type ProductRatingV2IngestOrganizationsResult = {
  __typename?: 'ProductRatingV2IngestOrganizationsResult';
  items?: Maybe<Array<Maybe<ProductRatingV2IngestOrganization>>>;
  nextCursor?: Maybe<Scalars['String']['output']>;
};

export type ProductRatingV2OrganizationFilterInput = {
  queryWindow: DateTimeWindowInput;
};

export type ProductRatingV2OrganizationIdFilterInput = {
  eq: Scalars['ID']['input'];
};

export type ProductSubscription = {
  __typename?: 'ProductSubscription';
  entitlements?: Maybe<Array<Maybe<SubscriptionEntitlement>>>;
  /** @deprecated Please use productName */
  name?: Maybe<Scalars['String']['output']>;
  pricingQuantity?: Maybe<Scalars['Int']['output']>;
  pricingUnit?: Maybe<Scalars['String']['output']>;
  productLine?: Maybe<Scalars['String']['output']>;
  productName?: Maybe<Scalars['String']['output']>;
  secondaryPricingQuantity?: Maybe<Scalars['Int']['output']>;
  secondaryPricingUnit?: Maybe<Scalars['String']['output']>;
  trial?: Maybe<ProductTrial>;
  trialEligibility?: Maybe<ProductTrialEligibility>;
  visibleTimeWindow?: Maybe<Scalars['Int']['output']>;
};

export type ProductTrial = {
  __typename?: 'ProductTrial';
  endTime?: Maybe<Scalars['Int']['output']>;
  startTime?: Maybe<Scalars['Int']['output']>;
};

export type ProductTrialEligibility = {
  __typename?: 'ProductTrialEligibility';
  reason?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['Boolean']['output']>;
};

export type ProgrammabilityTnCAccepted = {
  __typename?: 'ProgrammabilityTnCAccepted';
  acceptedOn: Scalars['DateTime']['output'];
  account?: Maybe<AccountReference>;
  user?: Maybe<UserReference>;
};

export type ProgrammabilityTnCAccountInput = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
};

export type ProgrammabilityTnCAccountsFilterInput = {
  accountIds: Array<InputMaybe<Scalars['Int']['input']>>;
};

export type ProgrammabilityTnCActorStitchedFields = {
  __typename?: 'ProgrammabilityTnCActorStitchedFields';
  acceptedAccounts?: Maybe<Array<Maybe<ProgrammabilityTnCAccepted>>>;
  disallowedAccounts?: Maybe<ProgrammabilityTnCDisallowedAccounts>;
};


export type ProgrammabilityTnCActorStitchedFieldsAcceptedAccountsArgs = {
  accounts?: InputMaybe<ProgrammabilityTnCAccountsFilterInput>;
};


export type ProgrammabilityTnCActorStitchedFieldsDisallowedAccountsArgs = {
  accounts?: InputMaybe<ProgrammabilityTnCAccountsFilterInput>;
};

export type ProgrammabilityTnCDisallowedAccounts = {
  __typename?: 'ProgrammabilityTnCDisallowedAccounts';
  disallowedAccountIds: Array<Scalars['Int']['output']>;
};

export type ProvisioningAccountConfiguration = {
  __typename?: 'ProvisioningAccountConfiguration';
  configurationDataSet: Array<ProvisioningConfigurationKeyValuePair>;
  enabled: Scalars['Boolean']['output'];
  type: ProvisioningConfigurationType;
};

export type ProvisioningAccountConfigurationError = {
  __typename?: 'ProvisioningAccountConfigurationError';
  message: Scalars['String']['output'];
  path?: Maybe<Scalars['String']['output']>;
};

export type ProvisioningAccountConfigurationResult = {
  __typename?: 'ProvisioningAccountConfigurationResult';
  errors?: Maybe<Array<ProvisioningAccountConfigurationError>>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ProvisioningAccountEntitlementPackage = {
  __typename?: 'ProvisioningAccountEntitlementPackage';
  accountId: Scalars['Int']['output'];
  enablement?: Maybe<ProvisioningEnablement>;
  endDate: Scalars['DateTime']['output'];
  promotion?: Maybe<ProvisioningPromotion>;
  startDate: Scalars['DateTime']['output'];
};

export type ProvisioningAccountEntitlementPropertyQuantity = {
  __typename?: 'ProvisioningAccountEntitlementPropertyQuantity';
  defaultQuantity?: Maybe<Scalars['Int']['output']>;
  maxQuantity?: Maybe<Scalars['Int']['output']>;
  minQuantity?: Maybe<Scalars['Int']['output']>;
  propertyName: Scalars['String']['output'];
};

export type ProvisioningAccountEntitlementSetResult = {
  __typename?: 'ProvisioningAccountEntitlementSetResult';
  entitlementsList?: Maybe<ProvisioningEntitlementsList>;
};

export type ProvisioningAccountStitchedFields = {
  __typename?: 'ProvisioningAccountStitchedFields';
  accountConfigurations?: Maybe<Array<ProvisioningAccountConfiguration>>;
  accountEntitlementPackages?: Maybe<Array<ProvisioningAccountEntitlementPackage>>;
  accountEntitlements?: Maybe<ProvisioningAccountEntitlementSetResult>;
  accountType?: Maybe<ProvisioningAccountType>;
  blockedEntitlementSet?: Maybe<ProvisioningBlockedEntitlementSetResult>;
  currentEntitlementSet?: Maybe<ProvisioningCurrentEntitlementSetResult>;
  subscriptionHistory?: Maybe<ProvisioningSubscriptionHistoryResult>;
};


export type ProvisioningAccountStitchedFieldsAccountConfigurationsArgs = {
  type?: InputMaybe<Scalars['String']['input']>;
};


export type ProvisioningAccountStitchedFieldsSubscriptionHistoryArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
};

export type ProvisioningAccountType =
  | 'GENERIC'
  | 'LEGACY'
  | 'PLATFORM';

export type ProvisioningActorStitchedFields = {
  __typename?: 'ProvisioningActorStitchedFields';
  configuredAccounts?: Maybe<Array<ProvisioningConfiguredAccount>>;
};


export type ProvisioningActorStitchedFieldsConfiguredAccountsArgs = {
  configurationTypeCode?: InputMaybe<Array<ProvisioningConfigurationTypeCode>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProvisioningBlockedEntitlementSetResult = {
  __typename?: 'ProvisioningBlockedEntitlementSetResult';
  entitlementsList?: Maybe<ProvisioningEntitlementsList>;
};

export type ProvisioningBulkAccountRefreshPayload = {
  __typename?: 'ProvisioningBulkAccountRefreshPayload';
  enqueued?: Maybe<Scalars['Boolean']['output']>;
};

export type ProvisioningBulkApplicationError = {
  __typename?: 'ProvisioningBulkApplicationError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type ProvisioningBulkApplicationResult = {
  __typename?: 'ProvisioningBulkApplicationResult';
  enqueued?: Maybe<Scalars['Boolean']['output']>;
  errors?: Maybe<Array<ProvisioningBulkApplicationError>>;
};

export type ProvisioningBulkCpmConversionsError = {
  __typename?: 'ProvisioningBulkCpmConversionsError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type ProvisioningBulkCpmConversionsResult = {
  __typename?: 'ProvisioningBulkCpmConversionsResult';
  enqueued?: Maybe<Scalars['Boolean']['output']>;
  errors?: Maybe<Array<ProvisioningBulkCpmConversionsError>>;
};

export type ProvisioningConfigurationKeyValuePair = {
  __typename?: 'ProvisioningConfigurationKeyValuePair';
  key: Scalars['String']['output'];
  value: Scalars['Boolean']['output'];
};

export type ProvisioningConfigurationKeyValuePairInput = {
  key: Scalars['String']['input'];
  value: Scalars['Boolean']['input'];
};

export type ProvisioningConfigurationType = {
  __typename?: 'ProvisioningConfigurationType';
  allowedOnSubaccounts: Scalars['Boolean']['output'];
  code: Scalars['String']['output'];
  description: Scalars['String']['output'];
  fields: Array<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

export type ProvisioningConfigurationTypeCode =
  | 'FEDRAMP'
  | 'HIPAA';

export type ProvisioningConfiguredAccount = {
  __typename?: 'ProvisioningConfiguredAccount';
  accountId: Scalars['Int']['output'];
  enabled: Scalars['Boolean']['output'];
};

export type ProvisioningConvertAccountResult = {
  __typename?: 'ProvisioningConvertAccountResult';
  enqueued: Scalars['Boolean']['output'];
  errors: Array<ProvisioningUserError>;
};

export type ProvisioningCurrentEntitlementSetResult = {
  __typename?: 'ProvisioningCurrentEntitlementSetResult';
  entitlementsList?: Maybe<ProvisioningEntitlementsList>;
};

export type ProvisioningEnablement = {
  __typename?: 'ProvisioningEnablement';
  allowedAccountType: ProvisioningAccountType;
  code: Scalars['String']['output'];
  description: Scalars['String']['output'];
  name: Scalars['String']['output'];
};

export type ProvisioningEnablementApplicationError = {
  __typename?: 'ProvisioningEnablementApplicationError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type ProvisioningEnablementApplicationResult = {
  __typename?: 'ProvisioningEnablementApplicationResult';
  appliedSuccessfully?: Maybe<Scalars['Boolean']['output']>;
  errors?: Maybe<Array<ProvisioningEnablementApplicationError>>;
};

export type ProvisioningEnablementRemovalResult = {
  __typename?: 'ProvisioningEnablementRemovalResult';
  errors?: Maybe<Array<ProvisioningEnablementApplicationError>>;
  removedSuccessfully?: Maybe<Scalars['Boolean']['output']>;
};

export type ProvisioningEntitleAccountStatus = {
  __typename?: 'ProvisioningEntitleAccountStatus';
  accountId?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<ProvisioningStatus>;
};

export type ProvisioningEntitleAccountsResult = {
  __typename?: 'ProvisioningEntitleAccountsResult';
  result?: Maybe<Array<ProvisioningEntitleAccountStatus>>;
};

export type ProvisioningEntitlementPackage = {
  __typename?: 'ProvisioningEntitlementPackage';
  code: Scalars['String']['output'];
  entitlements?: Maybe<Array<ProvisioningEntitlementResult>>;
  id: Scalars['ID']['output'];
  inheritedEntitlementPackageIds?: Maybe<Array<Scalars['ID']['output']>>;
  name: Scalars['String']['output'];
};

export type ProvisioningEntitlementResult = {
  __typename?: 'ProvisioningEntitlementResult';
  authorizedBy?: Maybe<Scalars['String']['output']>;
  availableForBeta?: Maybe<Scalars['Boolean']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['DateTime']['output']>;
  entitlementPackage?: Maybe<ProvisioningEntitlementPackage>;
  name: Scalars['String']['output'];
  productLine?: Maybe<Scalars['String']['output']>;
  properties?: Maybe<Scalars['String']['output']>;
  propertyQuantities?: Maybe<Array<ProvisioningAccountEntitlementPropertyQuantity>>;
};

export type ProvisioningEntitlementsList = {
  __typename?: 'ProvisioningEntitlementsList';
  entitlementResults?: Maybe<Array<ProvisioningEntitlementResult>>;
};

export type ProvisioningLineItem = {
  __typename?: 'ProvisioningLineItem';
  code: Scalars['String']['output'];
  id: Scalars['Int']['output'];
};

export type ProvisioningLineItemInput = {
  id: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

export type ProvisioningNonProfit =
  | 'STANDARD'
  | 'STUDENT';

export type ProvisioningNrPlatformStitchedFields = {
  __typename?: 'ProvisioningNrPlatformStitchedFields';
  configurationTypes?: Maybe<Array<ProvisioningConfigurationType>>;
  enablements?: Maybe<Array<ProvisioningEnablement>>;
  entitlements?: Maybe<Array<ProvisioningEntitlementResult>>;
  promotions?: Maybe<Array<ProvisioningPromotion>>;
};

export type ProvisioningProduct = {
  __typename?: 'ProvisioningProduct';
  id: Scalars['Int']['output'];
  lineItems?: Maybe<Array<ProvisioningLineItem>>;
  name: Scalars['String']['output'];
  productLine: Scalars['String']['output'];
  unitsOfMeasure?: Maybe<Array<ProvisioningUnitOfMeasure>>;
};

export type ProvisioningProductInput = {
  id: Scalars['Int']['input'];
  lineItems?: InputMaybe<Array<ProvisioningLineItemInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  unitsOfMeasure?: InputMaybe<Array<ProvisioningUnitOfMeasureInput>>;
};

export type ProvisioningPromotion = {
  __typename?: 'ProvisioningPromotion';
  allowedAccountType: ProvisioningAccountType;
  code: Scalars['String']['output'];
  daysDuration: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  singleUse: Scalars['Boolean']['output'];
  visible: Scalars['Boolean']['output'];
};

export type ProvisioningPromotionApplicationError = {
  __typename?: 'ProvisioningPromotionApplicationError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type ProvisioningPromotionApplicationResult = {
  __typename?: 'ProvisioningPromotionApplicationResult';
  appliedSuccessfully?: Maybe<Scalars['Boolean']['output']>;
  errors?: Maybe<Array<ProvisioningPromotionApplicationError>>;
};

export type ProvisioningPromotionRemovalResult = {
  __typename?: 'ProvisioningPromotionRemovalResult';
  errors?: Maybe<Array<ProvisioningPromotionApplicationError>>;
  removedSuccessfully?: Maybe<Scalars['Boolean']['output']>;
};

export type ProvisioningRefreshEntitlementResult = {
  __typename?: 'ProvisioningRefreshEntitlementResult';
  errors?: Maybe<Array<ProvisioningRefreshEntitlementsError>>;
  message: Scalars['String']['output'];
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ProvisioningRefreshEntitlementsError = {
  __typename?: 'ProvisioningRefreshEntitlementsError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type ProvisioningRemovePlatformResult = {
  __typename?: 'ProvisioningRemovePlatformResult';
  accountId: Scalars['Int']['output'];
  resultMessage?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export type ProvisioningStatus =
  | 'ACCOUNT_HAS_PARENT'
  | 'ACCOUNT_IS_INTERNAL'
  | 'ACCOUNT_IS_NOT_PLATFORM'
  | 'ACCOUNT_NOT_FOUND'
  | 'CANNOT_REMOVE_ENTITLEMENT'
  | 'SUCCESS';

export type ProvisioningSubscriptionEntry = {
  __typename?: 'ProvisioningSubscriptionEntry';
  endDate?: Maybe<Scalars['DateTime']['output']>;
  products: Array<ProvisioningProduct>;
  provisionedDate: Scalars['DateTime']['output'];
  startDate: Scalars['DateTime']['output'];
  status: ProvisioningSubscriptionStatus;
  userId?: Maybe<Scalars['Int']['output']>;
};

export type ProvisioningSubscriptionHistoryResult = {
  __typename?: 'ProvisioningSubscriptionHistoryResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  subscriptionEntries: Array<ProvisioningSubscriptionEntry>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type ProvisioningSubscriptionStatus =
  | 'AUTHORIZED'
  | 'CANCELLED'
  | 'FREE'
  | 'PAID'
  | 'PAYMENT_DECLINED'
  | 'PENDING'
  | 'REPLACED';

export type ProvisioningUnit =
  | 'ADDITIONAL_DAYS_OF_RETENTION'
  | 'APPS'
  | 'APP_TRANSACTIONS_IN_MILLIONS'
  | 'CHECKS'
  | 'COMPUTE_UNIT'
  | 'DATA_RETENTION_IN_DAYS'
  | 'DPM'
  | 'EVENTS_IN_MILLIONS'
  | 'GB_INGESTED'
  | 'GB_PER_DAY'
  | 'GRACE_PERIOD'
  | 'HOSTS'
  | 'INCIDENT_EVENTS'
  | 'INGESTED_EVENTS'
  | 'MONTHLY_ACTIVE_USERS'
  | 'PAGE_VIEWS'
  | 'PROVISIONED_USERS'
  | 'SPANS_IN_MILLIONS'
  | 'USERS';

export type ProvisioningUnitOfMeasure = {
  __typename?: 'ProvisioningUnitOfMeasure';
  quantity?: Maybe<Scalars['ID']['output']>;
  unit?: Maybe<ProvisioningUnit>;
};

export type ProvisioningUnitOfMeasureInput = {
  quantity: Scalars['Int']['input'];
  unit: ProvisioningUnit;
};

export type ProvisioningUpdateSubscriptionResult = {
  __typename?: 'ProvisioningUpdateSubscriptionResult';
  enqueued: Scalars['Boolean']['output'];
  errors: Array<ProvisioningUserError>;
};

export type ProvisioningUserError = {
  __typename?: 'ProvisioningUserError';
  message: Scalars['String']['output'];
  path?: Maybe<Array<Scalars['String']['output']>>;
};

export type QueryHistoryActorStitchedFields = {
  __typename?: 'QueryHistoryActorStitchedFields';
  nrql?: Maybe<Array<QueryHistoryNrqlHistoryResult>>;
};


export type QueryHistoryActorStitchedFieldsNrqlArgs = {
  options?: InputMaybe<QueryHistoryQueryHistoryOptionsInput>;
};

export type QueryHistoryNrqlHistoryResult = {
  __typename?: 'QueryHistoryNrqlHistoryResult';
  accountIds?: Maybe<Array<Scalars['Int']['output']>>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  query?: Maybe<Scalars['Nrql']['output']>;
};

export type QueryHistoryQueryHistoryOptionsInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type QueryHistoryRecordNrqlInput = {
  accountIds: Array<Scalars['Int']['input']>;
  query: Scalars['Nrql']['input'];
};

export type QueryHistoryRecordNrqlResult = {
  __typename?: 'QueryHistoryRecordNrqlResult';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
};

export type RealAgent = {
  __typename?: 'RealAgent';
  dispatcher?: Maybe<Scalars['String']['output']>;
  host?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  language?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  port?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type ReferenceEntityCreateRepositoryError = {
  __typename?: 'ReferenceEntityCreateRepositoryError';
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  message: Scalars['String']['output'];
  type: ReferenceEntityCreateRepositoryErrorType;
};

export type ReferenceEntityCreateRepositoryErrorType =
  | 'FORBIDDEN'
  | 'INVALID_INPUT';

export type ReferenceEntityCreateRepositoryInput = {
  accountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  url: Scalars['String']['input'];
};

export type ReferenceEntityCreateRepositoryResult = {
  __typename?: 'ReferenceEntityCreateRepositoryResult';
  created: Array<Scalars['EntityGuid']['output']>;
  failures: Array<ReferenceEntityCreateRepositoryError>;
  updated: Array<Scalars['EntityGuid']['output']>;
};

export type Region = {
  __typename?: 'Region';
  code?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type RegionScope =
  | 'GLOBAL'
  | 'IN_REGION';

export type RelatedDashboardsRelatedDashboardResult = {
  __typename?: 'RelatedDashboardsRelatedDashboardResult';
  /** @deprecated [DEPRECATED] Use dashboards field instead */
  dashboardGuids: Array<Scalars['EntityGuid']['output']>;
  dashboards: Array<EntityOutline>;
};

export type RelatedExternalsDirection =
  | 'DOWNSTREAM'
  | 'FOCAL_ENTITY'
  | 'UPSTREAM';

export type RelatedExternalsEntityEdge = {
  __typename?: 'RelatedExternalsEntityEdge';
  /** @deprecated This field is experimental and subject to breaking changes. */
  performance?: Maybe<Array<RelatedExternalsPerformance>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sourceEntity: EntityOutline;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sourceEntityGuid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sourceId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  targetEntity: EntityOutline;
  /** @deprecated This field is experimental and subject to breaking changes. */
  targetEntityGuid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  targetId: Scalars['ID']['output'];
};

export type RelatedExternalsEntityResult = {
  __typename?: 'RelatedExternalsEntityResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  edges?: Maybe<Array<RelatedExternalsEntityEdge>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertices?: Maybe<Array<RelatedExternalsEntityVertex>>;
};

export type RelatedExternalsEntityVertex = {
  __typename?: 'RelatedExternalsEntityVertex';
  /** @deprecated This field is experimental and subject to breaking changes. */
  direction: RelatedExternalsDirection;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entity: EntityOutline;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityGuid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  performance?: Maybe<Array<RelatedExternalsPerformance>>;
};

export type RelatedExternalsPerformance = {
  __typename?: 'RelatedExternalsPerformance';
  /** @deprecated This field is experimental and subject to breaking changes. */
  averageValue: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timeseries: Array<RelatedExternalsPerformanceValue>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  unit: Scalars['String']['output'];
};

export type RelatedExternalsPerformanceValue = {
  __typename?: 'RelatedExternalsPerformanceValue';
  /** @deprecated This field is experimental and subject to breaking changes. */
  averageValue: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  timestamp: Scalars['EpochMilliseconds']['output'];
};

export type RelatedExternalsSearch = {
  direction: RelatedExternalsDirection;
  entityGuid: Scalars['EntityGuid']['input'];
};

export type RelatedExternalsTransactionEdge = {
  __typename?: 'RelatedExternalsTransactionEdge';
  /** @deprecated This field is experimental and subject to breaking changes. */
  performance?: Maybe<Array<RelatedExternalsPerformance>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  sourceId: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  targetId: Scalars['ID']['output'];
};

export type RelatedExternalsTransactionResult = {
  __typename?: 'RelatedExternalsTransactionResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  edges?: Maybe<Array<RelatedExternalsTransactionEdge>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  vertices?: Maybe<Array<RelatedExternalsTransactionVertex>>;
};

export type RelatedExternalsTransactionVertex = {
  __typename?: 'RelatedExternalsTransactionVertex';
  /** @deprecated This field is experimental and subject to breaking changes. */
  direction: RelatedExternalsDirection;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entity: EntityOutline;
  /** @deprecated This field is experimental and subject to breaking changes. */
  entityGuid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  performance?: Maybe<Array<RelatedExternalsPerformance>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  transactionName?: Maybe<Scalars['String']['output']>;
};

export type RequestContext = {
  __typename?: 'RequestContext';
  apiKey?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['ID']['output']>;
};

export type RootCauseAnalysisAsyncResult = {
  __typename?: 'RootCauseAnalysisAsyncResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  requestId: Scalars['String']['output'];
};

export type RootCauseAnalysisContextItem = {
  __typename?: 'RootCauseAnalysisContextItem';
  /** @deprecated This field is experimental and subject to breaking changes. */
  key: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  val: Scalars['String']['output'];
};

export type RootCauseAnalysisResult = {
  __typename?: 'RootCauseAnalysisResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  asyncInProgress: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  results?: Maybe<Array<RootCauseAnalysisResultItem>>;
};

export type RootCauseAnalysisResultItem = {
  __typename?: 'RootCauseAnalysisResultItem';
  /** @deprecated This field is experimental and subject to breaking changes. */
  confidence: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  details: Array<RootCauseAnalysisStepResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  success: Scalars['String']['output'];
};

export type RootCauseAnalysisSearchFilter = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type RootCauseAnalysisStepResult = {
  __typename?: 'RootCauseAnalysisStepResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  confidence: Scalars['Float']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  context: Array<RootCauseAnalysisContextItem>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  description: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  entity?: Maybe<EntityOutline>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  reason: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  step: Scalars['Int']['output'];
};

export type RootMutationType = {
  __typename?: 'RootMutationType';
  abTestGetVariation?: Maybe<AbTestGetVariationResponse>;
  abTestTrackEvent?: Maybe<Scalars['Boolean']['output']>;
  accountFeatureConfigurationSetFedrampCompliance: AccountFeatureConfigurationSetFedrampComplianceResult;
  accountFeatureConfigurationSetHipaaCompliance: AccountFeatureConfigurationSetHipaaComplianceResult;
  accountManagementCreateAccount?: Maybe<AccountManagementCreateResponse>;
  accountManagementUpdateAccount?: Maybe<AccountManagementUpdateResponse>;
  accountShareInvitationsAcceptInvitation?: Maybe<AccountShareInvitationsAcceptInvitationByTokenMutationPayload>;
  accountShareInvitationsCreateAccountShareInvitation?: Maybe<AccountShareInvitationsCreateAccountShareMutationPayload>;
  accountShareInvitationsRevokeInvitation?: Maybe<AccountShareInvitationsRevokeInvitationByIdMutationPayload>;
  agentApplicationCreateBrowser?: Maybe<AgentApplicationCreateBrowserResult>;
  agentApplicationCreateMobile?: Maybe<AgentApplicationCreateMobileResult>;
  agentApplicationDelete?: Maybe<AgentApplicationDeleteResult>;
  agentApplicationEnableApmBrowser?: Maybe<AgentApplicationEnableBrowserResult>;
  agentApplicationSegmentsReplaceAllBrowserSegmentAllowList?: Maybe<AgentApplicationSegmentsBrowserSegmentAllowListResult>;
  agentApplicationSettingsUpdate?: Maybe<AgentApplicationSettingsUpdateResult>;
  agentTracesDeleteErrorTrace?: Maybe<AgentTracesTraceMutationResult>;
  agentTracesDeleteErrorTraces?: Maybe<AgentTracesTraceMutationResult>;
  agentTracesDeleteSqlTrace?: Maybe<AgentTracesTraceMutationResult>;
  agentTracesDeleteSqlTraces?: Maybe<AgentTracesTraceMutationResult>;
  agentTracesDeleteTransactionTrace?: Maybe<AgentTracesTraceMutationResult>;
  agentTracesDeleteTransactionTraces?: Maybe<AgentTracesTraceMutationResult>;
  aiConnectAddEnrichers: AiConnectWorkflowResponse;
  aiConnectAddNotifier: AiConnectWorkflowResponse;
  aiConnectCreateWorkflow: AiConnectWorkflowResponse;
  aiConnectDeleteEnricher: AiConnectDeleteResponse;
  aiConnectDeleteNotifier: AiConnectDeleteResponse;
  aiConnectDeleteWorkflow: AiConnectDeleteResponse;
  aiConnectEditEnricher: AiConnectResponse;
  aiConnectEditNotifier: AiConnectResponse;
  aiConnectEditWorkflow: AiConnectWorkflowResponse;
  aiConnectTestNotifier: AiConnectNotifierTestResponse;
  aiConnectTestNotifierById: AiConnectNotifierTestResponse;
  aiConnectTestWorkflow: AiConnectWorkflowTestResponse;
  aiConnectTestWorkflowById: AiConnectWorkflowTestResponse;
  aiDecisionsAcceptSuggestion: AiDecisionsRule;
  aiDecisionsCreateImplicitRule: AiDecisionsRule;
  aiDecisionsCreateRule: AiDecisionsRule;
  aiDecisionsCreateSuggestion: AiDecisionsSuggestion;
  aiDecisionsDeclineSuggestion: AiDecisionsOperationResult;
  aiDecisionsDeleteMergeFeedback: AiDecisionsOperationResult;
  aiDecisionsDeleteRule: AiDecisionsOperationResult;
  aiDecisionsDeleteSuggestion: AiDecisionsOperationResult;
  aiDecisionsDisableRule: AiDecisionsOperationResult;
  aiDecisionsEnableRule: AiDecisionsOperationResult;
  aiDecisionsFindApplicableIncidents: AiDecisionsApplicableIncidentSearch;
  aiDecisionsPostponeSuggestion: AiDecisionsRule;
  aiDecisionsRecordMergeFeedback: AiDecisionsMergeFeedback;
  aiDecisionsSimulate: AiDecisionsSimulation;
  aiDecisionsUpdateImplicitRule: AiDecisionsRule;
  aiDecisionsUpdateRule: AiDecisionsRule;
  aiIssuesAckIssue: AiIssuesIssueUserActionResponse;
  aiIssuesCloseIncident?: Maybe<AiIssuesIncidentUserActionResponse>;
  aiIssuesResolveIssue: AiIssuesIssueUserActionResponse;
  aiIssuesUnackIssue: AiIssuesIssueUserActionResponse;
  aiIssuesUpdateGracePeriod: AiIssuesConfigurationOverrideResponse;
  aiIssuesUpdateIssueTtl: AiIssuesConfigurationOverrideResponse;
  aiNotificationsCreateChannel: AiNotificationsChannelResponse;
  aiNotificationsCreateDestination: AiNotificationsDestinationResponse;
  aiNotificationsDeleteChannel: AiNotificationsDeleteResponse;
  aiNotificationsDeleteDestination: AiNotificationsDeleteResponse;
  aiNotificationsMergeDestinations?: Maybe<AiNotificationsMergeDestinationsResponse>;
  aiNotificationsTestChannel: AiNotificationsChannelTestResponse;
  aiNotificationsTestChannelById: AiNotificationsChannelTestResponse;
  aiNotificationsTestDestination: AiNotificationsDestinationTestResponse;
  aiNotificationsTestDestinationById: AiNotificationsDestinationTestResponse;
  aiNotificationsUpdateChannel: AiNotificationsChannelResponse;
  aiNotificationsUpdateDestination: AiNotificationsDestinationResponse;
  aiOpsAddIncidentIntelligenceDestinationToConfigs?: Maybe<AiOpsProactiveDetectionConfigMutationResults>;
  aiOpsArchiveProactiveDetectionConfig?: Maybe<AiOpsProactiveDetectionConfigMutationResult>;
  aiOpsClearUserMessage?: Maybe<AiOpsUserMessageResult>;
  aiOpsCloseAnomaly?: Maybe<AiOpsAnomalyCloseResult>;
  aiOpsCreateAnomalyComment?: Maybe<AiOpsCommentsResult>;
  aiOpsCreateDraftProactiveDetectionConfig?: Maybe<AiOpsProactiveDetectionConfigMutationResult>;
  aiOpsCreateIncidentComment?: Maybe<AiOpsCommentsResult>;
  aiOpsCreateProactiveDetectionConfig?: Maybe<AiOpsProactiveDetectionConfigMutationResult>;
  aiOpsDeleteComment?: Maybe<AiOpsCommentDeleteResult>;
  aiOpsPreviewWebhook?: Maybe<AiOpsWebhookPreviewResult>;
  aiOpsRemoveIncidentIntelligenceDestinationFromConfigs?: Maybe<AiOpsProactiveDetectionConfigMutationResults>;
  aiOpsStoreTrainingSession: AiOpsStoreTrainingSessionResult;
  aiOpsTestWebhook?: Maybe<AiOpsWebhookTestResult>;
  aiOpsUpdateProactiveDetectionConfig?: Maybe<AiOpsProactiveDetectionConfigMutationResult>;
  aiOpsViewUserMessage?: Maybe<AiOpsUserMessageResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiPostmortemCreatePostmortem: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiPostmortemDeletePostmortem: AiPostmortemOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  aiPostmortemUpdatePostmortem: Scalars['String']['output'];
  aiTopologyCollectorCreateEdges: AiTopologyCollectorOperationResult;
  aiTopologyCollectorCreateVertices: AiTopologyCollectorOperationResult;
  aiTopologyCollectorDeleteEdges: AiTopologyCollectorOperationResult;
  aiTopologyCollectorDeleteVertices: AiTopologyCollectorOperationResult;
  aiWorkflowsCreateWorkflow: AiWorkflowsCreateWorkflowResponse;
  aiWorkflowsDeleteWorkflow: AiWorkflowsDeleteWorkflowResponse;
  aiWorkflowsTestWorkflow: AiWorkflowsTestWorkflowResponse;
  aiWorkflowsUpdateWorkflow: AiWorkflowsUpdateWorkflowResponse;
  alertsConditionDelete?: Maybe<AlertsConditionDeleteResponse>;
  alertsConditionUpdateEnabled?: Maybe<AlertsConditionUpdateEnabledResponse>;
  alertsMutingRuleCreate?: Maybe<AlertsMutingRule>;
  alertsMutingRuleDelete?: Maybe<AlertsMutingRuleDeleteResponse>;
  alertsMutingRuleUpdate?: Maybe<AlertsMutingRule>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`aiNotificationsCreateDestination` mutation](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-notifications-destinations/#create-destination) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  alertsNotificationChannelCreate?: Maybe<AlertsNotificationChannelCreateResponse>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`aiNotificationsDeleteDestination` mutation](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-notifications-destinations/#delete-destination) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  alertsNotificationChannelDelete?: Maybe<AlertsNotificationChannelDeleteResponse>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`aiNotificationsUpdateDestination` mutation](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-notifications-destinations/#update-destination) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  alertsNotificationChannelUpdate?: Maybe<AlertsNotificationChannelUpdateResponse>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`aiWorkflowsCreateWorkflow` mutation](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-workflows/#create-workflow) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  alertsNotificationChannelsAddToPolicy?: Maybe<AlertsNotificationChannelsAddToPolicyResponse>;
  /** @deprecated Support for notification channels is being discontinued as of **Dec 31, 2023**. Use the [`aiWorkflowsDeleteWorkflow` mutation](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-api-workflows/#delete-workflow) instead. For more information about the deprecation, [see the EOL announcement](https://forum.newrelic.com/s/hubtopic/aAX8W0000008dKOWAY/plan-to-upgrade-alert-notification-channels-to-workflows-and-destinations). */
  alertsNotificationChannelsRemoveFromPolicy?: Maybe<AlertsNotificationChannelsRemoveFromPolicyResponse>;
  alertsNrqlConditionBaselineCreate?: Maybe<AlertsNrqlBaselineCondition>;
  alertsNrqlConditionBaselineUpdate?: Maybe<AlertsNrqlBaselineCondition>;
  /** @deprecated Outlier condition creation stops Dec 8th, 2021. All outlier conditions will be removed Mar 31, 2022. */
  alertsNrqlConditionOutlierCreate?: Maybe<AlertsNrqlOutlierCondition>;
  /** @deprecated We’re removing outlier conditions on Mar 31, 2022. */
  alertsNrqlConditionOutlierUpdate?: Maybe<AlertsNrqlOutlierCondition>;
  alertsNrqlConditionStaticCreate?: Maybe<AlertsNrqlStaticCondition>;
  alertsNrqlConditionStaticUpdate?: Maybe<AlertsNrqlStaticCondition>;
  alertsPolicyCreate?: Maybe<AlertsPolicy>;
  alertsPolicyDelete?: Maybe<AlertsPolicyDeleteResponse>;
  alertsPolicyUpdate?: Maybe<AlertsPolicy>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsAnomalyDetectorDelete?: Maybe<AnomalyDetectorConfigurationsAnomalyDetectorDeleteResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreate?: Maybe<AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdate?: Maybe<AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsNrqlAnomalyDetectorCreate?: Maybe<AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsNrqlAnomalyDetectorUpdate?: Maybe<AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsUpdateStatus?: Maybe<AnomalyDetectorConfigurationsStatusUpdateResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsValidateNrqlSignal?: Maybe<AnomalyDetectorConfigurationsNrqlValidatorResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsWorkloadAnomalyDetectorCreate?: Maybe<AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateResponse>;
  /** @deprecated Usage not recommended. Will be removed in future release. */
  anomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdate?: Maybe<AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateResponse>;
  apiAccessCreateKeys?: Maybe<ApiAccessCreateKeyResponse>;
  apiAccessDeleteKeys?: Maybe<ApiAccessDeleteKeyResponse>;
  apiAccessUpdateKeys?: Maybe<ApiAccessUpdateKeyResponse>;
  /** @deprecated This mutation is deprecated. Use `agentApplicationSettingsUpdate` instead. */
  apmApplicationEntityChangeSettings?: Maybe<ApmApplicationEntitySettingsResult>;
  authorizationManagementGrantAccess?: Maybe<AuthorizationManagementGrantAccessPayload>;
  authorizationManagementRevokeAccess?: Maybe<AuthorizationManagementRevokeAccessPayload>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cartographerCollectorCreateEdges: CartographerCollectorOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cartographerCollectorCreateVertices: CartographerCollectorOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cartographerCollectorDeleteEdges: CartographerCollectorOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  cartographerCollectorDeleteVertices: CartographerCollectorOperationResult;
  changeTrackingCreateChangeTrackingEvent?: Maybe<ChangeTrackingChangeTrackingResponse>;
  changeTrackingCreateDeployment?: Maybe<ChangeTrackingDeployment>;
  chaosStart?: Maybe<Scalars['String']['output']>;
  chaosStop?: Maybe<Scalars['String']['output']>;
  cloudConfigureIntegration?: Maybe<CloudConfigureIntegrationPayload>;
  cloudDisableIntegration?: Maybe<CloudDisableIntegrationPayload>;
  cloudGcpServiceAccountAuth?: Maybe<CloudGcpServiceAccountAuthPayload>;
  cloudLinkAccount?: Maybe<CloudLinkAccountPayload>;
  cloudMigrateAwsGovCloudToAssumeRole?: Maybe<CloudMigrateAwsGovCloudToAssumeRolePayload>;
  cloudRenameAccount?: Maybe<CloudRenameAccountPayload>;
  cloudUnlinkAccount?: Maybe<CloudUnlinkAccountPayload>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateCodeMark?: Maybe<CollaborationCodeMark>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateComment?: Maybe<CollaborationComment>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateContext?: Maybe<CollaborationContext>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateEmail?: Maybe<CollaborationEmail>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateExternalServiceConnection?: Maybe<CollaborationExternalServiceConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateMention?: Maybe<CollaborationMention>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationCreateThread?: Maybe<CollaborationThread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateCodeMark?: Maybe<CollaborationCodeMark>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateComment?: Maybe<CollaborationComment>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateContext?: Maybe<CollaborationContext>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateExternalServiceConnection?: Maybe<CollaborationExternalServiceConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateFile?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateMention?: Maybe<CollaborationMention>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationDeactivateThread?: Maybe<CollaborationThread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationFeedbackOnBotResponse?: Maybe<CollaborationBotResponseFeedback>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationGetUploadUrl?: Maybe<CollaborationFile>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationRegisterEmail?: Maybe<CollaborationEmail>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationSendMessage?: Maybe<CollaborationMessageSent>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationSetExternalServiceConnectionChannel?: Maybe<CollaborationExternalServiceConnection>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationSocketSubscribe?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationSubscribeToThread?: Maybe<CollaborationSubscriber>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUnsubscribeFromThread?: Maybe<CollaborationSubscriber>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUpdateComment?: Maybe<CollaborationComment>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUpdateContextAddComment?: Maybe<CollaborationContext>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUpdateContextAddThread?: Maybe<CollaborationContext>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUpdateSubscriptionReadInfo?: Maybe<CollaborationSubscriber>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUpdateThreadAddComment?: Maybe<CollaborationThread>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  collaborationUpdateThreadStatus?: Maybe<CollaborationThread>;
  commerceCancelSubscription?: Maybe<CommerceCancelResult>;
  commerceExecutePaymentRun?: Maybe<Scalars['Boolean']['output']>;
  commerceExtendRetention?: Maybe<CommercePurchaseResult>;
  commerceNotificationsMuteNotification?: Maybe<CommerceNotificationsMuteNotificationResult>;
  commercePurchaseOffer?: Maybe<CommercePurchaseResult>;
  commerceSetDefaultPaymentMethod?: Maybe<CommercePaymentInfo>;
  commerceUpdateBillingInfo?: Maybe<CommerceBillingInfo>;
  contentSharingShareWithRecipients?: Maybe<ContentSharingShareContentResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationAcceptSuggestion: CorrelationRule;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationCreateImplicitRule: CorrelationRule;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationCreateRule: CorrelationRule;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationCreateSuggestion: CorrelationSuggestion;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationDeclineSuggestion: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationDeleteMergeFeedback: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationDeleteMergeFeedbackByRules?: Maybe<CorrelationOperationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationDeleteRule: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationDeleteSuggestion: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationDisableRule: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationEnableRule: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationFindApplicableIncidents: CorrelationApplicableIncidentSearch;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationPostponeSuggestion: CorrelationRule;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationRecordMergeFeedback: CorrelationMergeFeedback;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationRecordMergeFeedbackByRules?: Maybe<Array<CorrelationMergeFeedback>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationSimulate: CorrelationSimulation;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationUpdateImplicitRule: CorrelationRule;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationUpdateRule: CorrelationRule;
  /** @deprecated This field is experimental and subject to breaking changes. */
  correlationUpsertRuleAnnotations: CorrelationOperationResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  courierNotificationPreferencesUpdate?: Maybe<Array<Maybe<CourierNotificationPreferencesUpdatedNotificationPreferenceResponse>>>;
  dashboardAddWidgetsToPage?: Maybe<DashboardAddWidgetsToPageResult>;
  dashboardCreate?: Maybe<DashboardCreateResult>;
  dashboardCreateLiveUrl?: Maybe<DashboardLiveUrl>;
  dashboardCreateSnapshotUrl?: Maybe<Scalars['String']['output']>;
  dashboardDelete?: Maybe<DashboardDeleteResult>;
  dashboardRevokeLiveUrl?: Maybe<DashboardRevokeLiveDashboardUrlResult>;
  dashboardUndelete?: Maybe<DashboardUndeleteResult>;
  dashboardUpdate?: Maybe<DashboardUpdateResult>;
  dashboardUpdatePage?: Maybe<DashboardUpdatePageResult>;
  dashboardUpdateWidgetsInPage?: Maybe<DashboardUpdateWidgetsInPageResult>;
  dashboardWidgetRevokeLiveUrl?: Maybe<DashboardRevokeLiveUrlResult>;
  dataManagementCopyRetentions?: Maybe<DataManagementBulkCopyResult>;
  dataManagementCreateEventRetentionRule?: Maybe<DataManagementRule>;
  dataManagementCreateRetentionRules?: Maybe<Array<Maybe<DataManagementRule>>>;
  dataManagementDeleteEventRetentionRule?: Maybe<DataManagementRule>;
  dataManagementUpdateFeatureSettings?: Maybe<DataManagementFeatureSetting>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  discussionCreateErrorGroupPost?: Maybe<DiscussionErrorGroupPost>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  discussionDeleteErrorGroupPost?: Maybe<DiscussionErrorGroupPost>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  discussionUpdateErrorGroupPost?: Maybe<DiscussionErrorGroupPost>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainManagementCreateDomain?: Maybe<DomainManagementCreateDomainResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainManagementDeleteDomain?: Maybe<DomainManagementDomainDeleteResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainManagementRetryDomainVerification?: Maybe<DomainManagementCreateDomainResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  domainManagementUpdateCaptureConfiguration?: Maybe<DomainManagementUpdateCaptureConfigurationResponse>;
  edgeCreateTraceFilterRules: EdgeCreateTraceFilterRuleResponses;
  edgeCreateTraceObserver: EdgeCreateTraceObserverResponses;
  edgeDeleteTraceFilterRules: EdgeDeleteTraceFilterRuleResponses;
  edgeDeleteTraceObservers: EdgeDeleteTraceObserverResponses;
  edgeUpdateTraceObservers: EdgeUpdateTraceObserverResponses;
  entityDelete?: Maybe<EntityDeleteResult>;
  entityGoldenMetricsOverride: EntityGoldenMetricsDomainTypeScopedResponse;
  entityGoldenMetricsReset: EntityGoldenMetricsDomainTypeScopedResponse;
  entityGoldenTagsOverride: EntityGoldenTagsDomainTypeScopedResponse;
  entityGoldenTagsReset: EntityGoldenTagsDomainTypeScopedResponse;
  entityKeepAlive?: Maybe<EntityKeepAliveResult>;
  entityRelationshipUserDefinedCreateOrReplace: EntityRelationshipUserDefinedCreateOrReplaceResult;
  entityRelationshipUserDefinedDelete: EntityRelationshipUserDefinedDeleteResult;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingAssignErrorGroup?: Maybe<ErrorTrackingAssignErrorGroupResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingCommentOnErrorGroup?: Maybe<ErrorTrackingCommentOnErrorGroupResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingConfigureErrorGroupChannel?: Maybe<ErrorTrackingConfigureErrorGroupChannelResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingConfigureNotificationPolicy?: Maybe<ErrorTrackingConfigureNotificationPolicyResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingDeleteCommentFromErrorGroup?: Maybe<ErrorTrackingDeleteCommentFromErrorGroupResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingDeleteErrorGroupChannel?: Maybe<ErrorTrackingDeleteErrorGroupChannelResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingDeleteNotificationPolicy?: Maybe<ErrorTrackingDeleteNotificationPolicyResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorTrackingUpdateErrorGroupState?: Maybe<ErrorTrackingUpdateErrorGroupStateResponse>;
  errorsInboxAssignErrorGroup?: Maybe<ErrorsInboxAssignErrorGroupResponse>;
  errorsInboxConfigureNotificationPolicy?: Maybe<ErrorsInboxConfigureNotificationPolicyResponse>;
  errorsInboxDeleteErrorGroupResource?: Maybe<ErrorsInboxDeleteErrorGroupResourceResponse>;
  errorsInboxDeleteNotificationPolicy?: Maybe<ErrorsInboxDeleteNotificationPolicyResponse>;
  errorsInboxUpdateErrorGroupState?: Maybe<ErrorsInboxUpdateErrorGroupStateResponse>;
  eventTransformationCreateRule?: Maybe<EventTransformationRule>;
  eventTransformationUpdateRule?: Maybe<EventTransformationRule>;
  eventsToMetricsCreateRule?: Maybe<EventsToMetricsCreateRuleResult>;
  eventsToMetricsDeleteRule?: Maybe<EventsToMetricsDeleteRuleResult>;
  eventsToMetricsUpdateRule?: Maybe<EventsToMetricsUpdateRuleResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  grokCreateFeedback?: Maybe<GrokFeedback>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  grokCreatePrompt?: Maybe<GrokGrokPrompt>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  grokUpdateFeedback?: Maybe<GrokFeedback>;
  historicalDataExportCancelExport?: Maybe<HistoricalDataExportCustomerExportResponse>;
  historicalDataExportCreateExport?: Maybe<HistoricalDataExportCustomerExportResponse>;
  incidentIntelligenceEnvironmentConsentAccounts?: Maybe<IncidentIntelligenceEnvironmentConsentAccounts>;
  incidentIntelligenceEnvironmentConsentAuthorizedAccounts?: Maybe<IncidentIntelligenceEnvironmentConsentAuthorizedAccounts>;
  /** @deprecated Deprecated. Please concat support for existing cross-account environment changes */
  incidentIntelligenceEnvironmentCreateEnvironment?: Maybe<IncidentIntelligenceEnvironmentCreateEnvironment>;
  incidentIntelligenceEnvironmentDeleteEnvironment?: Maybe<IncidentIntelligenceEnvironmentDeleteEnvironment>;
  incidentIntelligenceEnvironmentDissentAccounts?: Maybe<IncidentIntelligenceEnvironmentDissentAccounts>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformCreatePathway?: Maybe<IncidentIntelligencePlatformCreatePathway>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformCreatePlatformPagerduty?: Maybe<IncidentIntelligencePlatformCreatePlatformPagerDuty>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformDeletePathway?: Maybe<IncidentIntelligencePlatformDeletePathway>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformDeletePlatform?: Maybe<IncidentIntelligencePlatformDeletePlatform>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformDeprovisionDestination?: Maybe<IncidentIntelligencePlatformDeprovisionDestination>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformDeprovisionSource?: Maybe<IncidentIntelligencePlatformDeprovisionSource>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformPagerdutySetAdmin?: Maybe<IncidentIntelligencePlatformPagerDutySetAdmin>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformProvisionDestinationPagerduty?: Maybe<IncidentIntelligencePlatformProvisionDestinationPagerDuty>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformProvisionDestinationWebhook?: Maybe<IncidentIntelligencePlatformProvisionDestinationWebhook>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformProvisionSourcePagerduty?: Maybe<IncidentIntelligencePlatformProvisionSourcePagerDuty>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformSyncServicesPagerduty?: Maybe<IncidentIntelligencePlatformSyncServicesPagerDuty>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformUpdateDestinationPagerduty?: Maybe<IncidentIntelligencePlatformUpdateDestinationPagerDuty>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformUpdateDestinationWebhook?: Maybe<IncidentIntelligencePlatformUpdateDestinationWebhook>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformUpdatePathway?: Maybe<IncidentIntelligencePlatformUpdatePathway>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  incidentIntelligencePlatformUpdatePlatformPagerduty?: Maybe<IncidentIntelligencePlatformUpdatePlatformPagerDuty>;
  infrastructureAgentRunIntegration?: Maybe<InfrastructureAgentSendCommandResult>;
  infrastructureAgentStopIntegration?: Maybe<InfrastructureAgentSendCommandResult>;
  installationCreateInstallStatus: InstallationInstallStatus;
  installationCreateRecipeEvent: InstallationRecipeEvent;
  installationDeleteInstall: Scalars['Boolean']['output'];
  invitationsInviteUser?: Maybe<InvitationsInviteResponse>;
  invitationsInviteUserToOrganization?: Maybe<InvitationsInviteUserToOrganizationResponse>;
  invitationsManageAddUserToOrganizationRequests?: Maybe<InvitationsManageAddUserToOrganizationRequestsResponse>;
  invitationsManageInviteUserToOrganizationRequests?: Maybe<InvitationsManageInviteUserToOrganizationRequestsResponse>;
  invitationsManageUserUpgradeRequests?: Maybe<InvitationsManageUserUpgradeRequestsResponse>;
  invitationsRequestAccess?: Maybe<InvitationsRequestAccessResponse>;
  keyTransactionCreate?: Maybe<KeyTransactionCreateResult>;
  keyTransactionDelete?: Maybe<KeyTransactionDeleteResult>;
  keyTransactionDeleteAllByApplicationId?: Maybe<KeyTransactionDeleteResult>;
  keyTransactionUpdate?: Maybe<KeyTransactionUpdateResult>;
  logConfigurationsCreateDataPartitionRule?: Maybe<LogConfigurationsCreateDataPartitionRuleResponse>;
  logConfigurationsCreateObfuscationExpression?: Maybe<LogConfigurationsObfuscationExpression>;
  logConfigurationsCreateObfuscationRule?: Maybe<LogConfigurationsObfuscationRule>;
  logConfigurationsCreateParsingRule?: Maybe<LogConfigurationsCreateParsingRuleResponse>;
  logConfigurationsDeleteDataPartitionRule?: Maybe<LogConfigurationsDeleteDataPartitionRuleResponse>;
  logConfigurationsDeleteObfuscationExpression?: Maybe<LogConfigurationsObfuscationExpression>;
  logConfigurationsDeleteObfuscationRule?: Maybe<LogConfigurationsObfuscationRule>;
  logConfigurationsDeleteParsingRule?: Maybe<LogConfigurationsDeleteParsingRuleResponse>;
  logConfigurationsUpdateDataPartitionRule?: Maybe<LogConfigurationsUpdateDataPartitionRuleResponse>;
  logConfigurationsUpdateLiveArchiveConfiguration?: Maybe<LogConfigurationsLiveArchiveConfiguration>;
  logConfigurationsUpdateObfuscationExpression?: Maybe<LogConfigurationsObfuscationExpression>;
  logConfigurationsUpdateObfuscationRule?: Maybe<LogConfigurationsObfuscationRule>;
  logConfigurationsUpdateParsingRule?: Maybe<LogConfigurationsUpdateParsingRuleResponse>;
  logConfigurationsUpsertPipelineConfiguration?: Maybe<LogConfigurationsUpsertPipelineConfigurationResponse>;
  metricNormalizationCreateRule?: Maybe<MetricNormalizationRuleMutationResponse>;
  metricNormalizationDisableRule?: Maybe<MetricNormalizationRuleMutationResponse>;
  metricNormalizationEditRule?: Maybe<MetricNormalizationRuleMutationResponse>;
  metricNormalizationEnableRule?: Maybe<MetricNormalizationRuleMutationResponse>;
  mobilePushNotificationAddDevice: MobilePushNotificationDevice;
  mobilePushNotificationRemoveDevice: MobilePushNotificationRemoveDeviceResult;
  mobilePushNotificationSendTestPush: MobilePushNotificationSendPushResult;
  mobilePushNotificationSendTestPushToAll: MobilePushNotificationSendPushResult;
  nerdStorageDeleteCollection?: Maybe<NerdStorageDeleteResult>;
  nerdStorageDeleteDocument?: Maybe<NerdStorageDeleteResult>;
  nerdStorageVaultDeleteSecret: NerdStorageVaultDeleteSecretResult;
  nerdStorageVaultWriteSecret: NerdStorageVaultWriteSecretResult;
  nerdStorageWriteDocument?: Maybe<Scalars['NerdStorageDocument']['output']>;
  nerdStoreDeleteCollection?: Maybe<NerdStoreDeleteResult>;
  nerdStoreDeleteDocument?: Maybe<NerdStoreDeleteResult>;
  nerdStoreWriteDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nerdpackAddAllowedAccounts?: Maybe<NerdpackAllowListResult>;
  nerdpackCreate: NerdpackData;
  nerdpackRemoveAllowedAccounts?: Maybe<NerdpackAllowListResult>;
  nerdpackRemoveVersionTag?: Maybe<NerdpackRemovedTagResponse>;
  nerdpackSubscribeAccounts?: Maybe<NerdpackSubscribeResult>;
  nerdpackTagVersion?: Maybe<NerdpackVersion>;
  nerdpackUnsubscribeAccounts?: Maybe<NerdpackUnsubscribeResult>;
  networkMonitoringCreateAgentConfiguration?: Maybe<Scalars['String']['output']>;
  networkMonitoringDeleteAgentConfiguration?: Maybe<Scalars['String']['output']>;
  networkMonitoringPublishAgentConfiguration?: Maybe<NetworkMonitoringPublishAgentConfigurationResponse>;
  networkMonitoringUpdateAgentConfiguration?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  newRelicServiceHealthCreateStatusNotificationConfiguration?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  newRelicServiceHealthUpdateStatusNotificationConfiguration?: Maybe<NewRelicServiceHealthNotificationConfiguration>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  notificationAuthenticationGenerateToken?: Maybe<NotificationAuthenticationGenerateTokenResponse>;
  /** @deprecated This field is no longer supported. Please use `nr1CatalogSubmitQuickstart` instead. */
  nr1CatalogCreateQuickstart?: Maybe<Nr1CatalogCreateQuickstartResult>;
  nr1CatalogInstallAlertPolicyTemplate?: Maybe<Nr1CatalogInstallAlertPolicyTemplateResult>;
  nr1CatalogInstallDashboardTemplate?: Maybe<Nr1CatalogInstallDashboardTemplateResult>;
  nr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSource?: Maybe<Nr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSourceResult>;
  nr1CatalogSetAutoInstallDashboardTemplatesForDataSource?: Maybe<Nr1CatalogSetAutoInstallDashboardTemplatesForDataSourceResult>;
  nr1CatalogSetRequiredDataSourcesForAlertPolicyTemplate?: Maybe<Nr1CatalogSetRequiredDataSourcesForAlertPolicyTemplateResult>;
  nr1CatalogSetRequiredDataSourcesForDashboardTemplate?: Maybe<Nr1CatalogSetRequiredDataSourcesForDashboardTemplateResult>;
  nr1CatalogSubmitDataSource?: Maybe<Nr1CatalogSubmitDataSourceResult>;
  /** @deprecated This mutation is no longer supported. Please use `nr1CatalogSubmitDataSource` instead */
  nr1CatalogSubmitInstallPlanStep?: Maybe<Nr1CatalogSubmitInstallPlanStepResult>;
  nr1CatalogSubmitMetadata?: Maybe<Nr1CatalogSubmitMetadataResult>;
  nr1CatalogSubmitQuickstart?: Maybe<Nr1CatalogSubmitQuickstartResult>;
  /** @deprecated This field is no longer supported. Please use `nr1CatalogSubmitQuickstart` instead. */
  nr1CatalogUpdateQuickstart?: Maybe<Nr1CatalogUpdateQuickstartResult>;
  nrqlDropRulesCreate?: Maybe<NrqlDropRulesCreateDropRuleResult>;
  nrqlDropRulesDelete?: Maybe<NrqlDropRulesDeleteDropRuleResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nrqlLookupsDelete?: Maybe<NrqlLookupsLookupFileSummary>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nrqlLookupsEdit?: Maybe<NrqlLookupsLookupFileSummary>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementCreateConfiguration?: Maybe<OpenAgentManagementConfiguration>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementCreateConfigurationRevision?: Maybe<OpenAgentManagementConfigurationRevision>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementCreateFleet?: Maybe<OpenAgentManagementFleet>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementDeleteConfiguration?: Maybe<OpenAgentManagementDeleteConfigurationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementDeleteConfigurationRevision?: Maybe<OpenAgentManagementDeleteConfigurationRevisionResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementDeleteFleet?: Maybe<OpenAgentManagementDeleteFleetResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementDeployAgentConfigurations?: Maybe<OpenAgentManagementDeployAgentConfigurationRevisionsResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementDeployFleetConfigurations?: Maybe<OpenAgentManagementDeployFleetConfigurationRevisionsResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementMoveAgentToFleet?: Maybe<OpenAgentManagementMoveAgentToFleetResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementSetAgentAuthState?: Maybe<OpenAgentManagementSetAgentAuthStateResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  openAgentManagementUpdateConfiguration?: Maybe<OpenAgentManagementConfiguration>;
  organizationCreate?: Maybe<OrganizationCreateOrganizationResponse>;
  organizationCreateSharedAccount?: Maybe<OrganizationCreateSharedAccountResponse>;
  organizationProvisioningUpdatePartnerSubscription: OrganizationProvisioningUpdateSubscriptionResult;
  organizationRevokeSharedAccount?: Maybe<OrganizationRevokeSharedAccountResponse>;
  organizationUpdate?: Maybe<OrganizationUpdateResponse>;
  organizationUpdateSharedAccount?: Maybe<OrganizationUpdateSharedAccountResponse>;
  partnershipMigrationMigrateAccount?: Maybe<PartnershipMigrationMigrateAccountResponse>;
  pixieLinkPixieProject?: Maybe<PixieLinkPixieProjectResult>;
  pixieRecordPixieTosAcceptance?: Maybe<PixieRecordPixieTosAcceptanceResult>;
  pixieUnlinkPixieProject?: Maybe<PixieLinkPixieProjectResult>;
  preReleaseProgramCreateProgram?: Maybe<PreReleaseProgramProgram>;
  preReleaseProgramCreateSubmission?: Maybe<PreReleaseProgramSubmission>;
  programmabilityTnCAccept: ProgrammabilityTnCAccepted;
  provisioningAddAccountEntitlementBlocklistToAccounts?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningAddBetaEntitlementToAccounts?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningAddEntitlementToAccounts?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningApplyAccountConfigurations?: Maybe<ProvisioningAccountConfigurationResult>;
  provisioningApplyAccountEnablementPackages?: Maybe<ProvisioningEnablementApplicationResult>;
  provisioningApplyEnablementToAccounts?: Maybe<ProvisioningBulkApplicationResult>;
  provisioningApplyPromoCodeToAccount?: Maybe<ProvisioningPromotionApplicationResult>;
  provisioningApplyPromotionToAccounts?: Maybe<ProvisioningBulkApplicationResult>;
  provisioningBulkAccountRefresh?: Maybe<ProvisioningBulkAccountRefreshPayload>;
  provisioningBulkCpmConversions?: Maybe<ProvisioningBulkCpmConversionsResult>;
  provisioningBulkRemoveEnablementFromAccounts?: Maybe<ProvisioningBulkApplicationResult>;
  provisioningConvertAccountToNonProfit?: Maybe<ProvisioningConvertAccountResult>;
  provisioningRefreshEntitlements?: Maybe<ProvisioningRefreshEntitlementResult>;
  provisioningRemoveAccountEnablementPackages?: Maybe<ProvisioningEnablementRemovalResult>;
  provisioningRemoveAccountEntitlementBlocklistFromAccounts?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningRemoveBetaEntitlementFromAccounts?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningRemoveEntitlementFromAccounts?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningRemovePlatformRecord?: Maybe<Array<ProvisioningRemovePlatformResult>>;
  provisioningRemovePromotionFromAccount?: Maybe<ProvisioningPromotionRemovalResult>;
  provisioningRemovePromotionFromAccounts?: Maybe<ProvisioningBulkApplicationResult>;
  provisioningToggleAccountConfiguration: ProvisioningAccountConfigurationResult;
  provisioningUpdateAccountConfiguration?: Maybe<ProvisioningAccountConfigurationResult>;
  provisioningUpdateAccountEntitlement?: Maybe<ProvisioningEntitleAccountsResult>;
  provisioningUpdateSubscriptions: ProvisioningUpdateSubscriptionResult;
  queryHistoryRecordNrql?: Maybe<QueryHistoryRecordNrqlResult>;
  referenceEntityCreateOrUpdateRepository?: Maybe<ReferenceEntityCreateRepositoryResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  rootCauseAnalysisSubmit?: Maybe<RootCauseAnalysisAsyncResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  savedViewsCreate?: Maybe<SavedViewsCreateResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  savedViewsDelete?: Maybe<SavedViewsDeleteResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  savedViewsUpdate?: Maybe<SavedViewsUpdateResult>;
  serviceLevelCreate?: Maybe<ServiceLevelIndicator>;
  serviceLevelCreateRecommendedIndicators?: Maybe<ServiceLevelRecommendedIndicatorsCreationResult>;
  serviceLevelDelete?: Maybe<ServiceLevelIndicator>;
  serviceLevelUpdate?: Maybe<ServiceLevelIndicator>;
  signupIntegrationsBulkCreatePromoCodes?: Maybe<SignupIntegrationsBulkCreatePromoCodesResult>;
  streamingExportCreateRule?: Maybe<StreamingExportRule>;
  streamingExportDeleteRule?: Maybe<StreamingExportRule>;
  streamingExportDisableRule?: Maybe<StreamingExportRule>;
  streamingExportEnableRule?: Maybe<StreamingExportRule>;
  streamingExportUpdateRule?: Maybe<StreamingExportRule>;
  supportDiagnosticsCategoryCreate?: Maybe<SupportGuidedDiagnosticsCategory>;
  supportDiagnosticsCategoryDelete?: Maybe<SupportGuidedDiagnosticsDeleteResponse>;
  supportDiagnosticsCategoryUpdate?: Maybe<SupportGuidedDiagnosticsCategory>;
  supportDiagnosticsEdgeCreate?: Maybe<SupportGuidedDiagnosticsEdge>;
  supportDiagnosticsEdgeDelete?: Maybe<SupportGuidedDiagnosticsEdgeDeleteResponse>;
  supportDiagnosticsFrameworkCreate?: Maybe<SupportGuidedDiagnosticsFramework>;
  supportDiagnosticsFrameworkDelete?: Maybe<SupportGuidedDiagnosticsDeleteResponse>;
  supportDiagnosticsFrameworkUpdateActiveRevision?: Maybe<SupportGuidedDiagnosticsFramework>;
  supportDiagnosticsFrameworkUpdateState?: Maybe<SupportGuidedDiagnosticsFramework>;
  supportDiagnosticsNerdgraphQueryAdd?: Maybe<SupportDiagnosticsNerdgraphQueryMutationResponse>;
  supportDiagnosticsNerdgraphQueryDelete?: Maybe<SupportDiagnosticsQueryDeleteResponse>;
  supportDiagnosticsNodeCreate?: Maybe<SupportGuidedDiagnosticsNode>;
  supportDiagnosticsNodeDelete?: Maybe<SupportGuidedDiagnosticsDeleteResponse>;
  supportDiagnosticsQueryAdd?: Maybe<SupportDiagnosticsQueryMutationResponse>;
  supportDiagnosticsQueryDelete?: Maybe<SupportDiagnosticsQueryDeleteResponse>;
  supportTicketAttachmentCreate?: Maybe<SupportTicketAttachment>;
  supportTicketCollaboratorsAdd?: Maybe<SupportTicketCollaboratorsResponse>;
  supportTicketCollaboratorsRemove?: Maybe<SupportTicketCollaboratorsResponse>;
  supportTicketCreate?: Maybe<SupportTicketCreateResponse>;
  supportTicketEscalate?: Maybe<SupportTicketEscalationResponse>;
  supportTicketMessageCreate?: Maybe<SupportTicketMessageCreateResponse>;
  syntheticsCreateBrokenLinksMonitor?: Maybe<SyntheticsBrokenLinksMonitorCreateMutationResult>;
  syntheticsCreateCertCheckMonitor?: Maybe<SyntheticsCertCheckMonitorCreateMutationResult>;
  syntheticsCreateDailyMonitorDowntime?: Maybe<SyntheticsDailyMonitorDowntimeMutationResult>;
  syntheticsCreateMonitor?: Maybe<SyntheticsMonitorMutationResult>;
  syntheticsCreateMonthlyMonitorDowntime?: Maybe<SyntheticsMonthlyMonitorDowntimeMutationResult>;
  syntheticsCreateOnceMonitorDowntime?: Maybe<SyntheticsOnceMonitorDowntimeMutationResult>;
  syntheticsCreatePrivateLocation?: Maybe<SyntheticsPrivateLocationMutationResult>;
  syntheticsCreateScriptApiMonitor?: Maybe<SyntheticsScriptApiMonitorCreateMutationResult>;
  syntheticsCreateScriptBrowserMonitor?: Maybe<SyntheticsScriptBrowserMonitorCreateMutationResult>;
  syntheticsCreateSecureCredential?: Maybe<SyntheticsSecureCredentialMutationResult>;
  syntheticsCreateSimpleBrowserMonitor?: Maybe<SyntheticsSimpleBrowserMonitorCreateMutationResult>;
  syntheticsCreateSimpleMonitor?: Maybe<SyntheticsSimpleBrowserMonitorCreateMutationResult>;
  syntheticsCreateStepMonitor?: Maybe<SyntheticsStepMonitorCreateMutationResult>;
  syntheticsCreateWeeklyMonitorDowntime?: Maybe<SyntheticsWeeklyMonitorDowntimeMutationResult>;
  syntheticsDeleteMonitor?: Maybe<SyntheticsMonitorDeleteMutationResult>;
  syntheticsDeleteMonitorByGuid?: Maybe<SyntheticsMonitorDeleteMutationResult>;
  syntheticsDeleteMonitorDowntime?: Maybe<SyntheticsMonitorDowntimeDeleteResult>;
  syntheticsDeletePrivateLocation?: Maybe<SyntheticsPrivateLocationDeleteResult>;
  syntheticsDeleteScript?: Maybe<SyntheticsMonitorScriptMutationResult>;
  syntheticsDeleteSecureCredential?: Maybe<SyntheticsSecureCredentialMutationResult>;
  syntheticsEditMonitorDowntime?: Maybe<SyntheticsMonitorDowntimeMutationResult>;
  syntheticsGenerateStepScript?: Maybe<SyntheticsGenerateMonitorScriptResult>;
  syntheticsPurgePrivateLocationQueue?: Maybe<SyntheticsPrivateLocationPurgeQueueResult>;
  syntheticsRunMonitor?: Maybe<SyntheticsRunMonitorMutationResult>;
  syntheticsStartAutomatedTest?: Maybe<SyntheticsAutomatedTestStartResult>;
  syntheticsTriggerScriptValidation?: Maybe<SyntheticsTriggerScriptValidationResponse>;
  syntheticsUpdateBrokenLinksMonitor?: Maybe<SyntheticsBrokenLinksMonitorUpdateMutationResult>;
  syntheticsUpdateCertCheckMonitor?: Maybe<SyntheticsCertCheckMonitorUpdateMutationResult>;
  syntheticsUpdateMonitor?: Maybe<SyntheticsMonitorMutationResult>;
  syntheticsUpdatePrivateLocation?: Maybe<SyntheticsPrivateLocationMutationResult>;
  syntheticsUpdateScript?: Maybe<SyntheticsMonitorScriptMutationResult>;
  syntheticsUpdateScriptApiMonitor?: Maybe<SyntheticsScriptApiMonitorUpdateMutationResult>;
  syntheticsUpdateScriptBrowserMonitor?: Maybe<SyntheticsScriptBrowserMonitorUpdateMutationResult>;
  syntheticsUpdateSecureCredential?: Maybe<SyntheticsSecureCredentialMutationResult>;
  syntheticsUpdateSimpleBrowserMonitor?: Maybe<SyntheticsSimpleBrowserMonitorUpdateMutationResult>;
  syntheticsUpdateSimpleMonitor?: Maybe<SyntheticsSimpleMonitorUpdateMutationResult>;
  syntheticsUpdateStepMonitor?: Maybe<SyntheticsStepMonitorUpdateMutationResult>;
  syntheticsUpgradeMonitorRuntime?: Maybe<SyntheticsUpgradeMonitorRuntimeResult>;
  syntheticsUpgradeMonitorRuntimeByAccountsAndStatuses?: Maybe<SyntheticsUpgradeMonitorRuntimeResult>;
  taggingAddTagsToEntity?: Maybe<TaggingMutationResult>;
  taggingDeleteTagFromEntity?: Maybe<TaggingMutationResult>;
  taggingDeleteTagValuesFromEntity?: Maybe<TaggingMutationResult>;
  taggingReplaceTagsOnEntity?: Maybe<TaggingMutationResult>;
  teamAddEntities?: Maybe<TeamDefinition>;
  teamCreate?: Maybe<TeamDefinition>;
  teamDelete?: Maybe<TeamDefinition>;
  teamDeleteEntities?: Maybe<TeamDefinition>;
  teamUpdate?: Maybe<TeamDefinition>;
  /** @deprecated This mutation will be removed. */
  teamUpdateEntityOwners?: Maybe<TeamUpdatedEntityOwners>;
  teamUpdateGlobalSettings?: Maybe<TeamGlobalSettings>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userEmailNotificationPreferencesUpdate?: Maybe<Array<Maybe<UserEmailNotificationPreferencesUpdatedNotificationPreferenceResponse>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userEmailNotificationPreferencesUpdateSuppressionGroup?: Maybe<Array<Maybe<UserEmailNotificationPreferencesUpdatedSuppressionGroupResponse>>>;
  userManagementAddUsersToGroups?: Maybe<UserManagementAddUsersToGroupsPayload>;
  userManagementCreateGroup?: Maybe<UserManagementCreateGroupPayload>;
  userManagementCreateUser?: Maybe<UserManagementCreateUserPayload>;
  userManagementDeleteGroup?: Maybe<UserManagementDeleteGroupPayload>;
  userManagementDeleteUser?: Maybe<UserManagementDeleteUserPayload>;
  userManagementRemoveUsersFromGroups?: Maybe<UserManagementRemoveUsersFromGroupsPayload>;
  userManagementUpdateGroup?: Maybe<UserManagementUpdateGroupPayload>;
  userManagementUpdateUser?: Maybe<UserManagementUpdateUserPayload>;
  userUpdatePreferences?: Maybe<UserUpdatePreferencesPayload>;
  userUpgradeSelf?: Maybe<UserUpgradeSelfPayload>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  websitePerformanceMonitoringCreateLighthouseScriptMonitor?: Maybe<WebsitePerformanceMonitoringCreateMonitorsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  websitePerformanceMonitoringCreateWebsitePerformanceMonitors?: Maybe<WebsitePerformanceMonitoringCreateMonitorsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  websitePerformanceMonitoringUpdateRequest?: Maybe<WebsitePerformanceMonitoringUpdateRequestResponse>;
  whatsNewSetLastReadDate?: Maybe<Scalars['EpochMilliseconds']['output']>;
  workloadCreate?: Maybe<WorkloadCollection>;
  workloadDelete?: Maybe<WorkloadCollection>;
  workloadDuplicate?: Maybe<WorkloadCollection>;
  workloadUpdate?: Maybe<WorkloadCollection>;
};


export type RootMutationTypeAbTestGetVariationArgs = {
  req: AbTestGetVariationRequest;
};


export type RootMutationTypeAbTestTrackEventArgs = {
  req: AbTestTrackEventRequest;
};


export type RootMutationTypeAccountFeatureConfigurationSetFedrampComplianceArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypeAccountFeatureConfigurationSetHipaaComplianceArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypeAccountManagementCreateAccountArgs = {
  managedAccount: AccountManagementCreateInput;
};


export type RootMutationTypeAccountManagementUpdateAccountArgs = {
  managedAccount: AccountManagementUpdateInput;
};


export type RootMutationTypeAccountShareInvitationsAcceptInvitationArgs = {
  token: Scalars['SecureValue']['input'];
};


export type RootMutationTypeAccountShareInvitationsCreateAccountShareInvitationArgs = {
  accountId: Scalars['Int']['input'];
  limitingRoleId: Scalars['Int']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeAccountShareInvitationsRevokeInvitationArgs = {
  id?: InputMaybe<Scalars['SecureValue']['input']>;
};


export type RootMutationTypeAgentApplicationCreateBrowserArgs = {
  accountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  settings?: InputMaybe<AgentApplicationBrowserSettingsInput>;
};


export type RootMutationTypeAgentApplicationCreateMobileArgs = {
  accountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};


export type RootMutationTypeAgentApplicationDeleteArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeAgentApplicationEnableApmBrowserArgs = {
  guid: Scalars['EntityGuid']['input'];
  settings?: InputMaybe<AgentApplicationBrowserSettingsInput>;
};


export type RootMutationTypeAgentApplicationSegmentsReplaceAllBrowserSegmentAllowListArgs = {
  allowList: AgentApplicationSegmentsBrowserSegmentAllowListInput;
  entityGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeAgentApplicationSettingsUpdateArgs = {
  guid: Scalars['EntityGuid']['input'];
  settings: AgentApplicationSettingsUpdateInput;
};


export type RootMutationTypeAgentTracesDeleteErrorTraceArgs = {
  guid: Scalars['EntityGuid']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAgentTracesDeleteErrorTracesArgs = {
  guid: Scalars['EntityGuid']['input'];
  realAgentIds: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type RootMutationTypeAgentTracesDeleteSqlTraceArgs = {
  guid: Scalars['EntityGuid']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAgentTracesDeleteSqlTracesArgs = {
  guid: Scalars['EntityGuid']['input'];
  realAgentIds: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type RootMutationTypeAgentTracesDeleteTransactionTraceArgs = {
  guid: Scalars['EntityGuid']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAgentTracesDeleteTransactionTracesArgs = {
  guid: Scalars['EntityGuid']['input'];
  realAgentIds: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type RootMutationTypeAiConnectAddEnrichersArgs = {
  accountId: Scalars['Int']['input'];
  enrichers: AiConnectEnrichers;
  workflowId: Scalars['ID']['input'];
};


export type RootMutationTypeAiConnectAddNotifierArgs = {
  accountId: Scalars['Int']['input'];
  notifiers: AiConnectNotifiers;
  workflowId: Scalars['ID']['input'];
};


export type RootMutationTypeAiConnectCreateWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  workflow: AiConnectWorkflowInput;
};


export type RootMutationTypeAiConnectDeleteEnricherArgs = {
  accountId: Scalars['Int']['input'];
  entityId: Scalars['ID']['input'];
};


export type RootMutationTypeAiConnectDeleteNotifierArgs = {
  accountId: Scalars['Int']['input'];
  entityId: Scalars['ID']['input'];
};


export type RootMutationTypeAiConnectDeleteWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  workflowId: Scalars['ID']['input'];
};


export type RootMutationTypeAiConnectEditEnricherArgs = {
  accountId: Scalars['Int']['input'];
  enricher: AiConnectEnrichersUpdate;
};


export type RootMutationTypeAiConnectEditNotifierArgs = {
  accountId: Scalars['Int']['input'];
  notifier: AiConnectNotifiersUpdate;
};


export type RootMutationTypeAiConnectEditWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  workflowUpdate: AiConnectWorkflowUpdate;
};


export type RootMutationTypeAiConnectTestNotifierArgs = {
  accountId: Scalars['Int']['input'];
  notifier: AiConnectNotifierTestInput;
};


export type RootMutationTypeAiConnectTestNotifierByIdArgs = {
  accountId: Scalars['Int']['input'];
  notifierId: Scalars['ID']['input'];
};


export type RootMutationTypeAiConnectTestWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  workflow: AiConnectWorkflowInput;
};


export type RootMutationTypeAiConnectTestWorkflowByIdArgs = {
  accountId: Scalars['Int']['input'];
  workflowId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsAcceptSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsCreateImplicitRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: AiDecisionsRuleBlueprint;
};


export type RootMutationTypeAiDecisionsCreateRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: AiDecisionsRuleBlueprint;
};


export type RootMutationTypeAiDecisionsCreateSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestion: AiDecisionsSuggestionBlueprint;
};


export type RootMutationTypeAiDecisionsDeclineSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsDeleteMergeFeedbackArgs = {
  accountId: Scalars['Int']['input'];
  childIssueId: Scalars['ID']['input'];
  parentIssueId: Scalars['ID']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsDeleteRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsDeleteSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsDisableRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsEnableRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsFindApplicableIncidentsArgs = {
  accountId: Scalars['Int']['input'];
  search: AiDecisionsSearchBlueprint;
};


export type RootMutationTypeAiDecisionsPostponeSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsRecordMergeFeedbackArgs = {
  accountId: Scalars['Int']['input'];
  childIssueId: Scalars['ID']['input'];
  opinion: AiDecisionsOpinion;
  parentIssueId: Scalars['ID']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsSimulateArgs = {
  accountId: Scalars['Int']['input'];
  simulation: AiDecisionsSimulationBlueprint;
};


export type RootMutationTypeAiDecisionsUpdateImplicitRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: AiDecisionsRuleBlueprint;
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiDecisionsUpdateRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: AiDecisionsRuleBlueprint;
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeAiIssuesAckIssueArgs = {
  accountId: Scalars['Int']['input'];
  issueId: Scalars['ID']['input'];
};


export type RootMutationTypeAiIssuesCloseIncidentArgs = {
  accountId: Scalars['Int']['input'];
  incidentId: Scalars['ID']['input'];
};


export type RootMutationTypeAiIssuesResolveIssueArgs = {
  accountId: Scalars['Int']['input'];
  issueId: Scalars['ID']['input'];
};


export type RootMutationTypeAiIssuesUnackIssueArgs = {
  accountId: Scalars['Int']['input'];
  issueId: Scalars['ID']['input'];
};


export type RootMutationTypeAiIssuesUpdateGracePeriodArgs = {
  accountId: Scalars['Int']['input'];
  gracePeriod: AiIssuesGracePeriodConfigurationInput;
};


export type RootMutationTypeAiIssuesUpdateIssueTtlArgs = {
  accountId: Scalars['Int']['input'];
  issueTtl: Scalars['Seconds']['input'];
};


export type RootMutationTypeAiNotificationsCreateChannelArgs = {
  accountId: Scalars['Int']['input'];
  channel: AiNotificationsChannelInput;
};


export type RootMutationTypeAiNotificationsCreateDestinationArgs = {
  accountId: Scalars['Int']['input'];
  destination: AiNotificationsDestinationInput;
};


export type RootMutationTypeAiNotificationsDeleteChannelArgs = {
  accountId: Scalars['Int']['input'];
  channelId: Scalars['ID']['input'];
};


export type RootMutationTypeAiNotificationsDeleteDestinationArgs = {
  accountId: Scalars['Int']['input'];
  destinationId: Scalars['ID']['input'];
};


export type RootMutationTypeAiNotificationsMergeDestinationsArgs = {
  accountId: Scalars['Int']['input'];
  mergeGroups: Array<AiNotificationsMergeGroup>;
};


export type RootMutationTypeAiNotificationsTestChannelArgs = {
  accountId: Scalars['Int']['input'];
  channel: AiNotificationsChannelInput;
  variables?: InputMaybe<Array<AiNotificationsDynamicVariable>>;
};


export type RootMutationTypeAiNotificationsTestChannelByIdArgs = {
  accountId: Scalars['Int']['input'];
  channelId: Scalars['ID']['input'];
  variables?: InputMaybe<Array<AiNotificationsDynamicVariable>>;
};


export type RootMutationTypeAiNotificationsTestDestinationArgs = {
  accountId: Scalars['Int']['input'];
  destination: AiNotificationsDestinationInput;
};


export type RootMutationTypeAiNotificationsTestDestinationByIdArgs = {
  accountId: Scalars['Int']['input'];
  destinationId: Scalars['ID']['input'];
  update?: InputMaybe<AiNotificationsDestinationUpdate>;
};


export type RootMutationTypeAiNotificationsUpdateChannelArgs = {
  accountId: Scalars['Int']['input'];
  channel: AiNotificationsChannelUpdate;
  channelId: Scalars['ID']['input'];
};


export type RootMutationTypeAiNotificationsUpdateDestinationArgs = {
  accountId: Scalars['Int']['input'];
  destination: AiNotificationsDestinationUpdate;
  destinationId: Scalars['ID']['input'];
};


export type RootMutationTypeAiOpsAddIncidentIntelligenceDestinationToConfigsArgs = {
  destination: AiOpsIncidentIntelligenceDestinationInput;
  ids: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeAiOpsArchiveProactiveDetectionConfigArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAiOpsClearUserMessageArgs = {
  userMessageId?: InputMaybe<AiOpsUserMessageId>;
};


export type RootMutationTypeAiOpsCloseAnomalyArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAiOpsCreateAnomalyCommentArgs = {
  accountId: Scalars['Int']['input'];
  anomalyId: Scalars['ID']['input'];
  text: Scalars['String']['input'];
};


export type RootMutationTypeAiOpsCreateDraftProactiveDetectionConfigArgs = {
  config?: InputMaybe<AiOpsProactiveDetectionConfigInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type RootMutationTypeAiOpsCreateIncidentCommentArgs = {
  accountId: Scalars['Int']['input'];
  incidentId: Scalars['ID']['input'];
  text: Scalars['String']['input'];
};


export type RootMutationTypeAiOpsCreateProactiveDetectionConfigArgs = {
  config?: InputMaybe<AiOpsProactiveDetectionConfigInput>;
};


export type RootMutationTypeAiOpsDeleteCommentArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAiOpsPreviewWebhookArgs = {
  webhook: AiOpsWebhookInput;
};


export type RootMutationTypeAiOpsRemoveIncidentIntelligenceDestinationFromConfigsArgs = {
  destination: AiOpsIncidentIntelligenceDestinationInput;
  ids: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeAiOpsStoreTrainingSessionArgs = {
  accountId: Scalars['Int']['input'];
  anomalyId: Scalars['String']['input'];
  feedback: AiOpsFeedbackLabel;
};


export type RootMutationTypeAiOpsTestWebhookArgs = {
  webhook: AiOpsWebhookInput;
};


export type RootMutationTypeAiOpsUpdateProactiveDetectionConfigArgs = {
  config?: InputMaybe<AiOpsProactiveDetectionConfigInput>;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAiOpsViewUserMessageArgs = {
  userMessageId?: InputMaybe<AiOpsUserMessageId>;
};


export type RootMutationTypeAiPostmortemCreatePostmortemArgs = {
  accountId: Scalars['Int']['input'];
  postmortem: AiPostmortemPostmortemBlueprint;
};


export type RootMutationTypeAiPostmortemDeletePostmortemArgs = {
  accountId: Scalars['Int']['input'];
  postmortemId: Scalars['ID']['input'];
};


export type RootMutationTypeAiPostmortemUpdatePostmortemArgs = {
  accountId: Scalars['Int']['input'];
  postmortem: AiPostmortemPostmortemBlueprint;
  postmortemId: Scalars['ID']['input'];
};


export type RootMutationTypeAiTopologyCollectorCreateEdgesArgs = {
  accountId: Scalars['Int']['input'];
  edges: Array<AiTopologyCollectorEdgeBlueprint>;
};


export type RootMutationTypeAiTopologyCollectorCreateVerticesArgs = {
  accountId: Scalars['Int']['input'];
  vertices: Array<AiTopologyCollectorVertexBlueprint>;
};


export type RootMutationTypeAiTopologyCollectorDeleteEdgesArgs = {
  accountId: Scalars['Int']['input'];
  edgeIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeAiTopologyCollectorDeleteVerticesArgs = {
  accountId: Scalars['Int']['input'];
  vertexNames: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeAiWorkflowsCreateWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  createWorkflowData: AiWorkflowsCreateWorkflowInput;
};


export type RootMutationTypeAiWorkflowsDeleteWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  deleteChannels?: Scalars['Boolean']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAiWorkflowsTestWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  testWorkflowData: AiWorkflowsTestWorkflowInput;
};


export type RootMutationTypeAiWorkflowsUpdateWorkflowArgs = {
  accountId: Scalars['Int']['input'];
  deleteUnusedChannels?: Scalars['Boolean']['input'];
  updateWorkflowData: AiWorkflowsUpdateWorkflowInput;
};


export type RootMutationTypeAlertsConditionDeleteArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsConditionUpdateEnabledArgs = {
  accountId: Scalars['Int']['input'];
  enabled: Scalars['Boolean']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsMutingRuleCreateArgs = {
  accountId: Scalars['Int']['input'];
  rule: AlertsMutingRuleInput;
};


export type RootMutationTypeAlertsMutingRuleDeleteArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsMutingRuleUpdateArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
  rule: AlertsMutingRuleUpdateInput;
};


export type RootMutationTypeAlertsNotificationChannelCreateArgs = {
  accountId: Scalars['Int']['input'];
  notificationChannel: AlertsNotificationChannelCreateConfiguration;
};


export type RootMutationTypeAlertsNotificationChannelDeleteArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNotificationChannelUpdateArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
  notificationChannel: AlertsNotificationChannelUpdateConfiguration;
};


export type RootMutationTypeAlertsNotificationChannelsAddToPolicyArgs = {
  accountId: Scalars['Int']['input'];
  notificationChannelIds: Array<Scalars['ID']['input']>;
  policyId: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNotificationChannelsRemoveFromPolicyArgs = {
  accountId: Scalars['Int']['input'];
  notificationChannelIds: Array<Scalars['ID']['input']>;
  policyId: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNrqlConditionBaselineCreateArgs = {
  accountId: Scalars['Int']['input'];
  condition: AlertsNrqlConditionBaselineInput;
  policyId: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNrqlConditionBaselineUpdateArgs = {
  accountId: Scalars['Int']['input'];
  condition: AlertsNrqlConditionUpdateBaselineInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNrqlConditionOutlierCreateArgs = {
  accountId: Scalars['Int']['input'];
  condition: AlertsNrqlConditionOutlierInput;
  policyId: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNrqlConditionOutlierUpdateArgs = {
  accountId: Scalars['Int']['input'];
  condition: AlertsNrqlConditionUpdateOutlierInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNrqlConditionStaticCreateArgs = {
  accountId: Scalars['Int']['input'];
  condition: AlertsNrqlConditionStaticInput;
  policyId: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsNrqlConditionStaticUpdateArgs = {
  accountId: Scalars['Int']['input'];
  condition: AlertsNrqlConditionUpdateStaticInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsPolicyCreateArgs = {
  accountId: Scalars['Int']['input'];
  policy: AlertsPolicyInput;
};


export type RootMutationTypeAlertsPolicyDeleteArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeAlertsPolicyUpdateArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
  policy: AlertsPolicyUpdateInput;
};


export type RootMutationTypeAnomalyDetectorConfigurationsAnomalyDetectorDeleteArgs = {
  anomalyDetectorId: Scalars['Int']['input'];
};


export type RootMutationTypeAnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateArgs = {
  accountId: Scalars['Int']['input'];
  anomalyDetector: AnomalyDetectorConfigurationsCreateEntityTypeAnomalyDetectorInput;
};


export type RootMutationTypeAnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateArgs = {
  anomalyDetector: AnomalyDetectorConfigurationsUpdateEntityTypeAnomalyDetectorInput;
  anomalyDetectorId: Scalars['Int']['input'];
};


export type RootMutationTypeAnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateArgs = {
  accountId: Scalars['Int']['input'];
  anomalyDetector: AnomalyDetectorConfigurationsCreateNrqlAnomalyDetectorInput;
};


export type RootMutationTypeAnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateArgs = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  anomalyDetector?: InputMaybe<AnomalyDetectorConfigurationsUpdateNrqlAnomalyDetectorInput>;
  anomalyDetectorId: Scalars['Int']['input'];
};


export type RootMutationTypeAnomalyDetectorConfigurationsUpdateStatusArgs = {
  anomalyDetectorId: Scalars['Int']['input'];
  status: AnomalyDetectorConfigurationsAnomalyDetectorStatus;
};


export type RootMutationTypeAnomalyDetectorConfigurationsValidateNrqlSignalArgs = {
  accountId: Scalars['Int']['input'];
  nrql: Scalars['Nrql']['input'];
};


export type RootMutationTypeAnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateArgs = {
  anomalyDetector: AnomalyDetectorConfigurationsCreateWorkloadAnomalyDetectorInput;
  workloadGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeAnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateArgs = {
  anomalyDetector: AnomalyDetectorConfigurationsUpdateWorkloadAnomalyDetectorInput;
  anomalyDetectorId: Scalars['Int']['input'];
};


export type RootMutationTypeApiAccessCreateKeysArgs = {
  keys: ApiAccessCreateInput;
};


export type RootMutationTypeApiAccessDeleteKeysArgs = {
  keys: ApiAccessDeleteInput;
};


export type RootMutationTypeApiAccessUpdateKeysArgs = {
  keys: ApiAccessUpdateInput;
};


export type RootMutationTypeApmApplicationEntityChangeSettingsArgs = {
  guid: Scalars['EntityGuid']['input'];
  settings: ApmApplicationEntitySettings;
};


export type RootMutationTypeAuthorizationManagementGrantAccessArgs = {
  grantAccessOptions?: InputMaybe<AuthorizationManagementGrantAccess>;
};


export type RootMutationTypeAuthorizationManagementRevokeAccessArgs = {
  revokeAccessOptions?: InputMaybe<AuthorizationManagementRevokeAccess>;
};


export type RootMutationTypeCartographerCollectorCreateEdgesArgs = {
  accountId: Scalars['Int']['input'];
  edges: Array<CartographerCollectorEdgeBlueprint>;
};


export type RootMutationTypeCartographerCollectorCreateVerticesArgs = {
  accountId: Scalars['Int']['input'];
  vertices: Array<CartographerCollectorVertexBlueprint>;
};


export type RootMutationTypeCartographerCollectorDeleteEdgesArgs = {
  accountId: Scalars['Int']['input'];
  edgeIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeCartographerCollectorDeleteVerticesArgs = {
  accountId: Scalars['Int']['input'];
  vertexIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeChangeTrackingCreateChangeTrackingEventArgs = {
  changeTrackingEvent: ChangeTrackingChangeTrackingInput;
  dataHandlingRules?: InputMaybe<ChangeTrackingDataHandlingRules>;
  entityGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeChangeTrackingCreateDeploymentArgs = {
  dataHandlingRules?: InputMaybe<ChangeTrackingDataHandlingRules>;
  deployment: ChangeTrackingDeploymentInput;
};


export type RootMutationTypeChaosStartArgs = {
  configuration: ChaosConfiguration;
};


export type RootMutationTypeCloudConfigureIntegrationArgs = {
  accountId: Scalars['Int']['input'];
  integrations: CloudIntegrationsInput;
};


export type RootMutationTypeCloudDisableIntegrationArgs = {
  accountId: Scalars['Int']['input'];
  integrations?: InputMaybe<CloudDisableIntegrationsInput>;
};


export type RootMutationTypeCloudGcpServiceAccountAuthArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypeCloudLinkAccountArgs = {
  accountId: Scalars['Int']['input'];
  accounts?: InputMaybe<CloudLinkCloudAccountsInput>;
};


export type RootMutationTypeCloudMigrateAwsGovCloudToAssumeRoleArgs = {
  accountId: Scalars['Int']['input'];
  accounts: Array<CloudAwsGovCloudMigrateToAssumeroleInput>;
};


export type RootMutationTypeCloudRenameAccountArgs = {
  accountId: Scalars['Int']['input'];
  accounts?: InputMaybe<Array<InputMaybe<CloudRenameAccountsInput>>>;
};


export type RootMutationTypeCloudUnlinkAccountArgs = {
  accountId: Scalars['Int']['input'];
  accounts?: InputMaybe<Array<InputMaybe<CloudUnlinkAccountsInput>>>;
};


export type RootMutationTypeCollaborationCreateCodeMarkArgs = {
  code: Scalars['String']['input'];
  file: Scalars['String']['input'];
  permalink: Scalars['String']['input'];
  repo: Scalars['String']['input'];
  sha: Scalars['String']['input'];
};


export type RootMutationTypeCollaborationCreateCommentArgs = {
  assistant?: InputMaybe<Scalars['String']['input']>;
  assistantConfig?: InputMaybe<Array<InputMaybe<CollaborationAssistantConfigInput>>>;
  body: Scalars['String']['input'];
  contextMetadata?: InputMaybe<Scalars['CollaborationRawContextMetadata']['input']>;
  destinationId?: InputMaybe<Scalars['String']['input']>;
  nRConnectionId?: InputMaybe<Scalars['String']['input']>;
  referenceUrl?: InputMaybe<Scalars['String']['input']>;
  slackChannelId?: InputMaybe<Scalars['String']['input']>;
  suppress3rdPartyFileShare?: InputMaybe<Scalars['Boolean']['input']>;
  threadId: Scalars['ID']['input'];
  timePickerFrom?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  timePickerTo?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
};


export type RootMutationTypeCollaborationCreateContextArgs = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  contextMetadata?: InputMaybe<Scalars['CollaborationRawContextMetadata']['input']>;
  entityGuid?: InputMaybe<Scalars['EntityGuid']['input']>;
  id: Scalars['ID']['input'];
  referenceUrl?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeCollaborationCreateEmailArgs = {
  emailAddress: Scalars['String']['input'];
};


export type RootMutationTypeCollaborationCreateExternalServiceConnectionArgs = {
  channelId?: InputMaybe<Scalars['ID']['input']>;
  sessionId: Scalars['ID']['input'];
  threadId: Scalars['ID']['input'];
  type: Scalars['String']['input'];
};


export type RootMutationTypeCollaborationCreateMentionArgs = {
  commentId: Scalars['ID']['input'];
  externalApplicationType?: InputMaybe<CollaborationExternalApplicationType>;
  externalCreatorId?: InputMaybe<Scalars['ID']['input']>;
  mentionableItemId: Scalars['ID']['input'];
  type: Scalars['String']['input'];
};


export type RootMutationTypeCollaborationCreateThreadArgs = {
  contextId: Scalars['ID']['input'];
  contextMetadata?: InputMaybe<Scalars['CollaborationRawContextMetadata']['input']>;
  externalApplicationType?: InputMaybe<Scalars['String']['input']>;
  referenceUrl?: InputMaybe<Scalars['String']['input']>;
  visibility?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeCollaborationDeactivateCodeMarkArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationDeactivateCommentArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationDeactivateContextArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationDeactivateExternalServiceConnectionArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationDeactivateFileArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationDeactivateMentionArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationDeactivateThreadArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationFeedbackOnBotResponseArgs = {
  content?: InputMaybe<Scalars['String']['input']>;
  rating: Scalars['Int']['input'];
  responseId: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationGetUploadUrlArgs = {
  fileName: Scalars['ID']['input'];
  isScreenshot?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeCollaborationSendMessageArgs = {
  accountId: Scalars['Int']['input'];
  body: Scalars['String']['input'];
  destinationId?: InputMaybe<Scalars['String']['input']>;
  emailAddress?: InputMaybe<Scalars['String']['input']>;
  referenceUrl: Scalars['String']['input'];
  sharedToType: Scalars['String']['input'];
  slackChannelId?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeCollaborationSetExternalServiceConnectionChannelArgs = {
  channelId: Scalars['ID']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationSocketSubscribeArgs = {
  nrConnectionId?: InputMaybe<Scalars['String']['input']>;
  subscriptionKeys?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type RootMutationTypeCollaborationSubscribeToThreadArgs = {
  threadId: Scalars['ID']['input'];
  userId?: InputMaybe<Scalars['ID']['input']>;
};


export type RootMutationTypeCollaborationUnsubscribeFromThreadArgs = {
  threadId: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationUpdateCommentArgs = {
  body: Scalars['String']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationUpdateContextAddCommentArgs = {
  commentId: Scalars['ID']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationUpdateContextAddThreadArgs = {
  id: Scalars['ID']['input'];
  threadId: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationUpdateSubscriptionReadInfoArgs = {
  commentsReadCount?: InputMaybe<Scalars['Int']['input']>;
  lastCommentReadId?: InputMaybe<Scalars['ID']['input']>;
  mentionsReadCount?: InputMaybe<Scalars['Int']['input']>;
  threadId: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationUpdateThreadAddCommentArgs = {
  commentId: Scalars['ID']['input'];
};


export type RootMutationTypeCollaborationUpdateThreadStatusArgs = {
  id: Scalars['ID']['input'];
  status?: InputMaybe<CollaborationStatus>;
};


export type RootMutationTypeCommerceCancelSubscriptionArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypeCommerceExecutePaymentRunArgs = {
  accountId: Scalars['Int']['input'];
  invoiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type RootMutationTypeCommerceExtendRetentionArgs = {
  accountId: Scalars['Int']['input'];
  numberOfDays: Scalars['Int']['input'];
};


export type RootMutationTypeCommerceNotificationsMuteNotificationArgs = {
  accountId: Scalars['Int']['input'];
  notificationId: Scalars['ID']['input'];
  notificationType: CommerceNotificationsNotificationType;
};


export type RootMutationTypeCommercePurchaseOfferArgs = {
  accountId: Scalars['Int']['input'];
  offerId: Scalars['String']['input'];
  options?: InputMaybe<CommerceOptionsInput>;
};


export type RootMutationTypeCommerceSetDefaultPaymentMethodArgs = {
  accountId: Scalars['Int']['input'];
  paymentMethodId: Scalars['ID']['input'];
};


export type RootMutationTypeCommerceUpdateBillingInfoArgs = {
  accountId: Scalars['Int']['input'];
  billingInfo: CommerceBillingInfoInput;
};


export type RootMutationTypeContentSharingShareWithRecipientsArgs = {
  comment?: InputMaybe<Scalars['String']['input']>;
  recipients: Array<ContentSharingRecipientInput>;
  sharedContent: Array<ContentSharingContentInput>;
};


export type RootMutationTypeCorrelationAcceptSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationCreateImplicitRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: CorrelationRuleBlueprint;
};


export type RootMutationTypeCorrelationCreateRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: CorrelationRuleBlueprint;
};


export type RootMutationTypeCorrelationCreateSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestion: CorrelationSuggestionBlueprint;
};


export type RootMutationTypeCorrelationDeclineSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationDeleteMergeFeedbackArgs = {
  accountId: Scalars['Int']['input'];
  childIssueId: Scalars['ID']['input'];
  parentIssueId: Scalars['ID']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationDeleteMergeFeedbackByRulesArgs = {
  accountId: Scalars['Int']['input'];
  childIssueId: Scalars['ID']['input'];
  parentIssueId: Scalars['ID']['input'];
  ruleIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeCorrelationDeleteRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationDeleteSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationDisableRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationEnableRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationFindApplicableIncidentsArgs = {
  accountId: Scalars['Int']['input'];
  search: CorrelationSearchBlueprint;
};


export type RootMutationTypeCorrelationPostponeSuggestionArgs = {
  accountId: Scalars['Int']['input'];
  suggestionId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationRecordMergeFeedbackArgs = {
  accountId: Scalars['Int']['input'];
  childIssueId: Scalars['ID']['input'];
  opinion: CorrelationOpinion;
  parentIssueId: Scalars['ID']['input'];
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationRecordMergeFeedbackByRulesArgs = {
  accountId: Scalars['Int']['input'];
  childIssueId: Scalars['ID']['input'];
  opinion: CorrelationOpinion;
  parentIssueId: Scalars['ID']['input'];
  ruleIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeCorrelationSimulateArgs = {
  accountId: Scalars['Int']['input'];
  simulation: CorrelationSimulationBlueprint;
};


export type RootMutationTypeCorrelationUpdateImplicitRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: CorrelationRuleBlueprint;
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationUpdateRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: CorrelationRuleBlueprint;
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCorrelationUpsertRuleAnnotationsArgs = {
  accountId: Scalars['Int']['input'];
  ruleAnnotation: CorrelationAnnotationInput;
  ruleId: Scalars['ID']['input'];
};


export type RootMutationTypeCourierNotificationPreferencesUpdateArgs = {
  updatedNotificationPreferences: Array<InputMaybe<CourierNotificationPreferencesUpdatedNotificationPreference>>;
  userId: Scalars['String']['input'];
};


export type RootMutationTypeDashboardAddWidgetsToPageArgs = {
  guid: Scalars['EntityGuid']['input'];
  widgets: Array<DashboardWidgetInput>;
};


export type RootMutationTypeDashboardCreateArgs = {
  accountId: Scalars['Int']['input'];
  dashboard: DashboardInput;
};


export type RootMutationTypeDashboardCreateLiveUrlArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeDashboardCreateSnapshotUrlArgs = {
  guid: Scalars['EntityGuid']['input'];
  params?: InputMaybe<DashboardSnapshotUrlInput>;
};


export type RootMutationTypeDashboardDeleteArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeDashboardRevokeLiveUrlArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeDashboardUndeleteArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeDashboardUpdateArgs = {
  dashboard: DashboardInput;
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeDashboardUpdatePageArgs = {
  guid: Scalars['EntityGuid']['input'];
  page: DashboardUpdatePageInput;
};


export type RootMutationTypeDashboardUpdateWidgetsInPageArgs = {
  guid: Scalars['EntityGuid']['input'];
  widgets: Array<DashboardUpdateWidgetInput>;
};


export type RootMutationTypeDashboardWidgetRevokeLiveUrlArgs = {
  uuid: Scalars['ID']['input'];
};


export type RootMutationTypeDataManagementCopyRetentionsArgs = {
  destinationAccountIds: Array<InputMaybe<Scalars['Int']['input']>>;
  sourceAccountId: Scalars['Int']['input'];
};


export type RootMutationTypeDataManagementCreateEventRetentionRuleArgs = {
  accountId: Scalars['Int']['input'];
  namespace: Scalars['String']['input'];
  retentionInDays: Scalars['Int']['input'];
};


export type RootMutationTypeDataManagementCreateRetentionRulesArgs = {
  accountId: Scalars['Int']['input'];
  retentionRules?: InputMaybe<Array<InputMaybe<DataManagementRuleInput>>>;
};


export type RootMutationTypeDataManagementDeleteEventRetentionRuleArgs = {
  accountId: Scalars['Int']['input'];
  namespace: Scalars['String']['input'];
};


export type RootMutationTypeDataManagementUpdateFeatureSettingsArgs = {
  accountId: Scalars['Int']['input'];
  setting?: InputMaybe<DataManagementAccountFeatureSettingInput>;
};


export type RootMutationTypeDiscussionCreateErrorGroupPostArgs = {
  errorGroupGuid: Scalars['EntityGuid']['input'];
  post?: InputMaybe<DiscussionCreateErrorGroupPostInput>;
};


export type RootMutationTypeDiscussionDeleteErrorGroupPostArgs = {
  errorGroupGuid: Scalars['EntityGuid']['input'];
  postId: Scalars['String']['input'];
};


export type RootMutationTypeDiscussionUpdateErrorGroupPostArgs = {
  errorGroupGuid: Scalars['EntityGuid']['input'];
  post: DiscussionUpdateErrorGroupPostInput;
  postId: Scalars['String']['input'];
};


export type RootMutationTypeDomainManagementCreateDomainArgs = {
  domainName: Scalars['String']['input'];
};


export type RootMutationTypeDomainManagementDeleteDomainArgs = {
  domainId: Scalars['String']['input'];
};


export type RootMutationTypeDomainManagementRetryDomainVerificationArgs = {
  domainId: Scalars['String']['input'];
};


export type RootMutationTypeDomainManagementUpdateCaptureConfigurationArgs = {
  domainId: Scalars['String']['input'];
  joinOrganizationPreference?: InputMaybe<DomainManagementJoinOrganizationPreference>;
  message?: InputMaybe<Scalars['String']['input']>;
  newUserConfiguration?: InputMaybe<DomainManagementNewUserConfigurationInput>;
};


export type RootMutationTypeEdgeCreateTraceFilterRulesArgs = {
  accountId: Scalars['Int']['input'];
  rules: EdgeCreateTraceFilterRulesInput;
  traceObserverId: Scalars['Int']['input'];
};


export type RootMutationTypeEdgeCreateTraceObserverArgs = {
  accountId: Scalars['Int']['input'];
  traceObserverConfigs: Array<EdgeCreateTraceObserverInput>;
};


export type RootMutationTypeEdgeDeleteTraceFilterRulesArgs = {
  accountId: Scalars['Int']['input'];
  rules: EdgeDeleteTraceFilterRulesInput;
  traceObserverId: Scalars['Int']['input'];
};


export type RootMutationTypeEdgeDeleteTraceObserversArgs = {
  accountId: Scalars['Int']['input'];
  traceObserverConfigs: Array<EdgeDeleteTraceObserverInput>;
};


export type RootMutationTypeEdgeUpdateTraceObserversArgs = {
  accountId: Scalars['Int']['input'];
  traceObserverConfigs: Array<EdgeUpdateTraceObserverInput>;
};


export type RootMutationTypeEntityDeleteArgs = {
  forceDelete?: Scalars['Boolean']['input'];
  guids: Array<Scalars['EntityGuid']['input']>;
};


export type RootMutationTypeEntityGoldenMetricsOverrideArgs = {
  context: EntityGoldenContextInput;
  domainType: DomainTypeInput;
  metrics: Array<EntityGoldenMetricInput>;
};


export type RootMutationTypeEntityGoldenMetricsResetArgs = {
  context: EntityGoldenContextInput;
  domainType: DomainTypeInput;
};


export type RootMutationTypeEntityGoldenTagsOverrideArgs = {
  context: EntityGoldenContextInput;
  domainType: DomainTypeInput;
  tags: Array<EntityGoldenTagInput>;
};


export type RootMutationTypeEntityGoldenTagsResetArgs = {
  context: EntityGoldenContextInput;
  domainType: DomainTypeInput;
};


export type RootMutationTypeEntityKeepAliveArgs = {
  guids: Array<Scalars['EntityGuid']['input']>;
};


export type RootMutationTypeEntityRelationshipUserDefinedCreateOrReplaceArgs = {
  sourceEntityGuid: Scalars['EntityGuid']['input'];
  targetEntityGuid: Scalars['EntityGuid']['input'];
  type: EntityRelationshipEdgeType;
};


export type RootMutationTypeEntityRelationshipUserDefinedDeleteArgs = {
  sourceEntityGuid: Scalars['EntityGuid']['input'];
  targetEntityGuid: Scalars['EntityGuid']['input'];
  type?: InputMaybe<EntityRelationshipEdgeType>;
};


export type RootMutationTypeErrorTrackingAssignErrorGroupArgs = {
  assignment: ErrorTrackingAssignErrorGroupInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeErrorTrackingCommentOnErrorGroupArgs = {
  comment: ErrorTrackingCommentOnErrorGroupInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeErrorTrackingConfigureErrorGroupChannelArgs = {
  channel: ErrorTrackingErrorGroupChannelInput;
  id: Scalars['ID']['input'];
  workloadGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeErrorTrackingConfigureNotificationPolicyArgs = {
  policy: ErrorTrackingConfigureNotificationPolicyInput;
  workloadGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeErrorTrackingDeleteCommentFromErrorGroupArgs = {
  comment: ErrorTrackingDeleteCommentFromErrorGroupInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeErrorTrackingDeleteErrorGroupChannelArgs = {
  channelId: Scalars['ID']['input'];
  id: Scalars['ID']['input'];
  workloadGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeErrorTrackingDeleteNotificationPolicyArgs = {
  workloadGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeErrorTrackingUpdateErrorGroupStateArgs = {
  id: Scalars['ID']['input'];
  state: ErrorTrackingUpdateErrorGroupStateInput;
};


export type RootMutationTypeErrorsInboxAssignErrorGroupArgs = {
  assignment: ErrorsInboxAssignErrorGroupInput;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeErrorsInboxConfigureNotificationPolicyArgs = {
  entityGuid: Scalars['EntityGuid']['input'];
  policy: ErrorsInboxConfigureNotificationPolicyInput;
};


export type RootMutationTypeErrorsInboxDeleteErrorGroupResourceArgs = {
  id: Scalars['ID']['input'];
  resourceId: Scalars['ID']['input'];
};


export type RootMutationTypeErrorsInboxDeleteNotificationPolicyArgs = {
  entityGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeErrorsInboxUpdateErrorGroupStateArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  resolveInNextVersion?: InputMaybe<Scalars['Boolean']['input']>;
  state: ErrorsInboxErrorGroupState;
  versions?: InputMaybe<ErrorsInboxStateVersionInput>;
};


export type RootMutationTypeEventTransformationCreateRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: EventTransformationRuleInput;
};


export type RootMutationTypeEventTransformationUpdateRuleArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['Int']['input'];
  updates: EventTransformationRuleUpdates;
};


export type RootMutationTypeEventsToMetricsCreateRuleArgs = {
  rules: Array<InputMaybe<EventsToMetricsCreateRuleInput>>;
};


export type RootMutationTypeEventsToMetricsDeleteRuleArgs = {
  deletes: Array<InputMaybe<EventsToMetricsDeleteRuleInput>>;
};


export type RootMutationTypeEventsToMetricsUpdateRuleArgs = {
  updates: Array<InputMaybe<EventsToMetricsUpdateRuleInput>>;
};


export type RootMutationTypeGrokCreateFeedbackArgs = {
  capabilityId?: InputMaybe<Scalars['ID']['input']>;
  messageId: Scalars['ID']['input'];
  nerdletId?: InputMaybe<Scalars['String']['input']>;
  sentiment: Scalars['Boolean']['input'];
  sentimentCategories?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sentimentDetail?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeGrokCreatePromptArgs = {
  accountId: Scalars['Int']['input'];
  assistant: Scalars['String']['input'];
  assistantConfig?: InputMaybe<Array<InputMaybe<GrokAssistantConfigInput>>>;
  nRConnectionId?: InputMaybe<Scalars['String']['input']>;
  prompt: Scalars['String']['input'];
  source?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeGrokUpdateFeedbackArgs = {
  id: Scalars['ID']['input'];
  sentiment: Scalars['Boolean']['input'];
  sentimentCategories?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sentimentDetail?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeHistoricalDataExportCancelExportArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['String']['input'];
};


export type RootMutationTypeHistoricalDataExportCreateExportArgs = {
  accountId: Scalars['Int']['input'];
  nrql?: InputMaybe<Scalars['Nrql']['input']>;
};


export type RootMutationTypeIncidentIntelligenceEnvironmentConsentAccountsArgs = {
  accountIds: Array<InputMaybe<Scalars['Int']['input']>>;
};


export type RootMutationTypeIncidentIntelligenceEnvironmentCreateEnvironmentArgs = {
  associatedAccountIds?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  incidentIntelligenceAccountId: Scalars['Int']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeIncidentIntelligenceEnvironmentDeleteEnvironmentArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypeIncidentIntelligenceEnvironmentDissentAccountsArgs = {
  accountIds: Array<InputMaybe<Scalars['Int']['input']>>;
};


export type RootMutationTypeIncidentIntelligencePlatformCreatePathwayArgs = {
  accountId: Scalars['Int']['input'];
  pathway?: InputMaybe<IncidentIntelligencePlatformPathwayInput>;
};


export type RootMutationTypeIncidentIntelligencePlatformCreatePlatformPagerdutyArgs = {
  accountId: Scalars['Int']['input'];
  platformConfiguration: IncidentIntelligencePlatformPagerDutyPlatformConfigurationInput;
  platformEnabled: Scalars['Boolean']['input'];
  platformType: IncidentIntelligencePlatformPlatforms;
};


export type RootMutationTypeIncidentIntelligencePlatformDeletePathwayArgs = {
  accountId: Scalars['Int']['input'];
  pathwayId: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformDeletePlatformArgs = {
  accountId: Scalars['Int']['input'];
  platformType: IncidentIntelligencePlatformPlatforms;
};


export type RootMutationTypeIncidentIntelligencePlatformDeprovisionDestinationArgs = {
  accountId: Scalars['Int']['input'];
  destinationId: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformDeprovisionSourceArgs = {
  accountId: Scalars['Int']['input'];
  sourceId: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformPagerdutySetAdminArgs = {
  accountId: Scalars['Int']['input'];
  user: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformProvisionDestinationPagerdutyArgs = {
  accountId: Scalars['Int']['input'];
  channelConfiguration: IncidentIntelligencePlatformPagerDutyDestinationConfigurationInput;
  serviceId: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformProvisionDestinationWebhookArgs = {
  accountId: Scalars['Int']['input'];
  channelConfiguration: IncidentIntelligencePlatformWebHookDestinationConfigurationInput;
};


export type RootMutationTypeIncidentIntelligencePlatformProvisionSourcePagerdutyArgs = {
  accountId: Scalars['Int']['input'];
  serviceId: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformSyncServicesPagerdutyArgs = {
  accountId: Scalars['Int']['input'];
  forceSync?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeIncidentIntelligencePlatformUpdateDestinationPagerdutyArgs = {
  accountId: Scalars['Int']['input'];
  channelConfiguration: IncidentIntelligencePlatformPagerDutyDestinationConfigurationInput;
  destinationId: Scalars['String']['input'];
};


export type RootMutationTypeIncidentIntelligencePlatformUpdateDestinationWebhookArgs = {
  accountId: Scalars['Int']['input'];
  channelConfiguration: IncidentIntelligencePlatformWebHookDestinationConfigurationInput;
  destinationId: Scalars['String']['input'];
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeIncidentIntelligencePlatformUpdatePathwayArgs = {
  accountId: Scalars['Int']['input'];
  pathway?: InputMaybe<IncidentIntelligencePlatformUpdatePathwayInput>;
};


export type RootMutationTypeIncidentIntelligencePlatformUpdatePlatformPagerdutyArgs = {
  accountId: Scalars['Int']['input'];
  platformConfiguration?: InputMaybe<IncidentIntelligencePlatformPagerDutyPlatformConfigurationInput>;
  platformEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  platformType: IncidentIntelligencePlatformPlatforms;
};


export type RootMutationTypeInfrastructureAgentRunIntegrationArgs = {
  guid: Scalars['EntityGuid']['input'];
  integrationArgs?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  integrationName: Scalars['String']['input'];
  target: InfrastructureAgentTargetDetails;
};


export type RootMutationTypeInfrastructureAgentStopIntegrationArgs = {
  guid: Scalars['EntityGuid']['input'];
  integrationArgs?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  integrationName: Scalars['String']['input'];
  target: InfrastructureAgentTargetDetails;
};


export type RootMutationTypeInstallationCreateInstallStatusArgs = {
  accountId: Scalars['Int']['input'];
  installStatus: InstallationInstallStatusInput;
};


export type RootMutationTypeInstallationCreateRecipeEventArgs = {
  accountId: Scalars['Int']['input'];
  status: InstallationRecipeStatus;
};


export type RootMutationTypeInstallationDeleteInstallArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypeInvitationsInviteUserArgs = {
  accountId: Scalars['Int']['input'];
  invitee: InvitationsInviteeInput;
};


export type RootMutationTypeInvitationsInviteUserToOrganizationArgs = {
  invitee: InvitationsInviteeInput;
  inviteeName?: InputMaybe<Scalars['String']['input']>;
  sourceInfo?: InputMaybe<InvitationsSourceInfoInput>;
};


export type RootMutationTypeInvitationsManageAddUserToOrganizationRequestsArgs = {
  addRequestResponse: InvitationsAddUserRequestAdminResponse;
  requestIds: Array<Scalars['ID']['input']>;
  requestResponseMessage?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeInvitationsManageInviteUserToOrganizationRequestsArgs = {
  inviteRequestResponse: InvitationsUserInviteRequestAdminResponse;
  inviteRequestResponseMessage?: InputMaybe<Scalars['String']['input']>;
  requestIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeInvitationsManageUserUpgradeRequestsArgs = {
  accountId: Scalars['Int']['input'];
  requestResponse: InvitationsUserUpgradeRequestAdminResponse;
  requestResponseMessage?: InputMaybe<Scalars['String']['input']>;
  requests: Array<Scalars['Int']['input']>;
};


export type RootMutationTypeInvitationsRequestAccessArgs = {
  accountId: Scalars['Int']['input'];
  currentUserType?: InputMaybe<InvitationsRequestableUserType>;
  requestReason?: InputMaybe<Scalars['String']['input']>;
  requestedUserType?: InputMaybe<InvitationsRequestableUserType>;
};


export type RootMutationTypeKeyTransactionCreateArgs = {
  apdexTarget: Scalars['Float']['input'];
  applicationGuid: Scalars['EntityGuid']['input'];
  browserApdexTarget: Scalars['Float']['input'];
  metricName: Scalars['String']['input'];
  name: Scalars['String']['input'];
};


export type RootMutationTypeKeyTransactionDeleteArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeKeyTransactionDeleteAllByApplicationIdArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeKeyTransactionUpdateArgs = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  browserApdexTarget?: InputMaybe<Scalars['Float']['input']>;
  guid: Scalars['EntityGuid']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeLogConfigurationsCreateDataPartitionRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: LogConfigurationsCreateDataPartitionRuleInput;
};


export type RootMutationTypeLogConfigurationsCreateObfuscationExpressionArgs = {
  accountId: Scalars['Int']['input'];
  expression: LogConfigurationsCreateObfuscationExpressionInput;
};


export type RootMutationTypeLogConfigurationsCreateObfuscationRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: LogConfigurationsCreateObfuscationRuleInput;
};


export type RootMutationTypeLogConfigurationsCreateParsingRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: LogConfigurationsParsingRuleConfiguration;
};


export type RootMutationTypeLogConfigurationsDeleteDataPartitionRuleArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeLogConfigurationsDeleteObfuscationExpressionArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeLogConfigurationsDeleteObfuscationRuleArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeLogConfigurationsDeleteParsingRuleArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
};


export type RootMutationTypeLogConfigurationsUpdateDataPartitionRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule?: InputMaybe<LogConfigurationsUpdateDataPartitionRuleInput>;
};


export type RootMutationTypeLogConfigurationsUpdateLiveArchiveConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  enabled: Scalars['Boolean']['input'];
  eventType: Scalars['String']['input'];
  retentionPolicy: LogConfigurationsLiveArchiveRetentionPolicyType;
};


export type RootMutationTypeLogConfigurationsUpdateObfuscationExpressionArgs = {
  accountId: Scalars['Int']['input'];
  expression: LogConfigurationsUpdateObfuscationExpressionInput;
};


export type RootMutationTypeLogConfigurationsUpdateObfuscationRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: LogConfigurationsUpdateObfuscationRuleInput;
};


export type RootMutationTypeLogConfigurationsUpdateParsingRuleArgs = {
  accountId: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
  rule: LogConfigurationsParsingRuleConfiguration;
};


export type RootMutationTypeLogConfigurationsUpsertPipelineConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  pipelineConfiguration: LogConfigurationsPipelineConfigurationInput;
};


export type RootMutationTypeMetricNormalizationCreateRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: MetricNormalizationCreateRuleInput;
};


export type RootMutationTypeMetricNormalizationDisableRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['Int']['input'];
};


export type RootMutationTypeMetricNormalizationEditRuleArgs = {
  accountId: Scalars['Int']['input'];
  rule: MetricNormalizationEditRuleInput;
};


export type RootMutationTypeMetricNormalizationEnableRuleArgs = {
  accountId: Scalars['Int']['input'];
  ruleId: Scalars['Int']['input'];
};


export type RootMutationTypeMobilePushNotificationAddDeviceArgs = {
  appVersion: Scalars['SemVer']['input'];
  deviceId: Scalars['String']['input'];
  deviceName: Scalars['String']['input'];
  deviceToken: Scalars['SecureValue']['input'];
  operatingSystem: Scalars['String']['input'];
};


export type RootMutationTypeMobilePushNotificationRemoveDeviceArgs = {
  deviceId: Scalars['String']['input'];
};


export type RootMutationTypeMobilePushNotificationSendTestPushArgs = {
  deviceId: Scalars['String']['input'];
};


export type RootMutationTypeNerdStorageDeleteCollectionArgs = {
  collection: Scalars['String']['input'];
  scope: NerdStorageScopeInput;
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeNerdStorageDeleteDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scope: NerdStorageScopeInput;
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeNerdStorageVaultDeleteSecretArgs = {
  key: Scalars['String']['input'];
  scope: NerdStorageVaultScope;
};


export type RootMutationTypeNerdStorageVaultWriteSecretArgs = {
  scope: NerdStorageVaultScope;
  secret: NerdStorageVaultWriteSecretInput;
};


export type RootMutationTypeNerdStorageWriteDocumentArgs = {
  collection: Scalars['String']['input'];
  document: Scalars['NerdStorageDocument']['input'];
  documentId: Scalars['String']['input'];
  scope: NerdStorageScopeInput;
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeNerdStoreDeleteCollectionArgs = {
  collection: Scalars['String']['input'];
  scope: NerdStoreScopeInput;
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeNerdStoreDeleteDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scope: NerdStoreScopeInput;
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeNerdStoreWriteDocumentArgs = {
  collection: Scalars['String']['input'];
  document: Scalars['NerdStoreDocument']['input'];
  documentId: Scalars['String']['input'];
  scope: NerdStoreScopeInput;
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeNerdpackAddAllowedAccountsArgs = {
  allowList: NerdpackAllowListInput;
  nerdpackId: Scalars['ID']['input'];
};


export type RootMutationTypeNerdpackCreateArgs = {
  nerdpackData?: InputMaybe<NerdpackCreationInput>;
};


export type RootMutationTypeNerdpackRemoveAllowedAccountsArgs = {
  allowList: NerdpackAllowListInput;
  nerdpackId: Scalars['ID']['input'];
};


export type RootMutationTypeNerdpackRemoveVersionTagArgs = {
  nerdpackId: Scalars['ID']['input'];
  versionTag: NerdpackRemoveVersionTagInput;
};


export type RootMutationTypeNerdpackSubscribeAccountsArgs = {
  nerdpackId: Scalars['ID']['input'];
  subscription: NerdpackSubscribeAccountsInput;
};


export type RootMutationTypeNerdpackTagVersionArgs = {
  nerdpackId: Scalars['ID']['input'];
  versionTag: NerdpackTagVersionInput;
};


export type RootMutationTypeNerdpackUnsubscribeAccountsArgs = {
  nerdpackId: Scalars['ID']['input'];
  subscription: NerdpackUnsubscribeAccountsInput;
};


export type RootMutationTypeNetworkMonitoringCreateAgentConfigurationArgs = {
  configuration: NetworkMonitoringCreateAgentConfigurationInput;
};


export type RootMutationTypeNetworkMonitoringDeleteAgentConfigurationArgs = {
  agentConfigurationId: Scalars['ID']['input'];
};


export type RootMutationTypeNetworkMonitoringPublishAgentConfigurationArgs = {
  agentConfigurationId: Scalars['ID']['input'];
  rawConfiguration: Scalars['NetworkMonitoringRawConfiguration']['input'];
};


export type RootMutationTypeNetworkMonitoringUpdateAgentConfigurationArgs = {
  configuration: NetworkMonitoringUpdateAgentConfigurationInput;
};


export type RootMutationTypeNewRelicServiceHealthCreateStatusNotificationConfigurationArgs = {
  accounts: Array<Scalars['Int']['input']>;
  active: Scalars['Boolean']['input'];
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  services: Array<Scalars['String']['input']>;
};


export type RootMutationTypeNewRelicServiceHealthUpdateStatusNotificationConfigurationArgs = {
  accounts?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  active?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  services?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};


export type RootMutationTypeNotificationAuthenticationGenerateTokenArgs = {
  userId: Scalars['ID']['input'];
};


export type RootMutationTypeNr1CatalogCreateQuickstartArgs = {
  dryRun?: InputMaybe<Scalars['Boolean']['input']>;
  quickstartMetadata: Nr1CatalogQuickstartMetadataInput;
};


export type RootMutationTypeNr1CatalogInstallAlertPolicyTemplateArgs = {
  accountId: Scalars['Int']['input'];
  alertPolicyTemplateId: Scalars['ID']['input'];
};


export type RootMutationTypeNr1CatalogInstallDashboardTemplateArgs = {
  accountId: Scalars['Int']['input'];
  dashboardTemplateId: Scalars['ID']['input'];
};


export type RootMutationTypeNr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSourceArgs = {
  alertPolicyTemplateIds: Array<Scalars['ID']['input']>;
  dataSourceId: Scalars['ID']['input'];
};


export type RootMutationTypeNr1CatalogSetAutoInstallDashboardTemplatesForDataSourceArgs = {
  dashboardTemplateIds: Array<Scalars['ID']['input']>;
  dataSourceId: Scalars['ID']['input'];
};


export type RootMutationTypeNr1CatalogSetRequiredDataSourcesForAlertPolicyTemplateArgs = {
  alertPolicyTemplateId: Scalars['ID']['input'];
  dataSourceIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeNr1CatalogSetRequiredDataSourcesForDashboardTemplateArgs = {
  dashboardTemplateId: Scalars['ID']['input'];
  dataSourceIds: Array<Scalars['ID']['input']>;
};


export type RootMutationTypeNr1CatalogSubmitDataSourceArgs = {
  dataSourceMetadata: Nr1CatalogDataSourceMetadataInput;
  dryRun?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
};


export type RootMutationTypeNr1CatalogSubmitInstallPlanStepArgs = {
  dryRun?: InputMaybe<Scalars['Boolean']['input']>;
  installPlanStep: Nr1CatalogInstallPlanStepInput;
};


export type RootMutationTypeNr1CatalogSubmitMetadataArgs = {
  id: Scalars['ID']['input'];
  nerdpackMetadata: Nr1CatalogSubmitMetadataInput;
};


export type RootMutationTypeNr1CatalogSubmitQuickstartArgs = {
  dryRun?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  quickstartMetadata: Nr1CatalogQuickstartMetadataInput;
};


export type RootMutationTypeNr1CatalogUpdateQuickstartArgs = {
  dryRun?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  quickstartMetadata: Nr1CatalogQuickstartMetadataInput;
};


export type RootMutationTypeNrqlDropRulesCreateArgs = {
  accountId: Scalars['Int']['input'];
  rules: Array<InputMaybe<NrqlDropRulesCreateDropRuleInput>>;
};


export type RootMutationTypeNrqlDropRulesDeleteArgs = {
  accountId: Scalars['Int']['input'];
  ruleIds: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type RootMutationTypeNrqlLookupsDeleteArgs = {
  accountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};


export type RootMutationTypeNrqlLookupsEditArgs = {
  accountId: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};


export type RootMutationTypeOpenAgentManagementCreateConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  configuration: OpenAgentManagementConfigurationInput;
};


export type RootMutationTypeOpenAgentManagementCreateConfigurationRevisionArgs = {
  accountId: Scalars['Int']['input'];
  configurationRevision: OpenAgentManagementConfigurationRevisionInput;
};


export type RootMutationTypeOpenAgentManagementCreateFleetArgs = {
  accountId: Scalars['Int']['input'];
  agentType: OpenAgentManagementAgentType;
  name: Scalars['String']['input'];
};


export type RootMutationTypeOpenAgentManagementDeleteConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  configurationId: Scalars['ID']['input'];
};


export type RootMutationTypeOpenAgentManagementDeleteConfigurationRevisionArgs = {
  accountId: Scalars['Int']['input'];
  configurationId: Scalars['ID']['input'];
  revisionNumber?: InputMaybe<Scalars['Int']['input']>;
};


export type RootMutationTypeOpenAgentManagementDeleteFleetArgs = {
  fleetGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeOpenAgentManagementDeployAgentConfigurationsArgs = {
  accountId: Scalars['Int']['input'];
  agentUid: Scalars['ID']['input'];
  configurationRevisions?: InputMaybe<Array<OpenAgentManagementAgentDeploymentInput>>;
};


export type RootMutationTypeOpenAgentManagementDeployFleetConfigurationsArgs = {
  accountId: Scalars['Int']['input'];
  configurationRevisions?: InputMaybe<Array<OpenAgentManagementFleetDeploymentInput>>;
  fleetGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeOpenAgentManagementMoveAgentToFleetArgs = {
  agentUid: Scalars['ID']['input'];
  fleetGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeOpenAgentManagementSetAgentAuthStateArgs = {
  accountId: Scalars['Int']['input'];
  agentUid: Scalars['ID']['input'];
  authState: OpenAgentManagementAuthState;
};


export type RootMutationTypeOpenAgentManagementUpdateConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  configuration: OpenAgentManagementConfigurationInput;
  configurationId: Scalars['ID']['input'];
};


export type RootMutationTypeOrganizationCreateArgs = {
  customerId?: InputMaybe<Scalars['ID']['input']>;
  newManagedAccount?: InputMaybe<OrganizationNewManagedAccountInput>;
  organization: OrganizationCreateOrganizationInput;
  sharedAccount?: InputMaybe<OrganizationSharedAccountInput>;
};


export type RootMutationTypeOrganizationCreateSharedAccountArgs = {
  sharedAccount: OrganizationCreateSharedAccountInput;
};


export type RootMutationTypeOrganizationProvisioningUpdatePartnerSubscriptionArgs = {
  accountId: Scalars['Int']['input'];
  affectedAccountId: Scalars['Int']['input'];
  products: Array<OrganizationProvisioningProductInput>;
};


export type RootMutationTypeOrganizationRevokeSharedAccountArgs = {
  sharedAccount: OrganizationRevokeSharedAccountInput;
};


export type RootMutationTypeOrganizationUpdateArgs = {
  organization: OrganizationUpdateInput;
  organizationId?: InputMaybe<Scalars['ID']['input']>;
};


export type RootMutationTypeOrganizationUpdateSharedAccountArgs = {
  sharedAccount: OrganizationUpdateSharedAccountInput;
};


export type RootMutationTypePartnershipMigrationMigrateAccountArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypePixieLinkPixieProjectArgs = {
  accountId: Scalars['Int']['input'];
  apiKey?: InputMaybe<Scalars['SecureValue']['input']>;
};


export type RootMutationTypePixieRecordPixieTosAcceptanceArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypePixieUnlinkPixieProjectArgs = {
  accountId: Scalars['Int']['input'];
};


export type RootMutationTypePreReleaseProgramCreateProgramArgs = {
  customLegal?: InputMaybe<Scalars['String']['input']>;
  customLegalAddendum?: InputMaybe<Scalars['String']['input']>;
  customLegalRequired?: InputMaybe<Scalars['Boolean']['input']>;
  customLegalStandalone?: InputMaybe<Scalars['String']['input']>;
  emailBody?: InputMaybe<Scalars['String']['input']>;
  emailCustomer?: InputMaybe<Scalars['Boolean']['input']>;
  emailFrom?: InputMaybe<Scalars['String']['input']>;
  emailSubject?: InputMaybe<Scalars['String']['input']>;
  excludeEntitlements?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  excludeFeatureFlags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  excludeFedramp?: InputMaybe<Scalars['Boolean']['input']>;
  excludeHippa?: InputMaybe<Scalars['Boolean']['input']>;
  excludeTiers?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  formSubmitCopy: Scalars['String']['input'];
  includeEntitlements?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  includeFeatureFlags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  marketingDescription?: InputMaybe<Scalars['String']['input']>;
  marketingDivider?: InputMaybe<Scalars['Boolean']['input']>;
  marketingExtraContent?: InputMaybe<Scalars['String']['input']>;
  marketingLabelType?: InputMaybe<PreReleaseProgramProgramMarketingLabelType>;
  marketingLink?: InputMaybe<Scalars['String']['input']>;
  marketingSubtext?: InputMaybe<Scalars['String']['input']>;
  marketingTitle?: InputMaybe<Scalars['String']['input']>;
  marketingVideoUrl?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  readableId?: InputMaybe<Scalars['String']['input']>;
  scope: PreReleaseProgramProgramScope;
  status: PreReleaseProgramProgramStatus;
  team?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type RootMutationTypePreReleaseProgramCreateSubmissionArgs = {
  accepted?: InputMaybe<Scalars['Boolean']['input']>;
  accountId?: InputMaybe<Scalars['Int']['input']>;
  agreementTypeAccepted?: InputMaybe<Scalars['String']['input']>;
  enabledDate?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  expirationDate?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  programId: Scalars['String']['input'];
};


export type RootMutationTypeProgrammabilityTnCAcceptArgs = {
  account: ProgrammabilityTnCAccountInput;
};


export type RootMutationTypeProvisioningAddAccountEntitlementBlocklistToAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  authorizedBy?: InputMaybe<Scalars['String']['input']>;
  entitlementName: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningAddBetaEntitlementToAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  authorizedBy?: InputMaybe<Scalars['String']['input']>;
  entitlementName: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningAddEntitlementToAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  authorizedBy?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['DateTime']['input']>;
  entitlementName: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningApplyAccountConfigurationsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  dataSet?: InputMaybe<Array<ProvisioningConfigurationKeyValuePairInput>>;
  enabled: Scalars['Boolean']['input'];
  type: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningApplyAccountEnablementPackagesArgs = {
  accountId: Scalars['Int']['input'];
  enablementCode: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningApplyEnablementToAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  enablementCode: Scalars['String']['input'];
  endDate?: InputMaybe<Scalars['DateTime']['input']>;
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningApplyPromoCodeToAccountArgs = {
  accountId: Scalars['Int']['input'];
  promotionCode: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningApplyPromotionToAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  endDate?: InputMaybe<Scalars['DateTime']['input']>;
  promotionCode: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningBulkAccountRefreshArgs = {
  accountIds: Array<Scalars['Int']['input']>;
};


export type RootMutationTypeProvisioningBulkCpmConversionsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
};


export type RootMutationTypeProvisioningBulkRemoveEnablementFromAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  enablementCode: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningConvertAccountToNonProfitArgs = {
  accountId: Scalars['Int']['input'];
  type?: InputMaybe<ProvisioningNonProfit>;
};


export type RootMutationTypeProvisioningRefreshEntitlementsArgs = {
  accountId: Scalars['Int']['input'];
  linkId?: InputMaybe<Scalars['Int']['input']>;
  linkType?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeProvisioningRemoveAccountEnablementPackagesArgs = {
  accountId: Scalars['Int']['input'];
  enablementCode: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningRemoveAccountEntitlementBlocklistFromAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  entitlementName: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningRemoveBetaEntitlementFromAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  entitlementName: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningRemoveEntitlementFromAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  entitlementName: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningRemovePlatformRecordArgs = {
  accountIds: Array<Scalars['Int']['input']>;
};


export type RootMutationTypeProvisioningRemovePromotionFromAccountArgs = {
  accountId: Scalars['Int']['input'];
  promotionCode: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningRemovePromotionFromAccountsArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  promotionCode: Scalars['String']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningToggleAccountConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  enabled: Scalars['Boolean']['input'];
  type: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningUpdateAccountConfigurationArgs = {
  accountId: Scalars['Int']['input'];
  dataSet?: InputMaybe<Array<ProvisioningConfigurationKeyValuePairInput>>;
  type: Scalars['String']['input'];
};


export type RootMutationTypeProvisioningUpdateAccountEntitlementArgs = {
  accountIds: Array<Scalars['Int']['input']>;
  authorizedBy?: InputMaybe<Scalars['String']['input']>;
  entitlementName: Scalars['String']['input'];
  propertyName: Scalars['String']['input'];
  propertyQuantity: Scalars['Int']['input'];
  skipRefresh?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeProvisioningUpdateSubscriptionsArgs = {
  accountId: Scalars['Int']['input'];
  enableConsumptionPricing?: InputMaybe<Scalars['Boolean']['input']>;
  products: Array<ProvisioningProductInput>;
};


export type RootMutationTypeQueryHistoryRecordNrqlArgs = {
  query: QueryHistoryRecordNrqlInput;
};


export type RootMutationTypeReferenceEntityCreateOrUpdateRepositoryArgs = {
  repositories: Array<ReferenceEntityCreateRepositoryInput>;
  sync?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeRootCauseAnalysisSubmitArgs = {
  entityGuid?: InputMaybe<Scalars['EntityGuid']['input']>;
  filter?: InputMaybe<RootCauseAnalysisSearchFilter>;
};


export type RootMutationTypeSavedViewsCreateArgs = {
  account?: InputMaybe<Scalars['Int']['input']>;
  additionalData?: InputMaybe<Scalars['SavedViewsRawAdditionalData']['input']>;
  capability?: InputMaybe<Scalars['String']['input']>;
  favorite: Scalars['Boolean']['input'];
  filter: Scalars['Nrql']['input'];
  name: Scalars['String']['input'];
  viewType?: InputMaybe<SavedViewsViewType>;
  visibility?: SavedViewsVisibility;
};


export type RootMutationTypeSavedViewsDeleteArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeSavedViewsUpdateArgs = {
  account?: InputMaybe<Scalars['Int']['input']>;
  additionalData?: InputMaybe<Scalars['SavedViewsRawAdditionalData']['input']>;
  capability?: InputMaybe<Scalars['String']['input']>;
  creator?: InputMaybe<Scalars['Int']['input']>;
  favorite?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['Nrql']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  viewType?: InputMaybe<SavedViewsViewType>;
  visibility?: InputMaybe<SavedViewsVisibility>;
};


export type RootMutationTypeServiceLevelCreateArgs = {
  entityGuid: Scalars['EntityGuid']['input'];
  indicator: ServiceLevelIndicatorCreateInput;
};


export type RootMutationTypeServiceLevelCreateRecommendedIndicatorsArgs = {
  entityGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeServiceLevelDeleteArgs = {
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type RootMutationTypeServiceLevelUpdateArgs = {
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  indicator: ServiceLevelIndicatorUpdateInput;
};


export type RootMutationTypeSignupIntegrationsBulkCreatePromoCodesArgs = {
  expiresOn?: InputMaybe<Scalars['DateTime']['input']>;
  integrationId: Scalars['String']['input'];
  issuedOn?: InputMaybe<Scalars['DateTime']['input']>;
  promoCode?: InputMaybe<Scalars['String']['input']>;
  promoCodeSize?: InputMaybe<Scalars['Int']['input']>;
  promoKey: Scalars['String']['input'];
  quantity: Scalars['Int']['input'];
  reusable?: InputMaybe<Scalars['Boolean']['input']>;
  urlForInvalid?: InputMaybe<Scalars['String']['input']>;
  urlForValid?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeStreamingExportCreateRuleArgs = {
  accountId: Scalars['Int']['input'];
  awsParameters?: InputMaybe<StreamingExportAwsInput>;
  azureParameters?: InputMaybe<StreamingExportAzureInput>;
  ruleParameters: StreamingExportRuleInput;
};


export type RootMutationTypeStreamingExportDeleteRuleArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeStreamingExportDisableRuleArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeStreamingExportEnableRuleArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeStreamingExportUpdateRuleArgs = {
  awsParameters?: InputMaybe<StreamingExportAwsInput>;
  azureParameters?: InputMaybe<StreamingExportAzureInput>;
  id: Scalars['ID']['input'];
  ruleParameters: StreamingExportRuleInput;
};


export type RootMutationTypeSupportDiagnosticsCategoryCreateArgs = {
  category: SupportCategoryCreateInput;
};


export type RootMutationTypeSupportDiagnosticsCategoryDeleteArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeSupportDiagnosticsCategoryUpdateArgs = {
  category: SupportCategoryUpdateInput;
};


export type RootMutationTypeSupportDiagnosticsEdgeCreateArgs = {
  edge: SupportEdgeCreateInput;
};


export type RootMutationTypeSupportDiagnosticsEdgeDeleteArgs = {
  edge: SupportEdgeDeleteInput;
};


export type RootMutationTypeSupportDiagnosticsFrameworkCreateArgs = {
  framework: SupportFrameworkCreateInput;
};


export type RootMutationTypeSupportDiagnosticsFrameworkDeleteArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeSupportDiagnosticsFrameworkUpdateActiveRevisionArgs = {
  id: Scalars['ID']['input'];
  revision: Scalars['Int']['input'];
};


export type RootMutationTypeSupportDiagnosticsFrameworkUpdateStateArgs = {
  id: Scalars['ID']['input'];
  state: SupportStateType;
};


export type RootMutationTypeSupportDiagnosticsNerdgraphQueryAddArgs = {
  nerdgraphQuery: SupportDiagnosticsNerdgraphQueryCreateInput;
};


export type RootMutationTypeSupportDiagnosticsNerdgraphQueryDeleteArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeSupportDiagnosticsNodeCreateArgs = {
  node: SupportNodeCreateInput;
};


export type RootMutationTypeSupportDiagnosticsNodeDeleteArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeSupportDiagnosticsQueryAddArgs = {
  query: SupportDiagnosticsQueryCreateInput;
};


export type RootMutationTypeSupportDiagnosticsQueryDeleteArgs = {
  id: Scalars['ID']['input'];
};


export type RootMutationTypeSupportTicketAttachmentCreateArgs = {
  filename: Scalars['String']['input'];
};


export type RootMutationTypeSupportTicketCollaboratorsAddArgs = {
  collaboratorEmails?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  ticketId: Scalars['String']['input'];
};


export type RootMutationTypeSupportTicketCollaboratorsRemoveArgs = {
  collaboratorEmails?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  ticketId: Scalars['String']['input'];
};


export type RootMutationTypeSupportTicketCreateArgs = {
  accountId: Scalars['Int']['input'];
  ticket: SupportTicketCreateInput;
};


export type RootMutationTypeSupportTicketEscalateArgs = {
  accountId: Scalars['Int']['input'];
  ticketEscalation: SupportTicketEscalationInput;
};


export type RootMutationTypeSupportTicketMessageCreateArgs = {
  message: SupportTicketMessageInput;
  ticketId: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsCreateBrokenLinksMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateBrokenLinksMonitorInput;
};


export type RootMutationTypeSyntheticsCreateCertCheckMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateCertCheckMonitorInput;
};


export type RootMutationTypeSyntheticsCreateDailyMonitorDowntimeArgs = {
  accountId: Scalars['Int']['input'];
  endRepeat?: InputMaybe<SyntheticsDateWindowEndConfig>;
  endTime: Scalars['NaiveDateTime']['input'];
  monitorGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name: Scalars['String']['input'];
  startTime: Scalars['NaiveDateTime']['input'];
  timezone: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsCreateMonitorArgs = {
  accountId: Scalars['Int']['input'];
  advancedOptions?: InputMaybe<SyntheticsAdvancedOptionsInput>;
  extendedTypeMetadata?: InputMaybe<SyntheticsExtendedTypeInput>;
  hmacs?: InputMaybe<Array<InputMaybe<SyntheticsPrivateLocationHmacInput>>>;
  locations: Array<InputMaybe<Scalars['String']['input']>>;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  script?: InputMaybe<Scalars['String']['input']>;
  slaThreshold: Scalars['Float']['input'];
  status: SyntheticsMonitorStatus;
  steps?: InputMaybe<Array<InputMaybe<SyntheticsStepInput>>>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  type: SyntheticsMonitorType;
  uri?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeSyntheticsCreateMonthlyMonitorDowntimeArgs = {
  accountId: Scalars['Int']['input'];
  endRepeat?: InputMaybe<SyntheticsDateWindowEndConfig>;
  endTime: Scalars['NaiveDateTime']['input'];
  frequency: SyntheticsMonitorDowntimeMonthlyFrequency;
  monitorGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name: Scalars['String']['input'];
  startTime: Scalars['NaiveDateTime']['input'];
  timezone: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsCreateOnceMonitorDowntimeArgs = {
  accountId: Scalars['Int']['input'];
  endTime: Scalars['NaiveDateTime']['input'];
  monitorGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name: Scalars['String']['input'];
  startTime: Scalars['NaiveDateTime']['input'];
  timezone: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsCreatePrivateLocationArgs = {
  accountId: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  verifiedScriptExecution: Scalars['Boolean']['input'];
};


export type RootMutationTypeSyntheticsCreateScriptApiMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateScriptApiMonitorInput;
};


export type RootMutationTypeSyntheticsCreateScriptBrowserMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateScriptBrowserMonitorInput;
};


export type RootMutationTypeSyntheticsCreateSecureCredentialArgs = {
  accountId: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  key: Scalars['String']['input'];
  value: Scalars['SecureValue']['input'];
};


export type RootMutationTypeSyntheticsCreateSimpleBrowserMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateSimpleBrowserMonitorInput;
};


export type RootMutationTypeSyntheticsCreateSimpleMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateSimpleMonitorInput;
};


export type RootMutationTypeSyntheticsCreateStepMonitorArgs = {
  accountId: Scalars['Int']['input'];
  monitor: SyntheticsCreateStepMonitorInput;
};


export type RootMutationTypeSyntheticsCreateWeeklyMonitorDowntimeArgs = {
  accountId: Scalars['Int']['input'];
  endRepeat?: InputMaybe<SyntheticsDateWindowEndConfig>;
  endTime: Scalars['NaiveDateTime']['input'];
  maintenanceDays: Array<InputMaybe<SyntheticsMonitorDowntimeWeekDays>>;
  monitorGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  name: Scalars['String']['input'];
  startTime: Scalars['NaiveDateTime']['input'];
  timezone: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsDeleteMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeSyntheticsDeleteMonitorByGuidArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeSyntheticsDeleteMonitorDowntimeArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeSyntheticsDeletePrivateLocationArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeSyntheticsDeleteScriptArgs = {
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
};


export type RootMutationTypeSyntheticsDeleteSecureCredentialArgs = {
  accountId: Scalars['Int']['input'];
  key: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsEditMonitorDowntimeArgs = {
  daily?: InputMaybe<SyntheticsMonitorDowntimeDailyConfig>;
  guid: Scalars['EntityGuid']['input'];
  monitorGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  monthly?: InputMaybe<SyntheticsMonitorDowntimeMonthlyConfig>;
  name?: InputMaybe<Scalars['String']['input']>;
  once?: InputMaybe<SyntheticsMonitorDowntimeOnceConfig>;
  weekly?: InputMaybe<SyntheticsMonitorDowntimeWeeklyConfig>;
};


export type RootMutationTypeSyntheticsGenerateStepScriptArgs = {
  accountId: Scalars['Int']['input'];
  stepMonitorScriptDefinition: SyntheticsGenerateMonitorScriptInput;
};


export type RootMutationTypeSyntheticsPurgePrivateLocationQueueArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeSyntheticsRunMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  locationId: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsStartAutomatedTestArgs = {
  config?: InputMaybe<SyntheticsAutomatedTestConfigInput>;
  tests?: InputMaybe<Array<InputMaybe<SyntheticsAutomatedTestMonitorInput>>>;
};


export type RootMutationTypeSyntheticsTriggerScriptValidationArgs = {
  accountId?: InputMaybe<Scalars['Int']['input']>;
  deviceEmulation?: InputMaybe<SyntheticsDeviceEmulationInput>;
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
  hmacs?: InputMaybe<Array<InputMaybe<SyntheticsPrivateLocationHmacInput>>>;
  locations: Array<InputMaybe<Scalars['String']['input']>>;
  monitorApiVersion: Scalars['String']['input'];
  monitorType: SyntheticsMonitorType;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  script: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsUpdateBrokenLinksMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateBrokenLinksMonitorInput;
};


export type RootMutationTypeSyntheticsUpdateCertCheckMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateCertCheckMonitorInput;
};


export type RootMutationTypeSyntheticsUpdateMonitorArgs = {
  advancedOptions?: InputMaybe<SyntheticsAdvancedOptionsInput>;
  extendedTypeMetadata?: InputMaybe<SyntheticsExtendedTypeInput>;
  guid: Scalars['EntityGuid']['input'];
  hmacs?: InputMaybe<Array<InputMaybe<SyntheticsPrivateLocationHmacInput>>>;
  locations?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  slaThreshold?: InputMaybe<Scalars['Float']['input']>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  steps?: InputMaybe<Array<InputMaybe<SyntheticsStepInput>>>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  type?: InputMaybe<SyntheticsMonitorType>;
  uri?: InputMaybe<Scalars['String']['input']>;
};


export type RootMutationTypeSyntheticsUpdatePrivateLocationArgs = {
  description?: InputMaybe<Scalars['String']['input']>;
  guid: Scalars['EntityGuid']['input'];
  verifiedScriptExecution?: InputMaybe<Scalars['Boolean']['input']>;
};


export type RootMutationTypeSyntheticsUpdateScriptArgs = {
  guid: Scalars['EntityGuid']['input'];
  script: Scalars['String']['input'];
};


export type RootMutationTypeSyntheticsUpdateScriptApiMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateScriptApiMonitorInput;
};


export type RootMutationTypeSyntheticsUpdateScriptBrowserMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateScriptBrowserMonitorInput;
};


export type RootMutationTypeSyntheticsUpdateSecureCredentialArgs = {
  accountId: Scalars['Int']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  key: Scalars['String']['input'];
  value?: InputMaybe<Scalars['SecureValue']['input']>;
};


export type RootMutationTypeSyntheticsUpdateSimpleBrowserMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateSimpleBrowserMonitorInput;
};


export type RootMutationTypeSyntheticsUpdateSimpleMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateSimpleMonitorInput;
};


export type RootMutationTypeSyntheticsUpdateStepMonitorArgs = {
  guid: Scalars['EntityGuid']['input'];
  monitor: SyntheticsUpdateStepMonitorInput;
};


export type RootMutationTypeSyntheticsUpgradeMonitorRuntimeArgs = {
  monitors: Array<Scalars['EntityGuid']['input']>;
};


export type RootMutationTypeSyntheticsUpgradeMonitorRuntimeByAccountsAndStatusesArgs = {
  accounts: Array<Scalars['Int']['input']>;
  validationStatuses: Array<SyntheticsValidationStatus>;
};


export type RootMutationTypeTaggingAddTagsToEntityArgs = {
  guid: Scalars['EntityGuid']['input'];
  tags: Array<TaggingTagInput>;
};


export type RootMutationTypeTaggingDeleteTagFromEntityArgs = {
  guid: Scalars['EntityGuid']['input'];
  tagKeys: Array<Scalars['String']['input']>;
};


export type RootMutationTypeTaggingDeleteTagValuesFromEntityArgs = {
  guid: Scalars['EntityGuid']['input'];
  tagValues: Array<TaggingTagValueInput>;
};


export type RootMutationTypeTaggingReplaceTagsOnEntityArgs = {
  guid: Scalars['EntityGuid']['input'];
  tags: Array<TaggingTagInput>;
};


export type RootMutationTypeTeamAddEntitiesArgs = {
  entityGuids?: InputMaybe<Array<InputMaybe<Scalars['EntityGuid']['input']>>>;
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
};


export type RootMutationTypeTeamCreateArgs = {
  accountId: Scalars['Int']['input'];
  team: TeamCreateInput;
};


export type RootMutationTypeTeamDeleteArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeTeamDeleteEntitiesArgs = {
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  guid?: InputMaybe<Scalars['EntityGuid']['input']>;
};


export type RootMutationTypeTeamUpdateArgs = {
  guid: Scalars['EntityGuid']['input'];
  team: TeamUpdateInput;
};


export type RootMutationTypeTeamUpdateEntityOwnersArgs = {
  newTeams?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  oldTeams?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  targetGuid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeTeamUpdateGlobalSettingsArgs = {
  updateGlobalSettings: TeamUpdateGlobalSettingsInput;
};


export type RootMutationTypeUserEmailNotificationPreferencesUpdateArgs = {
  updatedNotificationPreferences: Array<InputMaybe<UserEmailNotificationPreferencesUpdatedNotificationPreference>>;
  userId: Scalars['String']['input'];
};


export type RootMutationTypeUserEmailNotificationPreferencesUpdateSuppressionGroupArgs = {
  updatedSuppressionGroup: Array<InputMaybe<UserEmailNotificationPreferencesUpdatedSuppressionGroup>>;
  userId: Scalars['String']['input'];
};


export type RootMutationTypeUserManagementAddUsersToGroupsArgs = {
  addUsersToGroupsOptions?: InputMaybe<UserManagementUsersGroupsInput>;
};


export type RootMutationTypeUserManagementCreateGroupArgs = {
  createGroupOptions?: InputMaybe<UserManagementCreateGroup>;
};


export type RootMutationTypeUserManagementCreateUserArgs = {
  createUserOptions: UserManagementCreateUser;
};


export type RootMutationTypeUserManagementDeleteGroupArgs = {
  groupOptions?: InputMaybe<UserManagementDeleteGroup>;
};


export type RootMutationTypeUserManagementDeleteUserArgs = {
  deleteUserOptions: UserManagementDeleteUser;
};


export type RootMutationTypeUserManagementRemoveUsersFromGroupsArgs = {
  removeUsersFromGroupsOptions: UserManagementUsersGroupsInput;
};


export type RootMutationTypeUserManagementUpdateGroupArgs = {
  updateGroupOptions?: InputMaybe<UserManagementUpdateGroup>;
};


export type RootMutationTypeUserManagementUpdateUserArgs = {
  updateUserOptions: UserManagementUpdateUser;
};


export type RootMutationTypeUserUpdatePreferencesArgs = {
  userPreferences: UserUpdatePreferences;
};


export type RootMutationTypeUserUpgradeSelfArgs = {
  upgradeSelfOptions?: InputMaybe<UserUpgradeSelf>;
};


export type RootMutationTypeWebsitePerformanceMonitoringCreateLighthouseScriptMonitorArgs = {
  accountId: Scalars['Int']['input'];
  requestSource?: InputMaybe<WebsitePerformanceMonitoringRequestSource>;
  websiteDetails: WebsitePerformanceMonitoringWebsiteInput;
};


export type RootMutationTypeWebsitePerformanceMonitoringCreateWebsitePerformanceMonitorsArgs = {
  accountId: Scalars['Int']['input'];
  requestSource?: InputMaybe<WebsitePerformanceMonitoringRequestSource>;
  requestType?: InputMaybe<WebsitePerformanceMonitoringRequestType>;
  websiteDetails: WebsitePerformanceMonitoringWebsiteInput;
};


export type RootMutationTypeWebsitePerformanceMonitoringUpdateRequestArgs = {
  accountId: Scalars['Int']['input'];
  requestFields: WebsitePerformanceMonitoringUpdateRequestFields;
  websiteDetails: WebsitePerformanceMonitoringWebsiteInput;
};


export type RootMutationTypeWhatsNewSetLastReadDateArgs = {
  date: Scalars['EpochMilliseconds']['input'];
};


export type RootMutationTypeWorkloadCreateArgs = {
  accountId: Scalars['Int']['input'];
  workload: WorkloadCreateInput;
};


export type RootMutationTypeWorkloadDeleteArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type RootMutationTypeWorkloadDuplicateArgs = {
  accountId: Scalars['Int']['input'];
  sourceGuid: Scalars['EntityGuid']['input'];
  workload?: InputMaybe<WorkloadDuplicateInput>;
};


export type RootMutationTypeWorkloadUpdateArgs = {
  guid: Scalars['EntityGuid']['input'];
  workload: WorkloadUpdateInput;
};

export type RootQueryType = {
  __typename?: 'RootQueryType';
  /** @deprecated Please use `actor.account(id: N)` */
  account?: Maybe<AccountObject>;
  actor?: Maybe<Actor>;
  currentUser?: Maybe<UserObject>;
  customerAdministration?: Maybe<CustomerAdministration>;
  docs?: Maybe<DocumentationFields>;
  nerdGraphContext?: Maybe<NerdGraphContext>;
  nrPlatform?: Maybe<NrPlatformQueryNamespace>;
  requestContext?: Maybe<RequestContext>;
  /** @deprecated Please use `actor.user` or `currentUser` */
  user?: Maybe<UserObject>;
};


export type RootQueryTypeAccountArgs = {
  id: Scalars['Int']['input'];
};


export type RootQueryTypeUserArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

export type RootSubscriptionType = {
  __typename?: 'RootSubscriptionType';
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   * NerdGraph subscriptions don't work in GraphiQL, since they are based in
   * HTTP Server Sent Events, not Web Sockets. You can access them via `curl`
   * or `Event Source` in the browser.
   *
   */
  logsLiveTail?: Maybe<LogsLiveTailResult>;
};


export type RootSubscriptionTypeLogsLiveTailArgs = {
  accountId: Scalars['Int']['input'];
  maxBatchSize?: InputMaybe<Scalars['Int']['input']>;
  nrql: Scalars['Nrql']['input'];
  publishIntervalMs?: InputMaybe<Scalars['Milliseconds']['input']>;
};

export type SavedViewsActorStitchedFields = {
  __typename?: 'SavedViewsActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  viewSearch?: Maybe<SavedViewsQueryResults>;
};


export type SavedViewsActorStitchedFieldsViewSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter: SavedViewsQueryFilter;
  limit?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<SavedViewsSortingCriteria>;
};

export type SavedViewsContext = {
  __typename?: 'SavedViewsContext';
  /** @deprecated This field is experimental and subject to breaking changes. */
  additionalData?: Maybe<Scalars['SavedViewsRawAdditionalData']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  favoriteCount: Scalars['Int']['output'];
};

export type SavedViewsCreateError = {
  __typename?: 'SavedViewsCreateError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: SavedViewsCreateErrorType;
};

export type SavedViewsCreateErrorType =
  | 'FILTER_VALIDATION_ERROR'
  | 'FORBIDDEN'
  | 'INVALID_INPUT';

export type SavedViewsCreateResult = {
  __typename?: 'SavedViewsCreateResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  failures?: Maybe<Array<SavedViewsCreateError>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
};

export type SavedViewsDeleteError = {
  __typename?: 'SavedViewsDeleteError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: SavedViewsDeleteErrorType;
};

export type SavedViewsDeleteErrorType =
  | 'FORBIDDEN';

export type SavedViewsDeleteResult = {
  __typename?: 'SavedViewsDeleteResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  failures?: Maybe<Array<SavedViewsDeleteError>>;
};

export type SavedViewsPermission =
  | 'DELETE'
  | 'READ'
  | 'WRITE';

export type SavedViewsQueryFilter = {
  accounts?: InputMaybe<Array<Scalars['Int']['input']>>;
  capabilities?: InputMaybe<Array<Scalars['String']['input']>>;
  filterFavorites?: InputMaybe<Scalars['Boolean']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  owners?: InputMaybe<Array<Scalars['Int']['input']>>;
  searchText?: InputMaybe<Scalars['String']['input']>;
};

export type SavedViewsQueryResults = {
  __typename?: 'SavedViewsQueryResults';
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  results: Array<SavedViewsView>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type SavedViewsSortingCriteria = {
  direction?: InputMaybe<SortBy>;
  field?: InputMaybe<SavedViewsSortingField>;
};

export type SavedViewsSortingField =
  | 'CREATED'
  | 'NAME'
  | 'QUERY';

export type SavedViewsUpdateError = {
  __typename?: 'SavedViewsUpdateError';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  type: SavedViewsUpdateErrorType;
};

export type SavedViewsUpdateErrorType =
  | 'FILTER_VALIDATION_ERROR'
  | 'FORBIDDEN'
  | 'INVALID_INPUT';

export type SavedViewsUpdateResult = {
  __typename?: 'SavedViewsUpdateResult';
  /** @deprecated This field is experimental and subject to breaking changes. */
  failures?: Maybe<Array<SavedViewsUpdateError>>;
};

export type SavedViewsView = {
  __typename?: 'SavedViewsView';
  /** @deprecated This field is experimental and subject to breaking changes. */
  account?: Maybe<AccountReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  capability?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  context: SavedViewsContext;
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  createdByUser?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  favorite: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  filter: Scalars['Nrql']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['ID']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  permissions: Array<SavedViewsPermission>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  updatedAt: Scalars['EpochMilliseconds']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  viewType?: Maybe<SavedViewsViewType>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  visibility: SavedViewsVisibility;
};

export type SavedViewsViewType =
  | 'TABLE'
  | 'TILES';

export type SavedViewsVisibility =
  | 'PRIVATE'
  | 'SHARED';

export type SecureCredentialEntity = AlertableEntity & Entity & {
  __typename?: 'SecureCredentialEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  secureCredentialId?: Maybe<Scalars['ID']['output']>;
  secureCredentialSummary?: Maybe<SecureCredentialSummaryData>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
};


export type SecureCredentialEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type SecureCredentialEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type SecureCredentialEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type SecureCredentialEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type SecureCredentialEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type SecureCredentialEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type SecureCredentialEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type SecureCredentialEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type SecureCredentialEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type SecureCredentialEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type SecureCredentialEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type SecureCredentialEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type SecureCredentialEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type SecureCredentialEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'SecureCredentialEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  secureCredentialId?: Maybe<Scalars['ID']['output']>;
  secureCredentialSummary?: Maybe<SecureCredentialSummaryData>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
};


export type SecureCredentialEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type SecureCredentialEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SecureCredentialEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type SecureCredentialEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type SecureCredentialSummaryData = {
  __typename?: 'SecureCredentialSummaryData';
  /** @deprecated This field is deprecated and will not return valid data. */
  failingMonitorCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is deprecated and will not return valid data. */
  monitorCount?: Maybe<Scalars['Int']['output']>;
};

export type ServiceDiscoveryEndpoint = {
  __typename?: 'ServiceDiscoveryEndpoint';
  endpoint?: Maybe<Scalars['String']['output']>;
  path?: Maybe<Scalars['String']['output']>;
};

export type ServiceDiscoveryNamespace = {
  __typename?: 'ServiceDiscoveryNamespace';
  endpointBootstrapScript?: Maybe<Scalars['String']['output']>;
  endpoints?: Maybe<Array<Maybe<ServiceDiscoveryEndpoint>>>;
};


export type ServiceDiscoveryNamespaceEndpointBootstrapScriptArgs = {
  paths: Array<InputMaybe<Scalars['String']['input']>>;
};


export type ServiceDiscoveryNamespaceEndpointsArgs = {
  paths: Array<InputMaybe<Scalars['String']['input']>>;
};

export type ServiceLevelComputedValueLimits = {
  __typename?: 'ServiceLevelComputedValueLimits';
  fallback?: Maybe<Scalars['Float']['output']>;
  maximum?: Maybe<Scalars['Float']['output']>;
  minimum?: Maybe<Scalars['Float']['output']>;
};

export type ServiceLevelDefinition = {
  __typename?: 'ServiceLevelDefinition';
  indicators?: Maybe<Array<ServiceLevelIndicator>>;
};

export type ServiceLevelError = {
  __typename?: 'ServiceLevelError';
  description?: Maybe<Scalars['String']['output']>;
};

export type ServiceLevelEvents = {
  __typename?: 'ServiceLevelEvents';
  account?: Maybe<AccountReference>;
  badEvents?: Maybe<ServiceLevelEventsQuery>;
  goodEvents?: Maybe<ServiceLevelEventsQuery>;
  validEvents: ServiceLevelEventsQuery;
};

export type ServiceLevelEventsCreateInput = {
  accountId: Scalars['Int']['input'];
  badEvents?: InputMaybe<ServiceLevelEventsQueryCreateInput>;
  goodEvents?: InputMaybe<ServiceLevelEventsQueryCreateInput>;
  validEvents: ServiceLevelEventsQueryCreateInput;
};

export type ServiceLevelEventsQuery = {
  __typename?: 'ServiceLevelEventsQuery';
  from: Scalars['Nrql']['output'];
  select?: Maybe<ServiceLevelEventsQuerySelect>;
  where?: Maybe<Scalars['Nrql']['output']>;
};

export type ServiceLevelEventsQueryCreateInput = {
  from: Scalars['Nrql']['input'];
  select?: InputMaybe<ServiceLevelEventsQuerySelectCreateInput>;
  where?: InputMaybe<Scalars['Nrql']['input']>;
};

export type ServiceLevelEventsQuerySelect = {
  __typename?: 'ServiceLevelEventsQuerySelect';
  attribute?: Maybe<Scalars['String']['output']>;
  function: ServiceLevelEventsQuerySelectFunction;
  threshold?: Maybe<Scalars['Float']['output']>;
};

export type ServiceLevelEventsQuerySelectCreateInput = {
  attribute?: InputMaybe<Scalars['String']['input']>;
  function: ServiceLevelEventsQuerySelectFunction;
  threshold?: InputMaybe<Scalars['Float']['input']>;
};

export type ServiceLevelEventsQuerySelectFunction =
  | 'COUNT'
  | 'GET_CDF_COUNT'
  | 'GET_FIELD'
  | 'SUM';

export type ServiceLevelEventsQuerySelectUpdateInput = {
  attribute?: InputMaybe<Scalars['String']['input']>;
  function: ServiceLevelEventsQuerySelectFunction;
  threshold?: InputMaybe<Scalars['Float']['input']>;
};

export type ServiceLevelEventsQueryUpdateInput = {
  from: Scalars['Nrql']['input'];
  select?: InputMaybe<ServiceLevelEventsQuerySelectUpdateInput>;
  where?: InputMaybe<Scalars['Nrql']['input']>;
};

export type ServiceLevelEventsUpdateInput = {
  badEvents?: InputMaybe<ServiceLevelEventsQueryUpdateInput>;
  goodEvents?: InputMaybe<ServiceLevelEventsQueryUpdateInput>;
  validEvents: ServiceLevelEventsQueryUpdateInput;
};

export type ServiceLevelFailure = {
  __typename?: 'ServiceLevelFailure';
  errors?: Maybe<Array<Maybe<ServiceLevelError>>>;
};

export type ServiceLevelIndicator = {
  __typename?: 'ServiceLevelIndicator';
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  entityGuid: Scalars['EntityGuid']['output'];
  events: ServiceLevelEvents;
  guid: Scalars['EntityGuid']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  objectives?: Maybe<Array<ServiceLevelObjective>>;
  resultQueries?: Maybe<ServiceLevelIndicatorResultQueries>;
  /** @deprecated The slug is deprecated and it will be removed from the schema as soon as possible. */
  slug: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type ServiceLevelIndicatorCreateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  events: ServiceLevelEventsCreateInput;
  name: Scalars['String']['input'];
  objectives?: InputMaybe<Array<ServiceLevelObjectiveCreateInput>>;
  slug?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<ServiceLevelServiceLevelSource>;
};

export type ServiceLevelIndicatorResultQueries = {
  __typename?: 'ServiceLevelIndicatorResultQueries';
  goodEvents: ServiceLevelResultQuery;
  indicator: ServiceLevelResultQuery;
  validEvents: ServiceLevelResultQuery;
};

export type ServiceLevelIndicatorUpdateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  events?: InputMaybe<ServiceLevelEventsUpdateInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  objectives?: InputMaybe<Array<ServiceLevelObjectiveUpdateInput>>;
};

export type ServiceLevelObjective = {
  __typename?: 'ServiceLevelObjective';
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  resultQueries?: Maybe<ServiceLevelObjectiveResultQueries>;
  target: Scalars['Float']['output'];
  timeWindow: ServiceLevelObjectiveTimeWindow;
};

export type ServiceLevelObjectiveCreateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  target: Scalars['Float']['input'];
  timeWindow: ServiceLevelObjectiveTimeWindowCreateInput;
};

export type ServiceLevelObjectiveResultQueries = {
  __typename?: 'ServiceLevelObjectiveResultQueries';
  attainment: ServiceLevelResultQuery;
};

export type ServiceLevelObjectiveRollingTimeWindow = {
  __typename?: 'ServiceLevelObjectiveRollingTimeWindow';
  count: Scalars['Int']['output'];
  unit: ServiceLevelObjectiveRollingTimeWindowUnit;
};

export type ServiceLevelObjectiveRollingTimeWindowCreateInput = {
  count: Scalars['Int']['input'];
  unit: ServiceLevelObjectiveRollingTimeWindowUnit;
};

export type ServiceLevelObjectiveRollingTimeWindowUnit =
  | 'DAY';

export type ServiceLevelObjectiveRollingTimeWindowUpdateInput = {
  count: Scalars['Int']['input'];
  unit: ServiceLevelObjectiveRollingTimeWindowUnit;
};

export type ServiceLevelObjectiveTimeWindow = {
  __typename?: 'ServiceLevelObjectiveTimeWindow';
  rolling?: Maybe<ServiceLevelObjectiveRollingTimeWindow>;
};

export type ServiceLevelObjectiveTimeWindowCreateInput = {
  rolling: ServiceLevelObjectiveRollingTimeWindowCreateInput;
};

export type ServiceLevelObjectiveTimeWindowUpdateInput = {
  rolling: ServiceLevelObjectiveRollingTimeWindowUpdateInput;
};

export type ServiceLevelObjectiveUpdateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  target: Scalars['Float']['input'];
  timeWindow: ServiceLevelObjectiveTimeWindowUpdateInput;
};

export type ServiceLevelQueryTemplates = {
  __typename?: 'ServiceLevelQueryTemplates';
  events?: Maybe<ServiceLevelRecommendedEvents>;
  recommendedObjectives?: Maybe<Array<ServiceLevelRecommendedObjective>>;
  templateParameters?: Maybe<Array<ServiceLevelTemplateParameters>>;
};

export type ServiceLevelRecommendation = {
  __typename?: 'ServiceLevelRecommendation';
  indicators?: Maybe<Array<ServiceLevelRecommendedIndicator>>;
};

export type ServiceLevelRecommendedEvents = {
  __typename?: 'ServiceLevelRecommendedEvents';
  badEvents?: Maybe<ServiceLevelRecommendedEventsQuery>;
  goodEvents?: Maybe<ServiceLevelRecommendedEventsQuery>;
  validEvents: ServiceLevelRecommendedEventsQuery;
};

export type ServiceLevelRecommendedEventsQuery = {
  __typename?: 'ServiceLevelRecommendedEventsQuery';
  from: Scalars['Nrql']['output'];
  where?: Maybe<Scalars['Nrql']['output']>;
};

export type ServiceLevelRecommendedIndicator = {
  __typename?: 'ServiceLevelRecommendedIndicator';
  category?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  queryTemplates?: Maybe<ServiceLevelQueryTemplates>;
};

export type ServiceLevelRecommendedIndicatorsCreationResult = {
  __typename?: 'ServiceLevelRecommendedIndicatorsCreationResult';
  failures?: Maybe<Array<Maybe<ServiceLevelFailure>>>;
  successes?: Maybe<Array<Maybe<ServiceLevelIndicator>>>;
};

export type ServiceLevelRecommendedObjective = {
  __typename?: 'ServiceLevelRecommendedObjective';
  computedTargetLimits?: Maybe<ServiceLevelComputedValueLimits>;
  target?: Maybe<Scalars['Float']['output']>;
  targetQuery?: Maybe<Scalars['Nrql']['output']>;
};

export type ServiceLevelResultQuery = {
  __typename?: 'ServiceLevelResultQuery';
  nrql: Scalars['Nrql']['output'];
};

export type ServiceLevelServiceLevelSource =
  | 'CUSTOM'
  | 'RECOMMENDED_EDITED'
  | 'RECOMMENDED_RAW';

export type ServiceLevelTemplateParameters = {
  __typename?: 'ServiceLevelTemplateParameters';
  computedBaselineLimits?: Maybe<ServiceLevelComputedValueLimits>;
  description?: Maybe<Scalars['String']['output']>;
  key: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  operator?: Maybe<Scalars['String']['output']>;
  query: Scalars['Nrql']['output'];
  unit?: Maybe<Scalars['String']['output']>;
};

export type SignupIntegrationsAccountStitchedFields = {
  __typename?: 'SignupIntegrationsAccountStitchedFields';
  integrationAccounts?: Maybe<Array<SignupIntegrationsIntegrationAccount>>;
};

export type SignupIntegrationsBulkCreatePromoCodesResult = {
  __typename?: 'SignupIntegrationsBulkCreatePromoCodesResult';
  promotions?: Maybe<Array<SignupIntegrationsPromotion>>;
};

export type SignupIntegrationsIntegrationAccount = {
  __typename?: 'SignupIntegrationsIntegrationAccount';
  accountId?: Maybe<Scalars['Int']['output']>;
  integrationId: Scalars['String']['output'];
  integrationUuid: Scalars['String']['output'];
  validationResult?: Maybe<SignupIntegrationsValidationResult>;
};

export type SignupIntegrationsPromotion = {
  __typename?: 'SignupIntegrationsPromotion';
  appliedTo?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  expiresOn?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  integrationId?: Maybe<Scalars['String']['output']>;
  issuedOn?: Maybe<Scalars['DateTime']['output']>;
  modalBody?: Maybe<Scalars['String']['output']>;
  modalTitle?: Maybe<Scalars['String']['output']>;
  nagBody?: Maybe<Scalars['String']['output']>;
  promoCode?: Maybe<Scalars['String']['output']>;
  promoKey?: Maybe<Scalars['String']['output']>;
  reusable?: Maybe<Scalars['Boolean']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  urlForInvalid?: Maybe<Scalars['String']['output']>;
  urlForValid?: Maybe<Scalars['String']['output']>;
};

export type SignupIntegrationsValidationResult =
  | 'INVALID'
  | 'VALID';

export type SortBy =
  | 'ASC'
  | 'DESC';

export type SortCriterionWithDirection = {
  attribute?: InputMaybe<EntitySearchSortCriteria>;
  direction?: InputMaybe<SortBy>;
  tag?: InputMaybe<Scalars['String']['input']>;
};

export type StackTraceApmException = {
  __typename?: 'StackTraceApmException';
  message?: Maybe<Scalars['String']['output']>;
  stackTrace?: Maybe<StackTraceApmStackTrace>;
};

export type StackTraceApmStackTrace = {
  __typename?: 'StackTraceApmStackTrace';
  frames?: Maybe<Array<Maybe<StackTraceApmStackTraceFrame>>>;
};

export type StackTraceApmStackTraceFrame = {
  __typename?: 'StackTraceApmStackTraceFrame';
  filepath?: Maybe<Scalars['String']['output']>;
  formatted: Scalars['String']['output'];
  line?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type StackTraceBrowserException = {
  __typename?: 'StackTraceBrowserException';
  message?: Maybe<Scalars['String']['output']>;
  stackTrace?: Maybe<StackTraceBrowserStackTrace>;
};

export type StackTraceBrowserStackTrace = {
  __typename?: 'StackTraceBrowserStackTrace';
  frames?: Maybe<Array<Maybe<StackTraceBrowserStackTraceFrame>>>;
};

export type StackTraceBrowserStackTraceFrame = {
  __typename?: 'StackTraceBrowserStackTraceFrame';
  column?: Maybe<Scalars['Int']['output']>;
  formatted: Scalars['String']['output'];
  line?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type StackTraceMobileCrash = {
  __typename?: 'StackTraceMobileCrash';
  stackTrace?: Maybe<StackTraceMobileCrashStackTrace>;
};

export type StackTraceMobileCrashStackTrace = {
  __typename?: 'StackTraceMobileCrashStackTrace';
  frames?: Maybe<Array<Maybe<StackTraceMobileCrashStackTraceFrame>>>;
};

export type StackTraceMobileCrashStackTraceFrame = {
  __typename?: 'StackTraceMobileCrashStackTraceFrame';
  filepath?: Maybe<Scalars['String']['output']>;
  formatted: Scalars['String']['output'];
  line?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type StackTraceMobileException = {
  __typename?: 'StackTraceMobileException';
  stackTrace?: Maybe<StackTraceMobileExceptionStackTrace>;
};

export type StackTraceMobileExceptionStackTrace = {
  __typename?: 'StackTraceMobileExceptionStackTrace';
  frames?: Maybe<Array<Maybe<StackTraceMobileExceptionStackTraceFrame>>>;
};

export type StackTraceMobileExceptionStackTraceFrame = {
  __typename?: 'StackTraceMobileExceptionStackTraceFrame';
  filepath?: Maybe<Scalars['String']['output']>;
  formatted: Scalars['String']['output'];
  line?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type StreamingExportAccountStitchedFields = {
  __typename?: 'StreamingExportAccountStitchedFields';
  streamingRule?: Maybe<StreamingExportRule>;
  streamingRules?: Maybe<Array<Maybe<StreamingExportRule>>>;
};


export type StreamingExportAccountStitchedFieldsStreamingRuleArgs = {
  id: Scalars['ID']['input'];
};

export type StreamingExportAwsDetails = {
  __typename?: 'StreamingExportAwsDetails';
  awsAccountId: Scalars['ID']['output'];
  deliveryStreamName: Scalars['String']['output'];
  region: Scalars['String']['output'];
  role: Scalars['String']['output'];
};

export type StreamingExportAwsInput = {
  awsAccountId: Scalars['ID']['input'];
  deliveryStreamName: Scalars['String']['input'];
  region: Scalars['String']['input'];
  role: Scalars['String']['input'];
};

export type StreamingExportAzureDetails = {
  __typename?: 'StreamingExportAzureDetails';
  eventHubConnectionString: Scalars['String']['output'];
  eventHubName: Scalars['String']['output'];
};

export type StreamingExportAzureInput = {
  eventHubConnectionString: Scalars['String']['input'];
  eventHubName: Scalars['String']['input'];
};

export type StreamingExportPayloadCompression =
  | 'DISABLED'
  | 'GZIP';

export type StreamingExportRule = {
  __typename?: 'StreamingExportRule';
  account?: Maybe<AccountReference>;
  aws?: Maybe<StreamingExportAwsDetails>;
  azure?: Maybe<StreamingExportAzureDetails>;
  createdAt: Scalars['EpochMilliseconds']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  message?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  nrql?: Maybe<Scalars['Nrql']['output']>;
  payloadCompression?: Maybe<StreamingExportPayloadCompression>;
  status: StreamingExportStatus;
  updatedAt: Scalars['EpochMilliseconds']['output'];
};

export type StreamingExportRuleInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  nrql: Scalars['Nrql']['input'];
  payloadCompression?: InputMaybe<StreamingExportPayloadCompression>;
};

export type StreamingExportStatus =
  | 'CREATION_FAILED'
  | 'CREATION_IN_PROGRESS'
  | 'DELETED'
  | 'DISABLED'
  | 'ENABLED';

export type SubscriptionEntitlement = {
  __typename?: 'SubscriptionEntitlement';
  attributes?: Maybe<Array<Maybe<EntitlementAttribute>>>;
  name?: Maybe<Scalars['String']['output']>;
};

export type SuggestedAnomalyBasedNrqlQuery = SuggestedNrqlQuery & {
  __typename?: 'SuggestedAnomalyBasedNrqlQuery';
  anomaly: SuggestedNrqlQueryAnomaly;
  metadata: SuggestedNrqlQueryMetadata;
  nrql: Scalars['String']['output'];
  relatedComponent?: Maybe<SuggestedNrqlQueryRelatedComponentType>;
  title: Scalars['String']['output'];
};

export type SuggestedHistoryBasedNrqlQuery = SuggestedNrqlQuery & {
  __typename?: 'SuggestedHistoryBasedNrqlQuery';
  metadata: SuggestedNrqlQueryMetadata;
  nrql: Scalars['String']['output'];
  relatedComponent?: Maybe<SuggestedNrqlQueryRelatedComponentType>;
  title: Scalars['String']['output'];
};

export type SuggestedNrqlQuery = {
  metadata: SuggestedNrqlQueryMetadata;
  nrql: Scalars['String']['output'];
  relatedComponent?: Maybe<SuggestedNrqlQueryRelatedComponentType>;
  title: Scalars['String']['output'];
};

export type SuggestedNrqlQueryAnomaly = {
  __typename?: 'SuggestedNrqlQueryAnomaly';
  timeWindow: TimeWindow;
};

export type SuggestedNrqlQueryGoldenSignal =
  | 'ERRORS'
  | 'LATENCY'
  | 'SATURATION'
  | 'TRAFFIC';

export type SuggestedNrqlQueryMetadata = {
  __typename?: 'SuggestedNrqlQueryMetadata';
  baseNrql: Scalars['Nrql']['output'];
  content: Array<SuggestedNrqlQueryProjection>;
  eventTypes: Array<Scalars['String']['output']>;
  facets?: Maybe<Array<Scalars['String']['output']>>;
  goldenSignal?: Maybe<SuggestedNrqlQueryGoldenSignal>;
  limit?: Maybe<Scalars['Nrql']['output']>;
  slideBy?: Maybe<Scalars['Nrql']['output']>;
  timeSeries?: Maybe<Scalars['Nrql']['output']>;
  timeWindow: TimeWindow;
};

export type SuggestedNrqlQueryProjection = {
  __typename?: 'SuggestedNrqlQueryProjection';
  aggregateFunction: Scalars['String']['output'];
  expression: Scalars['Nrql']['output'];
  label?: Maybe<Scalars['String']['output']>;
};

export type SuggestedNrqlQueryRelatedComponentType =
  | 'DATABASE'
  | 'DOWNSTREAM_SERVICE'
  | 'UPSTREAM_SERVICE';

export type SuggestedNrqlQueryResponse = {
  __typename?: 'SuggestedNrqlQueryResponse';
  suggestions?: Maybe<Array<SuggestedNrqlQuery>>;
};

export type SummaryUnit =
  | 'APDEX'
  | 'LOAD_AVERAGE'
  | 'PERCENT'
  | 'REQUESTS_PER_MINUTE'
  | 'SECONDS';

export type SummaryValue = {
  __typename?: 'SummaryValue';
  unit?: Maybe<SummaryUnit>;
  value?: Maybe<Scalars['Float']['output']>;
};

export type SupportAccountStitchedFields = {
  __typename?: 'SupportAccountStitchedFields';
  channels?: Maybe<Array<Maybe<SupportChannel>>>;
  diagnosticsRun?: Maybe<SupportDiagnosticsRun>;
  diagnosticsRunLogReview?: Maybe<SupportDiagnosticsRunLogReviewResponse>;
  diagnosticsRuns?: Maybe<Array<Maybe<SupportDiagnosticsItem>>>;
  diagnosticsStagingQuery?: Maybe<SupportDiagnosticsStagingQuery>;
  diagnosticsZip?: Maybe<SupportDiagnosticsItem>;
  phoneNumbers?: Maybe<Array<Maybe<SupportPhoneNumber>>>;
  /** @deprecated This has been renamed to diagnosticsStagingQuery */
  stagingQuery?: Maybe<SupportStagingQuery>;
  ticketSearch?: Maybe<SupportTicketsResult>;
  tier?: Maybe<Scalars['String']['output']>;
};


export type SupportAccountStitchedFieldsDiagnosticsRunArgs = {
  fileId: Scalars['String']['input'];
  fileName: Scalars['String']['input'];
};


export type SupportAccountStitchedFieldsDiagnosticsRunLogReviewArgs = {
  runId: Scalars['ID']['input'];
};


export type SupportAccountStitchedFieldsDiagnosticsRunsArgs = {
  fileDate?: InputMaybe<Scalars['String']['input']>;
  fileType?: InputMaybe<SupportFileType>;
};


export type SupportAccountStitchedFieldsDiagnosticsStagingQueryArgs = {
  beginTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  duration?: InputMaybe<Scalars['Seconds']['input']>;
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filters?: InputMaybe<Array<InputMaybe<SupportDiagnosticsQueryFilter>>>;
  id: Scalars['ID']['input'];
};


export type SupportAccountStitchedFieldsDiagnosticsZipArgs = {
  fileDate?: InputMaybe<Scalars['String']['input']>;
};


export type SupportAccountStitchedFieldsStagingQueryArgs = {
  beginTime?: InputMaybe<Scalars['Float']['input']>;
  duration?: InputMaybe<Scalars['Seconds']['input']>;
  endTime?: InputMaybe<Scalars['Float']['input']>;
  filters?: InputMaybe<Array<InputMaybe<SupportStagingQueryFilter>>>;
  queryId: Scalars['Int']['input'];
};


export type SupportAccountStitchedFieldsTicketSearchArgs = {
  criteria: SupportTicketSearchCriteria;
};

export type SupportActorStitchedFields = {
  __typename?: 'SupportActorStitchedFields';
  caseSearch?: Maybe<SupportCasesResult>;
  diagnosticsLogSearchTerms?: Maybe<SupportDiagnosticsLogSearchTermsResponse>;
  diagnosticsNerdgraphQueries?: Maybe<SupportDiagnosticsNerdgraphQueryResponse>;
  diagnosticsNrqlQueries?: Maybe<SupportDiagnosticsQueryResponse>;
  featureContexts?: Maybe<Array<Maybe<SupportFeatureContext>>>;
  guidedDiagnosticsCategories?: Maybe<Array<Maybe<SupportGuidedDiagnosticsCategory>>>;
  guidedDiagnosticsCategory?: Maybe<SupportGuidedDiagnosticsCategory>;
  guidedDiagnosticsEdge?: Maybe<SupportGuidedDiagnosticsEdge>;
  guidedDiagnosticsEdges?: Maybe<Array<Maybe<SupportGuidedDiagnosticsEdge>>>;
  guidedDiagnosticsFramework?: Maybe<SupportGuidedDiagnosticsFramework>;
  guidedDiagnosticsFrameworks?: Maybe<Array<Maybe<SupportGuidedDiagnosticsFramework>>>;
  guidedDiagnosticsNeighbors?: Maybe<Array<Maybe<SupportGuidedDiagnosticsNode>>>;
  guidedDiagnosticsNode?: Maybe<SupportGuidedDiagnosticsNode>;
  ticket?: Maybe<SupportTicketDetail>;
  ticketSearch?: Maybe<SupportTicketsResult>;
};


export type SupportActorStitchedFieldsCaseSearchArgs = {
  criteria: SupportCaseSearchCriteria;
};


export type SupportActorStitchedFieldsDiagnosticsNerdgraphQueriesArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type SupportActorStitchedFieldsDiagnosticsNrqlQueriesArgs = {
  filters?: InputMaybe<Array<InputMaybe<SupportDiagnosticsQueryFilter>>>;
  id?: InputMaybe<Scalars['ID']['input']>;
};


export type SupportActorStitchedFieldsGuidedDiagnosticsCategoryArgs = {
  categoryId: Scalars['ID']['input'];
};


export type SupportActorStitchedFieldsGuidedDiagnosticsEdgeArgs = {
  root: Scalars['ID']['input'];
  target: Scalars['ID']['input'];
};


export type SupportActorStitchedFieldsGuidedDiagnosticsEdgesArgs = {
  root?: InputMaybe<Scalars['ID']['input']>;
};


export type SupportActorStitchedFieldsGuidedDiagnosticsFrameworkArgs = {
  frameworkId: Scalars['ID']['input'];
  revision?: InputMaybe<Scalars['Int']['input']>;
};


export type SupportActorStitchedFieldsGuidedDiagnosticsFrameworksArgs = {
  includeRevisions?: InputMaybe<Scalars['Boolean']['input']>;
  state?: InputMaybe<SupportStateType>;
};


export type SupportActorStitchedFieldsGuidedDiagnosticsNeighborsArgs = {
  nodeId: Scalars['ID']['input'];
};


export type SupportActorStitchedFieldsGuidedDiagnosticsNodeArgs = {
  nodeId: Scalars['ID']['input'];
};


export type SupportActorStitchedFieldsTicketArgs = {
  id: Scalars['ID']['input'];
};


export type SupportActorStitchedFieldsTicketSearchArgs = {
  criteria: SupportTicketSearchCriteria;
};

export type SupportCase = {
  __typename?: 'SupportCase';
  accountId: Scalars['Int']['output'];
  caseNumber: Scalars['String']['output'];
  contextUrl?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  isEscalated: Scalars['Boolean']['output'];
  isEscalationEligible: Scalars['Boolean']['output'];
  latestReplyAt?: Maybe<Scalars['DateTime']['output']>;
  parentCaseId?: Maybe<Scalars['String']['output']>;
  productFeature: Scalars['String']['output'];
  requesterEmail: Scalars['String']['output'];
  severity: SupportCaseSeverity;
  status: SupportCaseStatus;
  title: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
};

export type SupportCaseFile = {
  __typename?: 'SupportCaseFile';
  link?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  size?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type SupportCaseRole =
  | 'COLLABORATOR'
  | 'REQUESTER';

export type SupportCaseSearchCriteria = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  role: SupportCaseRole;
};

export type SupportCaseSeverity =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'NORMAL';

export type SupportCaseStatus =
  | 'CLOSED'
  | 'INPROGRESS'
  | 'NEW'
  | 'ONHOLD'
  | 'PENDING'
  | 'SOLVED';

export type SupportCasesResult = {
  __typename?: 'SupportCasesResult';
  cases: Array<SupportCase>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  prevCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type SupportCategoryCreateInput = {
  categoryTitle: Scalars['String']['input'];
};

export type SupportCategoryUpdateInput = {
  categoryTitle?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

export type SupportChannel = {
  __typename?: 'SupportChannel';
  category?: Maybe<SupportChannelCategory>;
  status?: Maybe<SupportChannelStatus>;
  type?: Maybe<SupportChannelType>;
};

export type SupportChannelCategory =
  | 'BASIC'
  | 'CRITICAL'
  | 'DIRECT';

export type SupportChannelEngagement = {
  channelType?: Maybe<SupportChannelType>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
};

export type SupportChannelStatus =
  | 'DISABLED'
  | 'ENABLED';

export type SupportChannelType =
  | 'PHONE_LISTING'
  | 'TICKETS'
  | 'TICKET_ESCALATION';

export type SupportCustomerDefinedTicketStatus =
  | 'OPEN'
  | 'SOLVED';

export type SupportDiagnosticsItem = {
  __typename?: 'SupportDiagnosticsItem';
  fileId?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  fileType?: Maybe<SupportFileType>;
  fileUrl?: Maybe<Scalars['String']['output']>;
  parsedDate?: Maybe<Scalars['String']['output']>;
};

export type SupportDiagnosticsLogSearchTerm = {
  __typename?: 'SupportDiagnosticsLogSearchTerm';
  category?: Maybe<Scalars['String']['output']>;
  docLink?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  linesAfter?: Maybe<Scalars['Int']['output']>;
  linesBefore?: Maybe<Scalars['Int']['output']>;
  term?: Maybe<Scalars['String']['output']>;
};

export type SupportDiagnosticsLogSearchTermsResponse = {
  __typename?: 'SupportDiagnosticsLogSearchTermsResponse';
  searchTerms?: Maybe<Array<Maybe<SupportDiagnosticsLogSearchTerm>>>;
};

export type SupportDiagnosticsNerdgraphQuery = {
  __typename?: 'SupportDiagnosticsNerdgraphQuery';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  query?: Maybe<Scalars['String']['output']>;
  variables?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SupportDiagnosticsNerdgraphQueryCreateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  query: Scalars['String']['input'];
  variables?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SupportDiagnosticsNerdgraphQueryMutationResponse = {
  __typename?: 'SupportDiagnosticsNerdgraphQueryMutationResponse';
  nerdgraphQuery?: Maybe<SupportDiagnosticsNerdgraphQuery>;
};

export type SupportDiagnosticsNerdgraphQueryResponse = {
  __typename?: 'SupportDiagnosticsNerdgraphQueryResponse';
  nerdgraphQueries?: Maybe<Array<Maybe<SupportDiagnosticsQueryServiceListResponse>>>;
};

export type SupportDiagnosticsQuery = {
  __typename?: 'SupportDiagnosticsQuery';
  accountAttribute?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  filters?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  from?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  nestedQueryId?: Maybe<Scalars['ID']['output']>;
  select?: Maybe<Scalars['String']['output']>;
  stagingId?: Maybe<Scalars['ID']['output']>;
  timeseries?: Maybe<Scalars['Boolean']['output']>;
};

export type SupportDiagnosticsQueryCreateInput = {
  accountAttribute?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  filters?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  from?: InputMaybe<Scalars['String']['input']>;
  nestedQueryId?: InputMaybe<Scalars['ID']['input']>;
  select: Scalars['String']['input'];
  stagingId?: InputMaybe<Scalars['ID']['input']>;
  timeseries: Scalars['Boolean']['input'];
};

export type SupportDiagnosticsQueryDeleteResponse = {
  __typename?: 'SupportDiagnosticsQueryDeleteResponse';
  id?: Maybe<Scalars['ID']['output']>;
};

export type SupportDiagnosticsQueryFilter = {
  name?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type SupportDiagnosticsQueryMutationResponse = {
  __typename?: 'SupportDiagnosticsQueryMutationResponse';
  query?: Maybe<SupportDiagnosticsQuery>;
};

export type SupportDiagnosticsQueryResponse = {
  __typename?: 'SupportDiagnosticsQueryResponse';
  queries?: Maybe<Array<Maybe<SupportDiagnosticsQueryServiceListResponse>>>;
};

export type SupportDiagnosticsQueryServiceListResponse = {
  __typename?: 'SupportDiagnosticsQueryServiceListResponse';
  id?: Maybe<Scalars['ID']['output']>;
  query?: Maybe<Scalars['String']['output']>;
  variables?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SupportDiagnosticsRun = {
  __typename?: 'SupportDiagnosticsRun';
  data?: Maybe<Scalars['String']['output']>;
};

export type SupportDiagnosticsRunLogReviewItem = {
  __typename?: 'SupportDiagnosticsRunLogReviewItem';
  category?: Maybe<Scalars['String']['output']>;
  docLink?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  lineMatched?: Maybe<Scalars['String']['output']>;
  lineNumber?: Maybe<Scalars['Int']['output']>;
  linesAfter?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  linesBefore?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  logLines?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  termMatched?: Maybe<Scalars['String']['output']>;
};

export type SupportDiagnosticsRunLogReviewMetadata = {
  __typename?: 'SupportDiagnosticsRunLogReviewMetadata';
  filename?: Maybe<Scalars['String']['output']>;
  status?: Maybe<SupportLogReviewStatus>;
};

export type SupportDiagnosticsRunLogReviewResponse = {
  __typename?: 'SupportDiagnosticsRunLogReviewResponse';
  logErrors?: Maybe<Array<Maybe<SupportDiagnosticsRunLogReviewItem>>>;
  metadata?: Maybe<Array<Maybe<SupportDiagnosticsRunLogReviewMetadata>>>;
};

export type SupportDiagnosticsStagingQuery = {
  __typename?: 'SupportDiagnosticsStagingQuery';
  data?: Maybe<Scalars['String']['output']>;
  filterData?: Maybe<Array<Maybe<SupportFilterData>>>;
  type?: Maybe<Scalars['String']['output']>;
};

export type SupportEdgeCreateInput = {
  relationship: Scalars['String']['input'];
  root: Scalars['ID']['input'];
  target: Scalars['ID']['input'];
};

export type SupportEdgeDeleteInput = {
  root: Scalars['ID']['input'];
  target: Scalars['ID']['input'];
};

export type SupportEscalationEngagement = SupportChannelEngagement & {
  __typename?: 'SupportEscalationEngagement';
  channelType?: Maybe<SupportChannelType>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
};

export type SupportFeatureContext = {
  __typename?: 'SupportFeatureContext';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type SupportFileType =
  | 'JSON'
  | 'ZIP';

export type SupportFilterData = {
  __typename?: 'SupportFilterData';
  name?: Maybe<Scalars['String']['output']>;
  values?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SupportFrameworkCreateInput = {
  categoryTitle: Scalars['String']['input'];
  entrypoint: Scalars['ID']['input'];
  id?: InputMaybe<Scalars['ID']['input']>;
  inputs?: InputMaybe<Array<InputMaybe<SupportFrameworkInputCreateInput>>>;
  reactFlowObject: Scalars['String']['input'];
  summary: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type SupportFrameworkInput = {
  __typename?: 'SupportFrameworkInput';
  description?: Maybe<Scalars['String']['output']>;
  fields?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  id: Scalars['ID']['output'];
  label: Scalars['String']['output'];
  nodeIds?: Maybe<Array<Maybe<Scalars['ID']['output']>>>;
  uuid: Scalars['ID']['output'];
};

export type SupportFrameworkInputCreateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  fields?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  label: Scalars['String']['input'];
  nodeIds: Array<InputMaybe<Scalars['ID']['input']>>;
  uuid: Scalars['ID']['input'];
};

export type SupportGuidedDiagnosticsCategory = {
  __typename?: 'SupportGuidedDiagnosticsCategory';
  id: Scalars['ID']['output'];
  title: Scalars['String']['output'];
};

export type SupportGuidedDiagnosticsDeleteResponse = {
  __typename?: 'SupportGuidedDiagnosticsDeleteResponse';
  id?: Maybe<Scalars['ID']['output']>;
};

export type SupportGuidedDiagnosticsEdge = {
  __typename?: 'SupportGuidedDiagnosticsEdge';
  relationship: Scalars['String']['output'];
  root: Scalars['ID']['output'];
  target: Scalars['ID']['output'];
};

export type SupportGuidedDiagnosticsEdgeDeleteResponse = {
  __typename?: 'SupportGuidedDiagnosticsEdgeDeleteResponse';
  rootAndTarget: Scalars['String']['output'];
};

export type SupportGuidedDiagnosticsFramework = {
  __typename?: 'SupportGuidedDiagnosticsFramework';
  activeRevision: Scalars['Int']['output'];
  categoryTitle: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  createdBy: Scalars['String']['output'];
  entrypoint: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  inputs?: Maybe<Array<Maybe<SupportFrameworkInput>>>;
  reactFlowObject: Scalars['String']['output'];
  revision: Scalars['Int']['output'];
  state: SupportStateType;
  summary: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
  updatedBy: Scalars['String']['output'];
};

export type SupportGuidedDiagnosticsNode = {
  __typename?: 'SupportGuidedDiagnosticsNode';
  createdAt: Scalars['DateTime']['output'];
  createdBy: Scalars['String']['output'];
  edges?: Maybe<Array<Maybe<SupportGuidedDiagnosticsEdge>>>;
  frameworkLink?: Maybe<SupportGuidedDiagnosticsFramework>;
  id: Scalars['ID']['output'];
  nerdgraphQueries?: Maybe<SupportGuidedDiagnosticsQueryNode>;
  nrqlQueries?: Maybe<SupportGuidedDiagnosticsQueryNode>;
  outputLink?: Maybe<Scalars['String']['output']>;
  outputSummary?: Maybe<Scalars['String']['output']>;
  outputTitle?: Maybe<Scalars['String']['output']>;
  stagingQueries?: Maybe<SupportGuidedDiagnosticsQueryNode>;
  summary: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updatedAt: Scalars['DateTime']['output'];
  updatedBy: Scalars['String']['output'];
};

export type SupportGuidedDiagnosticsQueryNode = {
  __typename?: 'SupportGuidedDiagnosticsQueryNode';
  id?: Maybe<Scalars['ID']['output']>;
  query?: Maybe<Scalars['String']['output']>;
  variables?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SupportIssueContext = {
  featureContextId: Scalars['ID']['input'];
  url?: InputMaybe<Scalars['String']['input']>;
};

export type SupportLogReviewStatus =
  | 'COMPLETE'
  | 'SKIPPED'
  | 'TRUNCATED';

export type SupportMessage = {
  __typename?: 'SupportMessage';
  body?: Maybe<Scalars['String']['output']>;
  createdDate?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  isNewRelic?: Maybe<Scalars['Boolean']['output']>;
  link?: Maybe<Scalars['String']['output']>;
  messageByEmail?: Maybe<Scalars['String']['output']>;
  messageByName?: Maybe<Scalars['String']['output']>;
  messageByRpmUserId?: Maybe<Scalars['String']['output']>;
};

export type SupportNodeCreateInput = {
  frameworkLink?: InputMaybe<Scalars['ID']['input']>;
  nerdgraphQueries?: InputMaybe<Scalars['ID']['input']>;
  nrqlQueries?: InputMaybe<Scalars['ID']['input']>;
  outputLink?: InputMaybe<Scalars['String']['input']>;
  outputSummary?: InputMaybe<Scalars['String']['input']>;
  outputTitle?: InputMaybe<Scalars['String']['input']>;
  stagingQueries?: InputMaybe<Scalars['ID']['input']>;
  summary: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type SupportPhoneNumber = {
  __typename?: 'SupportPhoneNumber';
  name?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['String']['output']>;
};

export type SupportSeverityContext = {
  __typename?: 'SupportSeverityContext';
  description?: Maybe<Scalars['String']['output']>;
  level?: Maybe<SupportTicketSeverity>;
  reason?: Maybe<Scalars['String']['output']>;
};

export type SupportSeverityContextInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<SupportTicketSeverity>;
  reason?: InputMaybe<Scalars['String']['input']>;
};

export type SupportStagingQuery = {
  __typename?: 'SupportStagingQuery';
  data?: Maybe<Scalars['String']['output']>;
  filterData?: Maybe<Array<Maybe<SupportFilterData>>>;
  type?: Maybe<Scalars['String']['output']>;
};

export type SupportStagingQueryFilter = {
  name?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type SupportStateType =
  | 'DRAFT'
  | 'PUBLISHED'
  | 'QA';

export type SupportTicket = {
  __typename?: 'SupportTicket';
  accountId?: Maybe<Scalars['Int']['output']>;
  attachmentKey?: Maybe<Scalars['String']['output']>;
  caseNumber: Scalars['String']['output'];
  channelEngagements?: Maybe<Array<Maybe<SupportChannelEngagement>>>;
  collaboratorEmails?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  contextUrl: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  isAwaitingSla?: Maybe<Scalars['Boolean']['output']>;
  isEscalationEligible?: Maybe<Scalars['Boolean']['output']>;
  isFollowUpEligible?: Maybe<Scalars['Boolean']['output']>;
  latestReply?: Maybe<Scalars['DateTime']['output']>;
  originalUrl: Scalars['String']['output'];
  parentCaseId?: Maybe<Scalars['String']['output']>;
  productFeature?: Maybe<Scalars['String']['output']>;
  requesterEmail?: Maybe<Scalars['String']['output']>;
  severity?: Maybe<SupportTicketSeverity>;
  severityContext?: Maybe<SupportSeverityContext>;
  status?: Maybe<SupportTicketStatus>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type SupportTicketAttachment = {
  __typename?: 'SupportTicketAttachment';
  id?: Maybe<Scalars['ID']['output']>;
  uploadUrl?: Maybe<Scalars['String']['output']>;
};

export type SupportTicketCollaboratorsResponse = {
  __typename?: 'SupportTicketCollaboratorsResponse';
  collaboratorEmails?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SupportTicketCreateError = {
  __typename?: 'SupportTicketCreateError';
  message: Scalars['String']['output'];
  type: SupportTicketCreateErrorType;
};

export type SupportTicketCreateErrorType =
  | 'NO_ACCESS_TO_TICKET_SUPPORT_CHANNEL'
  | 'TICKET_COMMENT_WITH_ATTACHMENTS_LINKS_FAILED';

export type SupportTicketCreateInput = {
  attachments?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  collaboratorEmails?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  description: Scalars['String']['input'];
  issueContext: SupportIssueContext;
  parentCaseId?: InputMaybe<Scalars['String']['input']>;
  severity?: InputMaybe<SupportTicketSeverity>;
  severityContext?: InputMaybe<SupportSeverityContextInput>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  title: Scalars['String']['input'];
};

export type SupportTicketCreateResponse = {
  __typename?: 'SupportTicketCreateResponse';
  errors?: Maybe<Array<Maybe<SupportTicketCreateError>>>;
  ticket?: Maybe<SupportTicket>;
};

export type SupportTicketDetail = {
  __typename?: 'SupportTicketDetail';
  accountId?: Maybe<Scalars['Int']['output']>;
  attachmentKey?: Maybe<Scalars['String']['output']>;
  caseFiles?: Maybe<Array<Maybe<SupportCaseFile>>>;
  caseMessages?: Maybe<Array<SupportMessage>>;
  caseNumber: Scalars['String']['output'];
  channelEngagements?: Maybe<Array<Maybe<SupportChannelEngagement>>>;
  collaboratorEmails?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  contextUrl: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  isAwaitingSla?: Maybe<Scalars['Boolean']['output']>;
  isEscalationEligible?: Maybe<Scalars['Boolean']['output']>;
  isFollowUpEligible?: Maybe<Scalars['Boolean']['output']>;
  latestReply?: Maybe<Scalars['DateTime']['output']>;
  originalUrl: Scalars['String']['output'];
  parentCaseId?: Maybe<Scalars['String']['output']>;
  productFeature?: Maybe<Scalars['String']['output']>;
  requesterEmail?: Maybe<Scalars['String']['output']>;
  severity?: Maybe<SupportTicketSeverity>;
  severityContext?: Maybe<SupportSeverityContext>;
  status?: Maybe<SupportTicketStatus>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type SupportTicketEscalationError = {
  __typename?: 'SupportTicketEscalationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<SupportTicketEscalationErrorType>;
};

export type SupportTicketEscalationErrorType =
  | 'CANT_ESCALATE_CLOSED_TICKET'
  | 'NO_ACCESS_TO_TICKET'
  | 'NO_ACCESS_TO_TICKET_ESCALATION_SUPPORT_CHANNEL'
  | 'TICKET_ALREADY_ESCALATED'
  | 'TICKET_ESCALATION_SUPPORT_CHANNEL_DISABLED'
  | 'TICKET_IS_AWAITING_SLA';

export type SupportTicketEscalationInput = {
  callAvailability: Scalars['String']['input'];
  phoneNumber: Scalars['String']['input'];
  reason: Scalars['String']['input'];
  ticketId: Scalars['ID']['input'];
  timeZoneName: Scalars['String']['input'];
};

export type SupportTicketEscalationResponse = {
  __typename?: 'SupportTicketEscalationResponse';
  errors?: Maybe<Array<Maybe<SupportTicketEscalationError>>>;
  ticket?: Maybe<SupportTicket>;
};

export type SupportTicketMessageCreateResponse = {
  __typename?: 'SupportTicketMessageCreateResponse';
  ticket?: Maybe<SupportTicketDetail>;
};

export type SupportTicketMessageInput = {
  attachments?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
  body: Scalars['String']['input'];
  newUrl?: InputMaybe<Scalars['String']['input']>;
  setCaseStatus?: InputMaybe<SupportCustomerDefinedTicketStatus>;
};

export type SupportTicketRole =
  | 'COLLABORATOR'
  | 'REQUESTER';

export type SupportTicketSearchCriteria = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  role: SupportTicketRole;
};

export type SupportTicketSeverity =
  | 'CRITICAL'
  | 'HIGH'
  | 'LOW'
  | 'NORMAL';

export type SupportTicketStatus =
  | 'CLOSED'
  | 'HOLD'
  | 'NEW'
  | 'OPEN'
  | 'PENDING'
  | 'SOLVED';

export type SupportTicketsResult = {
  __typename?: 'SupportTicketsResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  prevCursor?: Maybe<Scalars['String']['output']>;
  tickets?: Maybe<Array<Maybe<SupportTicket>>>;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

export type SyntheticMonitorCheckResult = {
  __typename?: 'SyntheticMonitorCheckResult';
  id?: Maybe<Scalars['String']['output']>;
  status?: Maybe<SyntheticMonitorCheckStatus>;
};

export type SyntheticMonitorCheckStatus =
  | 'FAILED'
  | 'SUCCESS';

export type SyntheticMonitorEntity = AlertableEntity & Entity & {
  __typename?: 'SyntheticMonitorEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  assets?: Maybe<Array<Maybe<SyntheticsSyntheticMonitorAsset>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  monitorId?: Maybe<Scalars['ID']['output']>;
  monitorSummary?: Maybe<SyntheticMonitorSummaryData>;
  monitorType?: Maybe<SyntheticMonitorType>;
  monitoredUrl?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  period?: Maybe<Scalars['Minutes']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type SyntheticMonitorEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type SyntheticMonitorEntityAssetsArgs = {
  checkId: Scalars['String']['input'];
};


export type SyntheticMonitorEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type SyntheticMonitorEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type SyntheticMonitorEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type SyntheticMonitorEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type SyntheticMonitorEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type SyntheticMonitorEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type SyntheticMonitorEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type SyntheticMonitorEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type SyntheticMonitorEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type SyntheticMonitorEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type SyntheticMonitorEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type SyntheticMonitorEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type SyntheticMonitorEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'SyntheticMonitorEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  monitorId?: Maybe<Scalars['ID']['output']>;
  monitorSummary?: Maybe<SyntheticMonitorSummaryData>;
  monitorType?: Maybe<SyntheticMonitorType>;
  monitoredUrl?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<Scalars['Minutes']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type SyntheticMonitorEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type SyntheticMonitorEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type SyntheticMonitorEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type SyntheticMonitorEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type SyntheticMonitorStatus =
  | 'DELETED'
  | 'DISABLED'
  | 'ENABLED'
  | 'FAULTY'
  | 'MUTED'
  | 'PAUSED';

export type SyntheticMonitorSummaryData = {
  __typename?: 'SyntheticMonitorSummaryData';
  latestResults?: Maybe<Array<Maybe<SyntheticMonitorCheckResult>>>;
  loadSizeAverage?: Maybe<Scalars['Float']['output']>;
  loadTimeP50?: Maybe<Scalars['Milliseconds']['output']>;
  loadTimeP95?: Maybe<Scalars['Milliseconds']['output']>;
  locationsFailing?: Maybe<Scalars['Int']['output']>;
  locationsRunning?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<SyntheticMonitorStatus>;
  successRate?: Maybe<Scalars['Float']['output']>;
};

export type SyntheticMonitorType =
  | 'BROKEN_LINKS'
  | 'BROWSER'
  | 'CERT_CHECK'
  | 'SCRIPT_API'
  | 'SCRIPT_BROWSER'
  | 'SIMPLE'
  | 'STEP_MONITOR';

export type SyntheticsAccountChecks = {
  __typename?: 'SyntheticsAccountChecks';
  monthlyAllocatedChecks?: Maybe<Scalars['Int']['output']>;
  monthlyChecks?: Maybe<Scalars['Int']['output']>;
  monthlyChecksLimit?: Maybe<Scalars['Float']['output']>;
};

export type SyntheticsAccountStitchedFields = {
  __typename?: 'SyntheticsAccountStitchedFields';
  automatedTestResult?: Maybe<SyntheticsAutomatedTestResult>;
  checkValidationJob?: Maybe<SyntheticsScriptValidationQueryResponse>;
  checks?: Maybe<SyntheticsAccountChecks>;
  getJobAssets?: Maybe<SyntheticsJobAssetsQueryResponse>;
  monthlyChecks?: Maybe<Scalars['Int']['output']>;
  privateLocations?: Maybe<Array<Maybe<SyntheticsPrivateLocation>>>;
  script?: Maybe<SyntheticsMonitorScriptQueryResponse>;
  steps?: Maybe<Array<SyntheticsStep>>;
};


export type SyntheticsAccountStitchedFieldsAutomatedTestResultArgs = {
  batchId: Scalars['String']['input'];
};


export type SyntheticsAccountStitchedFieldsCheckValidationJobArgs = {
  validationId: Scalars['String']['input'];
};


export type SyntheticsAccountStitchedFieldsGetJobAssetsArgs = {
  assetType: SyntheticsAssetType;
  jobId: Scalars['String']['input'];
  monitorGuid: Scalars['EntityGuid']['input'];
};


export type SyntheticsAccountStitchedFieldsScriptArgs = {
  monitorGuid: Scalars['EntityGuid']['input'];
};


export type SyntheticsAccountStitchedFieldsStepsArgs = {
  monitorGuid: Scalars['EntityGuid']['input'];
};

export type SyntheticsActorStitchedFields = {
  __typename?: 'SyntheticsActorStitchedFields';
  publicLocation?: Maybe<SyntheticsPublicLocation>;
  publicLocations?: Maybe<Array<Maybe<SyntheticsPublicLocationOutline>>>;
};


export type SyntheticsActorStitchedFieldsPublicLocationArgs = {
  locationName: Scalars['String']['input'];
};

export type SyntheticsAdvancedOptions = {
  __typename?: 'SyntheticsAdvancedOptions';
  customHeaders?: Maybe<Array<Maybe<SyntheticsCustomHeader>>>;
  redirectIsFailure?: Maybe<Scalars['Boolean']['output']>;
  responseValidation?: Maybe<Scalars['String']['output']>;
  shouldBypassHeadRequest?: Maybe<Scalars['Boolean']['output']>;
  shouldTakeScreenshot?: Maybe<Scalars['Boolean']['output']>;
  tlsValidation?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsAdvancedOptionsInput = {
  customHeaders?: InputMaybe<Array<InputMaybe<SyntheticsCustomHeaderInput>>>;
  deviceEmulation?: InputMaybe<SyntheticsDeviceEmulationInput>;
  redirectIsFailure?: InputMaybe<Scalars['Boolean']['input']>;
  responseValidation?: InputMaybe<Scalars['String']['input']>;
  shouldBypassHeadRequest?: InputMaybe<Scalars['Boolean']['input']>;
  shouldTakeScreenshot?: InputMaybe<Scalars['Boolean']['input']>;
  tlsValidation?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SyntheticsAssetType =
  | 'AUTOMATED_TEST'
  | 'MONITOR'
  | 'VALIDATION';

export type SyntheticsAutomatedTestConfig = {
  __typename?: 'SyntheticsAutomatedTestConfig';
  batchName?: Maybe<Scalars['String']['output']>;
  branch?: Maybe<Scalars['String']['output']>;
  commit?: Maybe<Scalars['String']['output']>;
  deepLink?: Maybe<Scalars['String']['output']>;
  platform?: Maybe<Scalars['String']['output']>;
  repository?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsAutomatedTestConfigInput = {
  batchName?: InputMaybe<Scalars['String']['input']>;
  branch?: InputMaybe<Scalars['String']['input']>;
  commit?: InputMaybe<Scalars['String']['input']>;
  deepLink?: InputMaybe<Scalars['String']['input']>;
  platform?: InputMaybe<Scalars['String']['input']>;
  repository?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsAutomatedTestJobResult = {
  __typename?: 'SyntheticsAutomatedTestJobResult';
  automatedTestMonitorConfig?: Maybe<SyntheticsAutomatedTestMonitorConfig>;
  batchId?: Maybe<Scalars['String']['output']>;
  duration?: Maybe<Scalars['Milliseconds']['output']>;
  error?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  location?: Maybe<Scalars['String']['output']>;
  locationLabel?: Maybe<Scalars['String']['output']>;
  monitorGuid?: Maybe<Scalars['EntityGuid']['output']>;
  monitorId?: Maybe<Scalars['String']['output']>;
  monitorName?: Maybe<Scalars['String']['output']>;
  result?: Maybe<SyntheticsJobStatus>;
  resultsUrl?: Maybe<Scalars['String']['output']>;
  type?: Maybe<SyntheticsMonitorType>;
  typeLabel?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsAutomatedTestMonitorConfig = {
  __typename?: 'SyntheticsAutomatedTestMonitorConfig';
  isBlocking?: Maybe<Scalars['Boolean']['output']>;
  overrides?: Maybe<SyntheticsAutomatedTestOverrides>;
};

export type SyntheticsAutomatedTestMonitorConfigInput = {
  isBlocking?: InputMaybe<Scalars['Boolean']['input']>;
  overrides?: InputMaybe<SyntheticsAutomatedTestOverridesInput>;
};

export type SyntheticsAutomatedTestMonitorInput = {
  config?: InputMaybe<SyntheticsAutomatedTestMonitorConfigInput>;
  monitorGuid: Scalars['EntityGuid']['input'];
};

export type SyntheticsAutomatedTestOverrides = {
  __typename?: 'SyntheticsAutomatedTestOverrides';
  domain?: Maybe<Array<Maybe<SyntheticsScriptDomainOverride>>>;
  location?: Maybe<Scalars['String']['output']>;
  secureCredential?: Maybe<Array<Maybe<SyntheticsSecureCredentialOverride>>>;
  startingUrl?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsAutomatedTestOverridesInput = {
  domain?: InputMaybe<Array<InputMaybe<SyntheticsScriptDomainOverrideInput>>>;
  location?: InputMaybe<Scalars['String']['input']>;
  secureCredential?: InputMaybe<Array<InputMaybe<SyntheticsSecureCredentialOverrideInput>>>;
  startingUrl?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsAutomatedTestResult = {
  __typename?: 'SyntheticsAutomatedTestResult';
  config?: Maybe<SyntheticsAutomatedTestConfig>;
  finishTimestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
  startTimestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
  status?: Maybe<SyntheticsAutomatedTestStatus>;
  tests?: Maybe<Array<Maybe<SyntheticsAutomatedTestJobResult>>>;
};

export type SyntheticsAutomatedTestStartResult = {
  __typename?: 'SyntheticsAutomatedTestStartResult';
  batchId?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsAutomatedTestStatus =
  | 'FAILED'
  | 'IN_PROGRESS'
  | 'PASSED'
  | 'TIMEOUT';

export type SyntheticsBrokenLinksMonitor = {
  __typename?: 'SyntheticsBrokenLinksMonitor';
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  runtime?: Maybe<SyntheticsExtendedTypeMonitorRuntime>;
  status?: Maybe<SyntheticsMonitorStatus>;
  uri?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsBrokenLinksMonitorCreateMutationResult = {
  __typename?: 'SyntheticsBrokenLinksMonitorCreateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorCreateError>>;
  monitor?: Maybe<SyntheticsBrokenLinksMonitor>;
};

export type SyntheticsBrokenLinksMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsBrokenLinksMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsBrokenLinksMonitor>;
};

export type SyntheticsCertCheckMonitor = {
  __typename?: 'SyntheticsCertCheckMonitor';
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  numberDaysToFailBeforeCertExpires?: Maybe<Scalars['Int']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  runtime?: Maybe<SyntheticsExtendedTypeMonitorRuntime>;
  status?: Maybe<SyntheticsMonitorStatus>;
};

export type SyntheticsCertCheckMonitorCreateMutationResult = {
  __typename?: 'SyntheticsCertCheckMonitorCreateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorCreateError>>;
  monitor?: Maybe<SyntheticsCertCheckMonitor>;
};

export type SyntheticsCertCheckMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsCertCheckMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsCertCheckMonitor>;
};

export type SyntheticsContinent =
  | 'AFRICA'
  | 'ASIA'
  | 'AUSTRALIA'
  | 'EUROPE'
  | 'NORTH_AMERICA'
  | 'SOUTH_AMERICA'
  | 'UNKNOWN';

export type SyntheticsCreateBrokenLinksMonitorInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations: SyntheticsLocationsInput;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  runtime?: InputMaybe<SyntheticsExtendedTypeMonitorRuntimeInput>;
  status: SyntheticsMonitorStatus;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  uri: Scalars['String']['input'];
};

export type SyntheticsCreateCertCheckMonitorInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  domain: Scalars['String']['input'];
  locations: SyntheticsLocationsInput;
  name: Scalars['String']['input'];
  numberDaysToFailBeforeCertExpires: Scalars['Int']['input'];
  period: SyntheticsMonitorPeriod;
  runtime?: InputMaybe<SyntheticsExtendedTypeMonitorRuntimeInput>;
  status: SyntheticsMonitorStatus;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsCreateScriptApiMonitorInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations: SyntheticsScriptedMonitorLocationsInput;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  script: Scalars['String']['input'];
  status: SyntheticsMonitorStatus;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsCreateScriptBrowserMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsScriptBrowserMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations: SyntheticsScriptedMonitorLocationsInput;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  script: Scalars['String']['input'];
  status: SyntheticsMonitorStatus;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsCreateSimpleBrowserMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsSimpleBrowserMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations: SyntheticsLocationsInput;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  status: SyntheticsMonitorStatus;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  uri: Scalars['String']['input'];
};

export type SyntheticsCreateSimpleMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsSimpleMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations: SyntheticsLocationsInput;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  status: SyntheticsMonitorStatus;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  uri: Scalars['String']['input'];
};

export type SyntheticsCreateStepMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsStepMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations: SyntheticsScriptedMonitorLocationsInput;
  name: Scalars['String']['input'];
  period: SyntheticsMonitorPeriod;
  runtime?: InputMaybe<SyntheticsExtendedTypeMonitorRuntimeInput>;
  status: SyntheticsMonitorStatus;
  steps: Array<SyntheticsStepInput>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsCustomHeader = {
  __typename?: 'SyntheticsCustomHeader';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type SyntheticsCustomHeaderInput = {
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type SyntheticsDailyMonitorDowntimeMutationResult = {
  __typename?: 'SyntheticsDailyMonitorDowntimeMutationResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  endRepeat?: Maybe<SyntheticsDateWindowEndOutput>;
  endTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  monitorGuids?: Maybe<Array<Maybe<Scalars['EntityGuid']['output']>>>;
  name?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsDateWindowEndConfig = {
  onDate?: InputMaybe<Scalars['Date']['input']>;
  onRepeat?: InputMaybe<Scalars['Int']['input']>;
};

export type SyntheticsDateWindowEndOutput = {
  __typename?: 'SyntheticsDateWindowEndOutput';
  onDate?: Maybe<Scalars['Date']['output']>;
  onRepeat?: Maybe<Scalars['Int']['output']>;
};

export type SyntheticsDaysOfWeek = {
  ordinalDayOfMonth: SyntheticsMonitorDowntimeDayOfMonthOrdinal;
  weekDay: SyntheticsMonitorDowntimeWeekDays;
};

export type SyntheticsDaysOfWeekOutput = {
  __typename?: 'SyntheticsDaysOfWeekOutput';
  ordinalDayOfMonth?: Maybe<SyntheticsMonitorDowntimeDayOfMonthOrdinal>;
  weekDay?: Maybe<SyntheticsMonitorDowntimeWeekDays>;
};

export type SyntheticsDeviceEmulation = {
  __typename?: 'SyntheticsDeviceEmulation';
  deviceOrientation: SyntheticsDeviceOrientation;
  deviceType: SyntheticsDeviceType;
};

export type SyntheticsDeviceEmulationInput = {
  deviceOrientation: SyntheticsDeviceOrientation;
  deviceType: SyntheticsDeviceType;
};

export type SyntheticsDeviceOrientation =
  | 'LANDSCAPE'
  | 'NONE'
  | 'PORTRAIT';

export type SyntheticsDeviceType =
  | 'MOBILE'
  | 'NONE'
  | 'TABLET';

export type SyntheticsError = {
  __typename?: 'SyntheticsError';
  description?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsExtendedTypeInput = {
  daysUntilExpiration?: InputMaybe<Scalars['Int']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsExtendedTypeMetadata = {
  __typename?: 'SyntheticsExtendedTypeMetadata';
  daysUntilExpiration?: Maybe<Scalars['Int']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsExtendedTypeMonitorRuntime = {
  __typename?: 'SyntheticsExtendedTypeMonitorRuntime';
  runtimeType?: Maybe<Scalars['String']['output']>;
  runtimeTypeVersion?: Maybe<Scalars['SemVer']['output']>;
};

export type SyntheticsExtendedTypeMonitorRuntimeInput = {
  runtimeType: Scalars['String']['input'];
  runtimeTypeVersion: Scalars['SemVer']['input'];
};

export type SyntheticsGenerateMonitorScriptInput = {
  steps: Array<SyntheticsStepInput>;
};

export type SyntheticsGenerateMonitorScriptResult = {
  __typename?: 'SyntheticsGenerateMonitorScriptResult';
  errors?: Maybe<Array<Maybe<SyntheticsGenerateScriptError>>>;
  script?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsGenerateScriptError = {
  __typename?: 'SyntheticsGenerateScriptError';
  description: Scalars['String']['output'];
  type: SyntheticsTriggerScriptValidationErrorType;
};

export type SyntheticsJobAssetsQueryResponse = {
  __typename?: 'SyntheticsJobAssetsQueryResponse';
  jobUrl?: Maybe<Scalars['String']['output']>;
  screenshotUrl?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsJobStatus =
  | 'FAILED'
  | 'PENDING'
  | 'SUCCESS'
  | 'UNKNOWN';

export type SyntheticsLocations = {
  __typename?: 'SyntheticsLocations';
  private?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  public?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SyntheticsLocationsInput = {
  private?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  public?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SyntheticsMonitorCreateError = {
  __typename?: 'SyntheticsMonitorCreateError';
  description: Scalars['String']['output'];
  type: SyntheticsMonitorCreateErrorType;
};

export type SyntheticsMonitorCreateErrorType =
  | 'BAD_REQUEST'
  | 'INTERNAL_SERVER_ERROR'
  | 'NOT_FOUND'
  | 'PAYMENT_REQUIRED'
  | 'TAGGING_ERROR'
  | 'UNAUTHORIZED'
  | 'UNKNOWN_ERROR';

export type SyntheticsMonitorDeleteMutationResult = {
  __typename?: 'SyntheticsMonitorDeleteMutationResult';
  deletedGuid?: Maybe<Scalars['EntityGuid']['output']>;
};

export type SyntheticsMonitorDowntimeDailyConfig = {
  endRepeat?: InputMaybe<SyntheticsDateWindowEndConfig>;
  endTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  startTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsMonitorDowntimeDayOfMonthOrdinal =
  | 'FIRST'
  | 'FOURTH'
  | 'LAST'
  | 'SECOND'
  | 'THIRD';

export type SyntheticsMonitorDowntimeDeleteResult = {
  __typename?: 'SyntheticsMonitorDowntimeDeleteResult';
  guid?: Maybe<Scalars['EntityGuid']['output']>;
};

export type SyntheticsMonitorDowntimeMonthlyConfig = {
  endRepeat?: InputMaybe<SyntheticsDateWindowEndConfig>;
  endTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  frequency?: InputMaybe<SyntheticsMonitorDowntimeMonthlyFrequency>;
  startTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsMonitorDowntimeMonthlyFrequency = {
  daysOfMonth?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  daysOfWeek?: InputMaybe<SyntheticsDaysOfWeek>;
};

export type SyntheticsMonitorDowntimeMonthlyFrequencyOutput = {
  __typename?: 'SyntheticsMonitorDowntimeMonthlyFrequencyOutput';
  daysOfMonth?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  daysOfWeek?: Maybe<SyntheticsDaysOfWeekOutput>;
};

export type SyntheticsMonitorDowntimeMutationResult = {
  __typename?: 'SyntheticsMonitorDowntimeMutationResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  endRepeat?: Maybe<SyntheticsDateWindowEndOutput>;
  endTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  frequency?: Maybe<SyntheticsMonitorDowntimeMonthlyFrequencyOutput>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  maintenanceDays?: Maybe<Array<Maybe<SyntheticsMonitorDowntimeWeekDays>>>;
  monitorGuids?: Maybe<Array<Maybe<Scalars['EntityGuid']['output']>>>;
  name?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsMonitorDowntimeOnceConfig = {
  endTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  startTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsMonitorDowntimeWeekDays =
  | 'FRIDAY'
  | 'MONDAY'
  | 'SATURDAY'
  | 'SUNDAY'
  | 'THURSDAY'
  | 'TUESDAY'
  | 'WEDNESDAY';

export type SyntheticsMonitorDowntimeWeeklyConfig = {
  endRepeat?: InputMaybe<SyntheticsDateWindowEndConfig>;
  endTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  maintenanceDays?: InputMaybe<Array<InputMaybe<SyntheticsMonitorDowntimeWeekDays>>>;
  startTime?: InputMaybe<Scalars['NaiveDateTime']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsMonitorMutationResult = {
  __typename?: 'SyntheticsMonitorMutationResult';
  advancedOptions?: Maybe<SyntheticsAdvancedOptions>;
  apiVersion?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  errors?: Maybe<Array<Maybe<SyntheticsError>>>;
  extendedTypeMetadata?: Maybe<SyntheticsExtendedTypeMetadata>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  slaThreshold?: Maybe<Scalars['Float']['output']>;
  status?: Maybe<SyntheticsMonitorStatus>;
  steps?: Maybe<Array<Maybe<SyntheticsStep>>>;
  type?: Maybe<SyntheticsMonitorType>;
  uri?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsMonitorPeriod =
  | 'EVERY_5_MINUTES'
  | 'EVERY_6_HOURS'
  | 'EVERY_10_MINUTES'
  | 'EVERY_12_HOURS'
  | 'EVERY_15_MINUTES'
  | 'EVERY_30_MINUTES'
  | 'EVERY_DAY'
  | 'EVERY_HOUR'
  | 'EVERY_MINUTE';

export type SyntheticsMonitorScriptMutationResult = {
  __typename?: 'SyntheticsMonitorScriptMutationResult';
  errors?: Maybe<Array<Maybe<SyntheticsError>>>;
};

export type SyntheticsMonitorScriptQueryResponse = {
  __typename?: 'SyntheticsMonitorScriptQueryResponse';
  text?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsMonitorStatus =
  | 'DISABLED'
  | 'ENABLED'
  | 'MUTED';

export type SyntheticsMonitorType =
  | 'BROKEN_LINKS'
  | 'BROWSER'
  | 'CERT_CHECK'
  | 'SCRIPT_API'
  | 'SCRIPT_BROWSER'
  | 'SIMPLE'
  | 'STEP_MONITOR';

export type SyntheticsMonitorUpdateError = {
  __typename?: 'SyntheticsMonitorUpdateError';
  description: Scalars['String']['output'];
  type: SyntheticsMonitorUpdateErrorType;
};

export type SyntheticsMonitorUpdateErrorType =
  | 'BAD_REQUEST'
  | 'INTERNAL_SERVER_ERROR'
  | 'NOT_FOUND'
  | 'PAYMENT_REQUIRED'
  | 'SCRIPT_ERROR'
  | 'TAGGING_ERROR'
  | 'UNAUTHORIZED'
  | 'UNKNOWN_ERROR';

export type SyntheticsMonthlyMonitorDowntimeMutationResult = {
  __typename?: 'SyntheticsMonthlyMonitorDowntimeMutationResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  endRepeat?: Maybe<SyntheticsDateWindowEndOutput>;
  endTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  frequency?: Maybe<SyntheticsMonitorDowntimeMonthlyFrequencyOutput>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  monitorGuids?: Maybe<Array<Maybe<Scalars['EntityGuid']['output']>>>;
  name?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsOnceMonitorDowntimeMutationResult = {
  __typename?: 'SyntheticsOnceMonitorDowntimeMutationResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  endTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  monitorGuids?: Maybe<Array<Maybe<Scalars['EntityGuid']['output']>>>;
  name?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsPrivateLocation = {
  __typename?: 'SyntheticsPrivateLocation';
  accountId?: Maybe<Scalars['Int']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  verifiedScriptExecution?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsPrivateLocationDeleteResult = {
  __typename?: 'SyntheticsPrivateLocationDeleteResult';
  errors?: Maybe<Array<Maybe<SyntheticsPrivateLocationMutationError>>>;
};

export type SyntheticsPrivateLocationHmacInput = {
  hmac: Scalars['String']['input'];
  locationId: Scalars['String']['input'];
};

export type SyntheticsPrivateLocationInput = {
  guid: Scalars['ID']['input'];
  vsePassword?: InputMaybe<Scalars['SecureValue']['input']>;
};

export type SyntheticsPrivateLocationMutationError = {
  __typename?: 'SyntheticsPrivateLocationMutationError';
  description: Scalars['String']['output'];
  type: SyntheticsPrivateLocationMutationErrorType;
};

export type SyntheticsPrivateLocationMutationErrorType =
  | 'BAD_REQUEST'
  | 'INTERNAL_SERVER_ERROR'
  | 'NOT_FOUND'
  | 'UNAUTHORIZED';

export type SyntheticsPrivateLocationMutationResult = {
  __typename?: 'SyntheticsPrivateLocationMutationResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  domainId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Maybe<SyntheticsPrivateLocationMutationError>>>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  verifiedScriptExecution?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsPrivateLocationPurgeQueueResult = {
  __typename?: 'SyntheticsPrivateLocationPurgeQueueResult';
  errors?: Maybe<Array<Maybe<SyntheticsPrivateLocationMutationError>>>;
};

export type SyntheticsPublicLocation = {
  __typename?: 'SyntheticsPublicLocation';
  city?: Maybe<Scalars['String']['output']>;
  continent?: Maybe<SyntheticsContinent>;
  currentStatus?: Maybe<SyntheticsPublicLocationStatus>;
  hourlyStatuses?: Maybe<Array<Maybe<SyntheticsPublicLocationHourlyStatus>>>;
  name?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsPublicLocationHourlyStatus = {
  __typename?: 'SyntheticsPublicLocationHourlyStatus';
  beginTimeSeconds?: Maybe<Scalars['EpochSeconds']['output']>;
  endTimeSeconds?: Maybe<Scalars['EpochSeconds']['output']>;
  status?: Maybe<SyntheticsPublicLocationStatus>;
};

export type SyntheticsPublicLocationOutline = {
  __typename?: 'SyntheticsPublicLocationOutline';
  city?: Maybe<Scalars['String']['output']>;
  continent?: Maybe<SyntheticsContinent>;
  name?: Maybe<Scalars['String']['output']>;
  status?: Maybe<SyntheticsPublicLocationStatus>;
};

export type SyntheticsPublicLocationStatus =
  | 'DEGRADED'
  | 'OPERATIONAL';

export type SyntheticsRunMonitorMutationResult = {
  __typename?: 'SyntheticsRunMonitorMutationResult';
  checkId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Maybe<SyntheticsError>>>;
};

export type SyntheticsRuntime = {
  __typename?: 'SyntheticsRuntime';
  runtimeType?: Maybe<Scalars['String']['output']>;
  runtimeTypeVersion: Scalars['SemVer']['output'];
  scriptLanguage?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsRuntimeInput = {
  runtimeType: Scalars['String']['input'];
  runtimeTypeVersion: Scalars['SemVer']['input'];
  scriptLanguage?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsScriptApiMonitor = {
  __typename?: 'SyntheticsScriptApiMonitor';
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  runtime?: Maybe<SyntheticsRuntime>;
  status?: Maybe<SyntheticsMonitorStatus>;
};

export type SyntheticsScriptApiMonitorCreateMutationResult = {
  __typename?: 'SyntheticsScriptApiMonitorCreateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorCreateError>>;
  monitor?: Maybe<SyntheticsScriptApiMonitor>;
};

export type SyntheticsScriptApiMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsScriptApiMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsScriptApiMonitor>;
};

export type SyntheticsScriptBrowserMonitor = {
  __typename?: 'SyntheticsScriptBrowserMonitor';
  advancedOptions?: Maybe<SyntheticsScriptBrowserMonitorAdvancedOptions>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  runtime?: Maybe<SyntheticsRuntime>;
  status?: Maybe<SyntheticsMonitorStatus>;
};

export type SyntheticsScriptBrowserMonitorAdvancedOptions = {
  __typename?: 'SyntheticsScriptBrowserMonitorAdvancedOptions';
  deviceEmulation?: Maybe<SyntheticsDeviceEmulation>;
  enableScreenshotOnFailureAndScript?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsScriptBrowserMonitorAdvancedOptionsInput = {
  deviceEmulation?: InputMaybe<SyntheticsDeviceEmulationInput>;
  enableScreenshotOnFailureAndScript?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SyntheticsScriptBrowserMonitorCreateMutationResult = {
  __typename?: 'SyntheticsScriptBrowserMonitorCreateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorCreateError>>;
  monitor?: Maybe<SyntheticsScriptBrowserMonitor>;
};

export type SyntheticsScriptBrowserMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsScriptBrowserMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsScriptBrowserMonitor>;
};

export type SyntheticsScriptDomainOverride = {
  __typename?: 'SyntheticsScriptDomainOverride';
  domain?: Maybe<Scalars['String']['output']>;
  override?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsScriptDomainOverrideInput = {
  domain?: InputMaybe<Scalars['String']['input']>;
  override?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsScriptValidationQueryError = {
  __typename?: 'SyntheticsScriptValidationQueryError';
  description: Scalars['String']['output'];
  type: SyntheticsScriptValidationQueryErrorType;
};

export type SyntheticsScriptValidationQueryErrorType =
  | 'BAD_REQUEST'
  | 'NOT_FOUND'
  | 'UNAUTHORIZED';

export type SyntheticsScriptValidationQueryResponse = {
  __typename?: 'SyntheticsScriptValidationQueryResponse';
  error?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Maybe<SyntheticsScriptValidationQueryError>>>;
  jobResults?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  screenshot?: Maybe<Scalars['String']['output']>;
  scriptLog?: Maybe<Scalars['String']['output']>;
  status?: Maybe<SyntheticsJobStatus>;
};

export type SyntheticsScriptedMonitorLocationsInput = {
  private?: InputMaybe<Array<SyntheticsPrivateLocationInput>>;
  public?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type SyntheticsSecureCredentialMutationResult = {
  __typename?: 'SyntheticsSecureCredentialMutationResult';
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Maybe<SyntheticsError>>>;
  key?: Maybe<Scalars['String']['output']>;
  lastUpdate?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type SyntheticsSecureCredentialOverride = {
  __typename?: 'SyntheticsSecureCredentialOverride';
  key?: Maybe<Scalars['String']['output']>;
  overrideKey?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsSecureCredentialOverrideInput = {
  key?: InputMaybe<Scalars['String']['input']>;
  overrideKey?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsSimpleBrowserMonitor = {
  __typename?: 'SyntheticsSimpleBrowserMonitor';
  advancedOptions?: Maybe<SyntheticsSimpleBrowserMonitorAdvancedOptions>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  runtime?: Maybe<SyntheticsRuntime>;
  status?: Maybe<SyntheticsMonitorStatus>;
  uri?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsSimpleBrowserMonitorAdvancedOptions = {
  __typename?: 'SyntheticsSimpleBrowserMonitorAdvancedOptions';
  customHeaders?: Maybe<Array<Maybe<SyntheticsCustomHeader>>>;
  deviceEmulation?: Maybe<SyntheticsDeviceEmulation>;
  enableScreenshotOnFailureAndScript?: Maybe<Scalars['Boolean']['output']>;
  responseValidationText?: Maybe<Scalars['String']['output']>;
  useTlsValidation?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsSimpleBrowserMonitorAdvancedOptionsInput = {
  customHeaders?: InputMaybe<Array<InputMaybe<SyntheticsCustomHeaderInput>>>;
  deviceEmulation?: InputMaybe<SyntheticsDeviceEmulationInput>;
  enableScreenshotOnFailureAndScript?: InputMaybe<Scalars['Boolean']['input']>;
  responseValidationText?: InputMaybe<Scalars['String']['input']>;
  useTlsValidation?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SyntheticsSimpleBrowserMonitorCreateMutationResult = {
  __typename?: 'SyntheticsSimpleBrowserMonitorCreateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorCreateError>>;
  monitor?: Maybe<SyntheticsSimpleBrowserMonitor>;
};

export type SyntheticsSimpleBrowserMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsSimpleBrowserMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsSimpleBrowserMonitor>;
};

export type SyntheticsSimpleMonitor = {
  __typename?: 'SyntheticsSimpleMonitor';
  advancedOptions?: Maybe<SyntheticsSimpleMonitorAdvancedOptions>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  status?: Maybe<SyntheticsMonitorStatus>;
  uri?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsSimpleMonitorAdvancedOptions = {
  __typename?: 'SyntheticsSimpleMonitorAdvancedOptions';
  customHeaders?: Maybe<Array<Maybe<SyntheticsCustomHeader>>>;
  redirectIsFailure?: Maybe<Scalars['Boolean']['output']>;
  responseValidationText?: Maybe<Scalars['String']['output']>;
  shouldBypassHeadRequest?: Maybe<Scalars['Boolean']['output']>;
  useTlsValidation?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsSimpleMonitorAdvancedOptionsInput = {
  customHeaders?: InputMaybe<Array<InputMaybe<SyntheticsCustomHeaderInput>>>;
  redirectIsFailure?: InputMaybe<Scalars['Boolean']['input']>;
  responseValidationText?: InputMaybe<Scalars['String']['input']>;
  shouldBypassHeadRequest?: InputMaybe<Scalars['Boolean']['input']>;
  useTlsValidation?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SyntheticsSimpleMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsSimpleMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsSimpleMonitor>;
};

export type SyntheticsStep = {
  __typename?: 'SyntheticsStep';
  ordinal: Scalars['Int']['output'];
  type: SyntheticsStepType;
  values?: Maybe<Array<Scalars['String']['output']>>;
};

export type SyntheticsStepInput = {
  ordinal: Scalars['Int']['input'];
  type: SyntheticsStepType;
  values?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type SyntheticsStepMonitor = {
  __typename?: 'SyntheticsStepMonitor';
  advancedOptions?: Maybe<SyntheticsStepMonitorAdvancedOptions>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  locations?: Maybe<SyntheticsLocations>;
  modifiedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<SyntheticsMonitorPeriod>;
  runtime?: Maybe<SyntheticsExtendedTypeMonitorRuntime>;
  status?: Maybe<SyntheticsMonitorStatus>;
  steps?: Maybe<Array<Maybe<SyntheticsStep>>>;
};

export type SyntheticsStepMonitorAdvancedOptions = {
  __typename?: 'SyntheticsStepMonitorAdvancedOptions';
  enableScreenshotOnFailureAndScript?: Maybe<Scalars['Boolean']['output']>;
};

export type SyntheticsStepMonitorAdvancedOptionsInput = {
  enableScreenshotOnFailureAndScript?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SyntheticsStepMonitorCreateMutationResult = {
  __typename?: 'SyntheticsStepMonitorCreateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorCreateError>>;
  monitor?: Maybe<SyntheticsStepMonitor>;
};

export type SyntheticsStepMonitorUpdateMutationResult = {
  __typename?: 'SyntheticsStepMonitorUpdateMutationResult';
  errors: Array<Maybe<SyntheticsMonitorUpdateError>>;
  monitor?: Maybe<SyntheticsStepMonitor>;
};

export type SyntheticsStepType =
  | 'ASSERT_ELEMENT'
  | 'ASSERT_MODAL'
  | 'ASSERT_TEXT'
  | 'ASSERT_TITLE'
  | 'CLICK_ELEMENT'
  | 'DISMISS_MODAL'
  | 'DOUBLE_CLICK_ELEMENT'
  | 'HOVER_ELEMENT'
  | 'NAVIGATE'
  | 'SECURE_TEXT_ENTRY'
  | 'SELECT_ELEMENT'
  | 'TEXT_ENTRY';

export type SyntheticsSyntheticMonitorAsset = {
  __typename?: 'SyntheticsSyntheticMonitorAsset';
  type?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsTag = {
  key: Scalars['String']['input'];
  values: Array<InputMaybe<Scalars['String']['input']>>;
};

export type SyntheticsTriggerScriptValidationError = {
  __typename?: 'SyntheticsTriggerScriptValidationError';
  description: Scalars['String']['output'];
  type: SyntheticsTriggerScriptValidationErrorType;
};

export type SyntheticsTriggerScriptValidationErrorType =
  | 'BAD_REQUEST'
  | 'UNAUTHORIZED';

export type SyntheticsTriggerScriptValidationResponse = {
  __typename?: 'SyntheticsTriggerScriptValidationResponse';
  errors?: Maybe<Array<Maybe<SyntheticsTriggerScriptValidationError>>>;
  location?: Maybe<Scalars['String']['output']>;
  validationId?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsUpdateBrokenLinksMonitorInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<SyntheticsLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  runtime?: InputMaybe<SyntheticsExtendedTypeMonitorRuntimeInput>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  uri?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsUpdateCertCheckMonitorInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  domain?: InputMaybe<Scalars['String']['input']>;
  locations?: InputMaybe<SyntheticsLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberDaysToFailBeforeCertExpires?: InputMaybe<Scalars['Int']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  runtime?: InputMaybe<SyntheticsExtendedTypeMonitorRuntimeInput>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsUpdateScriptApiMonitorInput = {
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<SyntheticsScriptedMonitorLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  script?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsUpdateScriptBrowserMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsScriptBrowserMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<SyntheticsScriptedMonitorLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  script?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsUpdateSimpleBrowserMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsSimpleBrowserMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<SyntheticsLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  runtime?: InputMaybe<SyntheticsRuntimeInput>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  uri?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsUpdateSimpleMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsSimpleMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<SyntheticsLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
  uri?: InputMaybe<Scalars['String']['input']>;
};

export type SyntheticsUpdateStepMonitorInput = {
  advancedOptions?: InputMaybe<SyntheticsStepMonitorAdvancedOptionsInput>;
  apdexTarget?: InputMaybe<Scalars['Float']['input']>;
  locations?: InputMaybe<SyntheticsScriptedMonitorLocationsInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<SyntheticsMonitorPeriod>;
  runtime?: InputMaybe<SyntheticsExtendedTypeMonitorRuntimeInput>;
  status?: InputMaybe<SyntheticsMonitorStatus>;
  steps?: InputMaybe<Array<InputMaybe<SyntheticsStepInput>>>;
  tags?: InputMaybe<Array<InputMaybe<SyntheticsTag>>>;
};

export type SyntheticsUpgradeMonitorRuntimeResult = {
  __typename?: 'SyntheticsUpgradeMonitorRuntimeResult';
  status?: Maybe<Scalars['String']['output']>;
};

export type SyntheticsValidationStatus =
  | 'FAILED'
  | 'INTERNAL_ERROR'
  | 'INVALIDATED'
  | 'IN_PROGRESS'
  | 'PASSED';

export type SyntheticsWeeklyMonitorDowntimeMutationResult = {
  __typename?: 'SyntheticsWeeklyMonitorDowntimeMutationResult';
  accountId?: Maybe<Scalars['Int']['output']>;
  endRepeat?: Maybe<SyntheticsDateWindowEndOutput>;
  endTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  maintenanceDays?: Maybe<Array<Maybe<SyntheticsMonitorDowntimeWeekDays>>>;
  monitorGuids?: Maybe<Array<Maybe<Scalars['EntityGuid']['output']>>>;
  name?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['NaiveDateTime']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

export type TaggingActorStitchedFields = {
  __typename?: 'TaggingActorStitchedFields';
  tagKeysSearch?: Maybe<TaggingTagKeys>;
  tagsSearch?: Maybe<TaggingTagKeyValues>;
};


export type TaggingActorStitchedFieldsTagKeysSearchArgs = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  domainTypes?: InputMaybe<Array<TaggingDomainType>>;
  entityQuery?: InputMaybe<Scalars['String']['input']>;
  pattern?: InputMaybe<Scalars['String']['input']>;
  tagQuery?: InputMaybe<Scalars['String']['input']>;
  tagsCasing?: InputMaybe<TaggingTagsCasing>;
};


export type TaggingActorStitchedFieldsTagsSearchArgs = {
  accountIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  domainTypes?: InputMaybe<Array<TaggingDomainType>>;
  entityQuery?: InputMaybe<Scalars['String']['input']>;
  pattern?: InputMaybe<Scalars['String']['input']>;
  query?: InputMaybe<Scalars['String']['input']>;
  tagKey?: InputMaybe<Scalars['String']['input']>;
  tagQuery?: InputMaybe<Scalars['String']['input']>;
  tagsCasing?: InputMaybe<TaggingTagsCasing>;
};

export type TaggingDomainType = {
  domain?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type TaggingMutationError = {
  __typename?: 'TaggingMutationError';
  message?: Maybe<Scalars['String']['output']>;
  type?: Maybe<TaggingMutationErrorType>;
};

export type TaggingMutationErrorType =
  | 'CONCURRENT_TASK_EXCEPTION'
  | 'INVALID_DOMAIN_TYPE'
  | 'INVALID_ENTITY_GUID'
  | 'INVALID_KEY'
  | 'INVALID_VALUE'
  | 'NOT_FOUND'
  | 'NOT_PERMITTED'
  | 'TOO_MANY_CHARS_QUERY_FILTER'
  | 'TOO_MANY_TAG_KEYS'
  | 'TOO_MANY_TAG_VALUES'
  | 'UPDATE_WILL_BE_DELAYED';

export type TaggingMutationResult = {
  __typename?: 'TaggingMutationResult';
  errors?: Maybe<Array<Maybe<TaggingMutationError>>>;
};

export type TaggingTagInput = {
  key: Scalars['String']['input'];
  values?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type TaggingTagKey = {
  __typename?: 'TaggingTagKey';
  entitiesCount?: Maybe<Scalars['Int']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  uniqueValueCount?: Maybe<Scalars['Int']['output']>;
};

export type TaggingTagKeyValue = {
  __typename?: 'TaggingTagKeyValue';
  entitiesCount?: Maybe<Scalars['Int']['output']>;
  key?: Maybe<Scalars['String']['output']>;
  keyValue?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type TaggingTagKeyValues = {
  __typename?: 'TaggingTagKeyValues';
  results?: Maybe<TaggingTagsSearchResult>;
};

export type TaggingTagKeys = {
  __typename?: 'TaggingTagKeys';
  results?: Maybe<TaggingTagKeysSearchResult>;
};

export type TaggingTagKeysSearchResult = {
  __typename?: 'TaggingTagKeysSearchResult';
  tagKeys?: Maybe<Array<Maybe<TaggingTagKey>>>;
};

export type TaggingTagValueInput = {
  key: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

export type TaggingTagsCasing =
  | 'CASE_INSENSITIVE'
  | 'CASE_SENSITIVE';

export type TaggingTagsSearchResult = {
  __typename?: 'TaggingTagsSearchResult';
  tags?: Maybe<Array<Maybe<TaggingTagKeyValue>>>;
};

export type TeamActionMetadata = {
  __typename?: 'TeamActionMetadata';
  timestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
  user?: Maybe<UserReference>;
};

export type TeamActorStitchedFields = {
  __typename?: 'TeamActorStitchedFields';
  teamMembership?: Maybe<Array<Maybe<TeamDefinition>>>;
};

export type TeamCreateInput = {
  aliases?: InputMaybe<Array<Scalars['String']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  members?: InputMaybe<Array<TeamMemberInput>>;
  name: Scalars['String']['input'];
  resources?: InputMaybe<Array<TeamResourceInput>>;
  staticEntityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
};

export type TeamDefinition = {
  __typename?: 'TeamDefinition';
  aliases?: Maybe<Array<Scalars['String']['output']>>;
  createdMetadata?: Maybe<TeamActionMetadata>;
  description?: Maybe<Scalars['String']['output']>;
  entities?: Maybe<TeamEntities>;
  guid: Scalars['EntityGuid']['output'];
  members?: Maybe<Array<TeamMember>>;
  name: Scalars['String']['output'];
  resources?: Maybe<Array<TeamResource>>;
  updatedMetadata?: Maybe<TeamActionMetadata>;
};

export type TeamDiscoverySettings = {
  __typename?: 'TeamDiscoverySettings';
  enabled: Scalars['Boolean']['output'];
  tags: Array<Scalars['String']['output']>;
};

export type TeamDiscoverySettingsInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TeamEntities = {
  __typename?: 'TeamEntities';
  entitySearchQuery: Scalars['String']['output'];
  static?: Maybe<Array<EntityOutline>>;
};

export type TeamEntity = AlertableEntity & CollectionEntity & Entity & {
  __typename?: 'TeamEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  aliases?: Maybe<Array<Scalars['String']['output']>>;
  collection?: Maybe<EntityCollection>;
  createdMetadata?: Maybe<TeamActionMetadata>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  description?: Maybe<Scalars['String']['output']>;
  domain?: Maybe<Scalars['String']['output']>;
  entities?: Maybe<TeamEntities>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  members?: Maybe<Array<TeamMember>>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  resources?: Maybe<Array<TeamResource>>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedMetadata?: Maybe<TeamActionMetadata>;
};


export type TeamEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type TeamEntityCollectionArgs = {
  name: Scalars['String']['input'];
};


export type TeamEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type TeamEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type TeamEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type TeamEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type TeamEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type TeamEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type TeamEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type TeamEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type TeamEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type TeamEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type TeamEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type TeamEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type TeamEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'TeamEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type TeamEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type TeamEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type TeamEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type TeamEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type TeamGlobalSettings = {
  __typename?: 'TeamGlobalSettings';
  discovery?: Maybe<TeamDiscoverySettings>;
};

export type TeamMember = {
  __typename?: 'TeamMember';
  roles?: Maybe<Array<Scalars['String']['output']>>;
  user?: Maybe<UserReference>;
};

export type TeamMemberInput = {
  roles?: InputMaybe<Array<Scalars['String']['input']>>;
  userId: Scalars['ID']['input'];
};

export type TeamOrganizationStitchedFields = {
  __typename?: 'TeamOrganizationStitchedFields';
  globalSettings?: Maybe<TeamGlobalSettings>;
};

export type TeamResource = {
  __typename?: 'TeamResource';
  content: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type TeamResourceInput = {
  content: Scalars['String']['input'];
  title?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
};

export type TeamUpdateGlobalSettingsInput = {
  discoverySettingsInput?: InputMaybe<TeamDiscoverySettingsInput>;
};

export type TeamUpdateInput = {
  aliases?: InputMaybe<Array<Scalars['String']['input']>>;
  description?: InputMaybe<Scalars['String']['input']>;
  members?: InputMaybe<Array<TeamMemberInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  resources?: InputMaybe<Array<TeamResourceInput>>;
  staticEntityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
};

export type TeamUpdatedEntityOwners = {
  __typename?: 'TeamUpdatedEntityOwners';
  entity?: Maybe<EntityOutline>;
  teams?: Maybe<Array<Maybe<TeamDefinition>>>;
};

export type ThirdPartyServiceEntity = AlertableEntity & Entity & {
  __typename?: 'ThirdPartyServiceEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  connections?: Maybe<RelatedExternalsEntityResult>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  relatedTransactions?: Maybe<RelatedExternalsTransactionResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  transactionTrace?: Maybe<AgentTracesTransactionTrace>;
  transactionTraces?: Maybe<Array<Maybe<AgentTracesTransactionTrace>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ThirdPartyServiceEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type ThirdPartyServiceEntityConnectionsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type ThirdPartyServiceEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ThirdPartyServiceEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ThirdPartyServiceEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ThirdPartyServiceEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ThirdPartyServiceEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type ThirdPartyServiceEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type ThirdPartyServiceEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type ThirdPartyServiceEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ThirdPartyServiceEntityRelatedTransactionsArgs = {
  search: RelatedExternalsSearch;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type ThirdPartyServiceEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type ThirdPartyServiceEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityTransactionTraceArgs = {
  filter?: InputMaybe<AgentTracesTransactionTraceFilter>;
  traceId: Scalars['String']['input'];
};


export type ThirdPartyServiceEntityTransactionTracesArgs = {
  query: AgentTracesTransactionTraceQuery;
};

export type ThirdPartyServiceEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'ThirdPartyServiceEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type ThirdPartyServiceEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type ThirdPartyServiceEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type ThirdPartyServiceEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type ThirdPartyServiceEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type ThreadProfilerMetadata = {
  __typename?: 'ThreadProfilerMetadata';
  /** @deprecated This field is experimental and subject to breaking changes. */
  creator?: Maybe<UserReference>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  endTime?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  host?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  hostName?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  sampleCount?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  startTime?: Maybe<Scalars['String']['output']>;
};

export type ThreadProfilerMetadataCollection = {
  __typename?: 'ThreadProfilerMetadataCollection';
  /** @deprecated This field is experimental and subject to breaking changes. */
  count?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nextCursor?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  nodes?: Maybe<Array<ThreadProfilerMetadata>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  prevCursor?: Maybe<Scalars['String']['output']>;
};

export type TimeWindow = {
  __typename?: 'TimeWindow';
  endTime?: Maybe<Scalars['EpochMilliseconds']['output']>;
  startTime?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type TimeWindowInput = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};

export type TimeZoneInfo = {
  __typename?: 'TimeZoneInfo';
  name?: Maybe<Scalars['String']['output']>;
  offset?: Maybe<Scalars['Seconds']['output']>;
};

export type TimeZonePeriod = {
  __typename?: 'TimeZonePeriod';
  from?: Maybe<Scalars['EpochSeconds']['output']>;
  offset?: Maybe<Scalars['Seconds']['output']>;
  until?: Maybe<Scalars['EpochSeconds']['output']>;
  zoneAbbr?: Maybe<Scalars['String']['output']>;
};

export type TransactionTrace = {
  __typename?: 'TransactionTrace';
  accountId?: Maybe<Scalars['Int']['output']>;
  agentAttributesMap?: Maybe<Scalars['AttributeMap']['output']>;
  duration?: Maybe<Scalars['Seconds']['output']>;
  edges?: Maybe<Array<Maybe<TransactionTraceEdge>>>;
  id?: Maybe<Scalars['String']['output']>;
  intrinsicAttributesMap?: Maybe<Scalars['AttributeMap']['output']>;
  nodes?: Maybe<Array<Maybe<TransactionTraceNode>>>;
  path?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['EpochMilliseconds']['output']>;
  uri?: Maybe<Scalars['String']['output']>;
  userAttributesMap?: Maybe<Scalars['AttributeMap']['output']>;
};

export type TransactionTraceEdge = {
  __typename?: 'TransactionTraceEdge';
  childGuid?: Maybe<Scalars['String']['output']>;
  parentGuid?: Maybe<Scalars['String']['output']>;
};

export type TransactionTraceNode = {
  __typename?: 'TransactionTraceNode';
  attributesMap?: Maybe<Scalars['AttributeMap']['output']>;
  duration?: Maybe<Scalars['Seconds']['output']>;
  exclusiveDurationMs?: Maybe<Scalars['Milliseconds']['output']>;
  guid?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  timestamp?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type UnavailableEntity = AlertableEntity & Entity & {
  __typename?: 'UnavailableEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type UnavailableEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type UnavailableEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type UnavailableEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type UnavailableEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type UnavailableEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type UnavailableEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type UnavailableEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type UnavailableEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type UnavailableEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type UnavailableEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type UnavailableEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type UnavailableEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type UnavailableEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type UnavailableEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'UnavailableEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
};


export type UnavailableEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type UnavailableEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type UnavailableEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type UnavailableEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type User = {
  __typename?: 'User';
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type UserConsumptionAccountStitchedFields = {
  __typename?: 'UserConsumptionAccountStitchedFields';
  onDemandSessions?: Maybe<Array<UserConsumptionOnDemandSessionUser>>;
  ratedUsers?: Maybe<Array<Maybe<UserConsumptionRatedUser>>>;
  userTierSummaries?: Maybe<Array<Maybe<UserConsumptionUserTierSummary>>>;
};


export type UserConsumptionAccountStitchedFieldsOnDemandSessionsArgs = {
  queryWindow: DateTimeWindowInput;
};


export type UserConsumptionAccountStitchedFieldsRatedUsersArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type UserConsumptionAccountStitchedFieldsUserTierSummariesArgs = {
  queryWindow: DateTimeWindowInput;
};

export type UserConsumptionConsumptionStitchedFields = {
  __typename?: 'UserConsumptionConsumptionStitchedFields';
  ratedUsers?: Maybe<Array<Maybe<UserConsumptionRatedUser>>>;
  userTierSummaries?: Maybe<Array<Maybe<UserConsumptionUserTierSummary>>>;
};


export type UserConsumptionConsumptionStitchedFieldsRatedUsersArgs = {
  ids: Array<InputMaybe<Scalars['ID']['input']>>;
};


export type UserConsumptionConsumptionStitchedFieldsUserTierSummariesArgs = {
  queryWindow: DateTimeWindowInput;
};

export type UserConsumptionOnDemandSession = {
  __typename?: 'UserConsumptionOnDemandSession';
  billableStatus?: Maybe<UserConsumptionSessionBillingStatus>;
  sessionId?: Maybe<Scalars['ID']['output']>;
  timestamp?: Maybe<Scalars['DateTime']['output']>;
};

export type UserConsumptionOnDemandSessionUser = {
  __typename?: 'UserConsumptionOnDemandSessionUser';
  billable?: Maybe<Scalars['Int']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  free?: Maybe<Scalars['Int']['output']>;
  sessions?: Maybe<Array<UserConsumptionOnDemandSession>>;
  total?: Maybe<Scalars['Int']['output']>;
  userId?: Maybe<Scalars['ID']['output']>;
};

export type UserConsumptionOrganizationStitchedFields = {
  __typename?: 'UserConsumptionOrganizationStitchedFields';
  ratedUsers?: Maybe<Array<Maybe<UserConsumptionRatedUser>>>;
};


export type UserConsumptionOrganizationStitchedFieldsRatedUsersArgs = {
  ids?: InputMaybe<Array<InputMaybe<Scalars['ID']['input']>>>;
};

export type UserConsumptionRatedUser = {
  __typename?: 'UserConsumptionRatedUser';
  billableType?: Maybe<UserConsumptionUserTier>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  provisionedType?: Maybe<UserConsumptionUserTier>;
};

export type UserConsumptionReducedRatedUser = {
  __typename?: 'UserConsumptionReducedRatedUser';
  billableType?: Maybe<UserConsumptionUserTier>;
  email?: Maybe<Scalars['String']['output']>;
  provisionedType?: Maybe<UserConsumptionUserTier>;
};

export type UserConsumptionSessionBillingStatus =
  | 'BILLABLE'
  | 'FREE';

export type UserConsumptionUserTier =
  | 'BASIC'
  | 'CORE'
  | 'DELETED'
  | 'FULL_PLATFORM';

export type UserConsumptionUserTierSummary = {
  __typename?: 'UserConsumptionUserTierSummary';
  billable?: Maybe<Scalars['Int']['output']>;
  billedUsers?: Maybe<Array<UserConsumptionReducedRatedUser>>;
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<UserConsumptionUserTier>;
  provisioned?: Maybe<Scalars['Int']['output']>;
  summaryTime?: Maybe<Scalars['DateTime']['output']>;
};

export type UserEmailNotificationPreferencesActorStitchedFields = {
  __typename?: 'UserEmailNotificationPreferencesActorStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  notificationPreferences?: Maybe<Array<Maybe<UserEmailNotificationPreferencesNotificationPreference>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  userSuppressionGroups?: Maybe<Array<Maybe<UserEmailNotificationPreferencesSuppressionGroup>>>;
};

export type UserEmailNotificationPreferencesNotificationPreference = {
  __typename?: 'UserEmailNotificationPreferencesNotificationPreference';
  /** @deprecated This field is experimental and subject to breaking changes. */
  isOptedIn: Scalars['Boolean']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topicId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topicName: Scalars['String']['output'];
};

export type UserEmailNotificationPreferencesSubscriptionStatus =
  | 'OPTED_IN'
  | 'OPTED_OUT';

export type UserEmailNotificationPreferencesSuppressionGroup = {
  __typename?: 'UserEmailNotificationPreferencesSuppressionGroup';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  name: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  suppressed: Scalars['Boolean']['output'];
};

export type UserEmailNotificationPreferencesTopic = {
  status: UserEmailNotificationPreferencesSubscriptionStatus;
  topicId: Scalars['String']['input'];
};

export type UserEmailNotificationPreferencesUpdatedNotificationPreference = {
  topic: UserEmailNotificationPreferencesTopic;
};

export type UserEmailNotificationPreferencesUpdatedNotificationPreferenceResponse = {
  __typename?: 'UserEmailNotificationPreferencesUpdatedNotificationPreferenceResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  topicId: Scalars['String']['output'];
};

export type UserEmailNotificationPreferencesUpdatedSuppressionGroup = {
  id: Scalars['Int']['input'];
  suppressed: Scalars['Boolean']['input'];
};

export type UserEmailNotificationPreferencesUpdatedSuppressionGroupResponse = {
  __typename?: 'UserEmailNotificationPreferencesUpdatedSuppressionGroupResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  id: Scalars['Int']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
};

export type UserInfo = {
  __typename?: 'UserInfo';
  email?: Maybe<Scalars['String']['output']>;
  gravatar?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<UserType>;
};

export type UserManagementAddUsersToGroupsPayload = {
  __typename?: 'UserManagementAddUsersToGroupsPayload';
  groups?: Maybe<Array<UserManagementGroup>>;
};

export type UserManagementAuthenticationDomain = {
  __typename?: 'UserManagementAuthenticationDomain';
  groups?: Maybe<UserManagementGroups>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  provisioningType: Scalars['String']['output'];
  users?: Maybe<UserManagementUsers>;
};


export type UserManagementAuthenticationDomainGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<UserManagementGroupFilterInput>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
  sort?: InputMaybe<Array<UserManagementGroupSortInput>>;
};


export type UserManagementAuthenticationDomainUsersArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<UserManagementUserFilterInput>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UserManagementAuthenticationDomains = {
  __typename?: 'UserManagementAuthenticationDomains';
  authenticationDomains: Array<UserManagementAuthenticationDomain>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type UserManagementCreateGroup = {
  authenticationDomainId: Scalars['ID']['input'];
  displayName: Scalars['String']['input'];
};

export type UserManagementCreateGroupPayload = {
  __typename?: 'UserManagementCreateGroupPayload';
  group?: Maybe<UserManagementGroup>;
};

export type UserManagementCreateUser = {
  authenticationDomainId: Scalars['ID']['input'];
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  userType?: InputMaybe<UserManagementRequestedTierName>;
};

export type UserManagementCreateUserPayload = {
  __typename?: 'UserManagementCreateUserPayload';
  createdUser?: Maybe<UserManagementCreatedUser>;
};

export type UserManagementCreatedUser = {
  __typename?: 'UserManagementCreatedUser';
  authenticationDomainId?: Maybe<Scalars['ID']['output']>;
  email: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  type: UserManagementUserType;
};

export type UserManagementDeleteGroup = {
  id: Scalars['String']['input'];
};

export type UserManagementDeleteGroupPayload = {
  __typename?: 'UserManagementDeleteGroupPayload';
  group?: Maybe<UserManagementGroup>;
};

export type UserManagementDeleteUser = {
  id: Scalars['ID']['input'];
};

export type UserManagementDeleteUserPayload = {
  __typename?: 'UserManagementDeleteUserPayload';
  deletedUser?: Maybe<UserManagementDeletedUser>;
};

export type UserManagementDeletedUser = {
  __typename?: 'UserManagementDeletedUser';
  id: Scalars['ID']['output'];
};

export type UserManagementDisplayNameInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type UserManagementEmailInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type UserManagementEmailVerificationStateInput = {
  pending: Scalars['Boolean']['input'];
};

export type UserManagementGroup = {
  __typename?: 'UserManagementGroup';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  users?: Maybe<UserManagementGroupUsers>;
};


export type UserManagementGroupUsersArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UserManagementGroupFilterInput = {
  displayName?: InputMaybe<UserManagementDisplayNameInput>;
  id?: InputMaybe<UserManagementGroupIdInput>;
};

export type UserManagementGroupIdInput = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UserManagementGroupSortInput = {
  direction?: InputMaybe<UserManagementSortDirection>;
  key?: InputMaybe<UserManagementGroupSortKey>;
};

export type UserManagementGroupSortKey =
  | 'DISPLAY_NAME'
  | 'ID';

export type UserManagementGroupUser = {
  __typename?: 'UserManagementGroupUser';
  email: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  timeZone: Scalars['String']['output'];
};

export type UserManagementGroupUsers = {
  __typename?: 'UserManagementGroupUsers';
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
  users: Array<UserManagementGroupUser>;
};

export type UserManagementGroups = {
  __typename?: 'UserManagementGroups';
  groups: Array<UserManagementGroup>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type UserManagementNameInput = {
  contains?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
};

export type UserManagementOrganizationStitchedFields = {
  __typename?: 'UserManagementOrganizationStitchedFields';
  authenticationDomains?: Maybe<UserManagementAuthenticationDomains>;
  types?: Maybe<Array<UserManagementOrganizationUserType>>;
};


export type UserManagementOrganizationStitchedFieldsAuthenticationDomainsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UserManagementOrganizationUserType = {
  __typename?: 'UserManagementOrganizationUserType';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

export type UserManagementPendingUpgradeRequest = {
  __typename?: 'UserManagementPendingUpgradeRequest';
  id: Scalars['ID']['output'];
  message?: Maybe<Scalars['String']['output']>;
  requestedUserType?: Maybe<UserManagementUserType>;
};

export type UserManagementPendingUpgradeRequestInput = {
  exists: Scalars['Boolean']['input'];
};

export type UserManagementRemoveUsersFromGroupsPayload = {
  __typename?: 'UserManagementRemoveUsersFromGroupsPayload';
  groups?: Maybe<Array<UserManagementGroup>>;
};

export type UserManagementRequestedTierName =
  | 'BASIC_USER_TIER'
  | 'CORE_USER_TIER'
  | 'FULL_USER_TIER';

export type UserManagementSortDirection =
  | 'ASCENDING'
  | 'DESCENDING';

export type UserManagementTypeEnum =
  | 'BASIC'
  | 'CORE'
  | 'FULL_PLATFORM';

export type UserManagementTypeInput = {
  eq: UserManagementTypeEnum;
};

export type UserManagementUpdateGroup = {
  displayName: Scalars['String']['input'];
  id: Scalars['ID']['input'];
};

export type UserManagementUpdateGroupPayload = {
  __typename?: 'UserManagementUpdateGroupPayload';
  group?: Maybe<UserManagementGroup>;
};

export type UserManagementUpdateUser = {
  email?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
  userType?: InputMaybe<UserManagementRequestedTierName>;
};

export type UserManagementUpdateUserPayload = {
  __typename?: 'UserManagementUpdateUserPayload';
  user?: Maybe<UserManagementUser>;
};

export type UserManagementUser = {
  __typename?: 'UserManagementUser';
  email?: Maybe<Scalars['String']['output']>;
  emailVerificationState: Scalars['String']['output'];
  groups?: Maybe<UserManagementUserGroups>;
  id: Scalars['ID']['output'];
  lastActive?: Maybe<Scalars['DateTime']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pendingUpgradeRequest?: Maybe<UserManagementPendingUpgradeRequest>;
  timeZone?: Maybe<Scalars['String']['output']>;
  type: UserManagementUserType;
};


export type UserManagementUserGroupsArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UserManagementUserFilterInput = {
  email?: InputMaybe<UserManagementEmailInput>;
  emailVerificationState?: InputMaybe<UserManagementEmailVerificationStateInput>;
  id?: InputMaybe<UserManagementUserIdInput>;
  name?: InputMaybe<UserManagementNameInput>;
  pendingUpgradeRequest?: InputMaybe<UserManagementPendingUpgradeRequestInput>;
  type?: InputMaybe<UserManagementTypeInput>;
};

export type UserManagementUserGroup = {
  __typename?: 'UserManagementUserGroup';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

export type UserManagementUserGroups = {
  __typename?: 'UserManagementUserGroups';
  groups: Array<UserManagementUserGroup>;
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
};

export type UserManagementUserIdInput = {
  eq?: InputMaybe<Scalars['ID']['input']>;
  in?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type UserManagementUserType = {
  __typename?: 'UserManagementUserType';
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

export type UserManagementUsers = {
  __typename?: 'UserManagementUsers';
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
  users: Array<UserManagementUser>;
};

export type UserManagementUsersGroupsInput = {
  groupIds: Array<Scalars['ID']['input']>;
  userIds: Array<Scalars['ID']['input']>;
};

export type UserObject = {
  __typename?: 'UserObject';
  account?: Maybe<AccountObject>;
  accounts?: Maybe<Array<Maybe<AccountInfo>>>;
  authorizedAccountRegions?: Maybe<Array<Maybe<Region>>>;
  authorizedAccounts?: Maybe<Array<Maybe<AccountAccessInfo>>>;
  authorizedAccountsCheck?: Maybe<Array<Maybe<AccountAuthorization>>>;
  capabilities?: Maybe<Array<Maybe<Capability>>>;
  crossAccount?: Maybe<CrossAccount>;
  currentAccount?: Maybe<AccountObject>;
  email?: Maybe<Scalars['String']['output']>;
  entities?: Maybe<Array<Maybe<Entity>>>;
  entity?: Maybe<Entity>;
  entityBulkLoad?: Maybe<Array<Maybe<EntityOutline>>>;
  entitySearch?: Maybe<EntitySearch>;
  fallbackAccount?: Maybe<AccountInfo>;
  featureFlags?: Maybe<Array<Maybe<FeatureFlag>>>;
  gravatar?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  isImpersonated?: Maybe<Scalars['Boolean']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageActorScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  /**
   * @deprecated This field is deprecated and returns no data. Please use `queryHistory`.
   *
   */
  nrqlQueryHistory?: Maybe<Array<Maybe<NrqlHistoricalQuery>>>;
  timeZoneName?: Maybe<Scalars['String']['output']>;
  timeZoneOffset?: Maybe<Scalars['Seconds']['output']>;
  timeZonePeriod?: Maybe<Array<Maybe<TimeZonePeriod>>>;
  type?: Maybe<UserType>;
};


export type UserObjectAccountArgs = {
  id: Scalars['Int']['input'];
};


export type UserObjectAuthorizedAccountsArgs = {
  filter?: InputMaybe<AuthorizedAccountsFilter>;
  scope?: InputMaybe<RegionScope>;
};


export type UserObjectAuthorizedAccountsCheckArgs = {
  accountIds: Array<InputMaybe<Scalars['Int']['input']>>;
};


export type UserObjectCapabilitiesArgs = {
  accountId: Scalars['Int']['input'];
  filter?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type UserObjectEntitiesArgs = {
  guids: Array<InputMaybe<Scalars['EntityGuid']['input']>>;
};


export type UserObjectEntityArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type UserObjectEntityBulkLoadArgs = {
  guids: Array<InputMaybe<Scalars['EntityGuid']['input']>>;
};


export type UserObjectEntitySearchArgs = {
  options?: InputMaybe<EntitySearchOptions>;
  query?: InputMaybe<Scalars['String']['input']>;
  queryBuilder?: InputMaybe<EntitySearchQueryBuilder>;
  sortBy?: InputMaybe<Array<InputMaybe<EntitySearchSortCriteria>>>;
  sortByWithDirection?: InputMaybe<Array<InputMaybe<SortCriterionWithDirection>>>;
};


export type UserObjectFeatureFlagsArgs = {
  criteria?: InputMaybe<Scalars['String']['input']>;
  names: Array<InputMaybe<Scalars['String']['input']>>;
};


export type UserObjectNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
};


export type UserObjectNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};


export type UserObjectTimeZonePeriodArgs = {
  at: Scalars['EpochSeconds']['input'];
};

export type UserPreferences = {
  __typename?: 'UserPreferences';
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  timeZoneName?: Maybe<Scalars['String']['output']>;
  timeZoneSource?: Maybe<UserTimeZoneSource>;
};

export type UserReference = {
  __typename?: 'UserReference';
  email?: Maybe<Scalars['String']['output']>;
  gravatar?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type UserRequestedTierName =
  | 'BASIC_USER_TIER'
  | 'CORE_USER_TIER'
  | 'FULL_USER_TIER';

export type UserTimeZoneSource =
  | 'TIME_ZONE'
  | 'TIME_ZONE_OVERRIDE';

export type UserType =
  | 'CUSTOMER'
  | 'NR_ADMIN';

export type UserUpdatePreferences = {
  name?: InputMaybe<Scalars['String']['input']>;
  timeZone?: InputMaybe<Scalars['String']['input']>;
};

export type UserUpdatePreferencesError = {
  __typename?: 'UserUpdatePreferencesError';
  message: Scalars['String']['output'];
};

export type UserUpdatePreferencesPayload = {
  __typename?: 'UserUpdatePreferencesPayload';
  /** @deprecated Errors are now returned outside of the data payload */
  errors: Array<UserUpdatePreferencesError>;
  status: UserUpdatePreferencesStatus;
  userPreferences?: Maybe<UserPreferences>;
};

export type UserUpdatePreferencesStatus =
  | 'UPDATE_PREFERENCES_FAILURE'
  | 'UPDATE_PREFERENCES_SUCCESS';

export type UserUpgradeError = {
  __typename?: 'UserUpgradeError';
  message: Scalars['String']['output'];
};

export type UserUpgradeSelf = {
  requestMessage?: InputMaybe<Scalars['String']['input']>;
  requestedTier?: InputMaybe<UserRequestedTierName>;
};

export type UserUpgradeSelfPayload = {
  __typename?: 'UserUpgradeSelfPayload';
  /** @deprecated Errors are now returned outside of the data payload */
  errors: Array<UserUpgradeError>;
  status: UserUpgradeSelfStatus;
};

export type UserUpgradeSelfStatus =
  | 'ALREADY_REQUESTED_TIER'
  | 'ALREADY_UPGRADED'
  | 'TIER_CHANGE_FAILURE'
  | 'TIER_CHANGE_REQUESTED'
  | 'TIER_CHANGE_SUCCESS'
  | 'UPGRADE_FAILURE'
  | 'UPGRADE_REQUESTED'
  | 'UPGRADE_SUCCESS';

export type UsersActorStitchedFields = {
  __typename?: 'UsersActorStitchedFields';
  userSearch?: Maybe<UsersUserSearchResult>;
};


export type UsersActorStitchedFieldsUserSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  query?: InputMaybe<UsersUserSearchQuery>;
};

export type UsersCountOrganizationStitchedFields = {
  __typename?: 'UsersCountOrganizationStitchedFields';
  summary?: Maybe<UsersCountSummary>;
};

export type UsersCountSummary = {
  __typename?: 'UsersCountSummary';
  basicUsersCount?: Maybe<Scalars['Int']['output']>;
  coreUsersCount?: Maybe<Scalars['Int']['output']>;
  fullUsersCount?: Maybe<Scalars['Int']['output']>;
  totalUsersCount?: Maybe<Scalars['Int']['output']>;
};

export type UsersUserSearch = {
  __typename?: 'UsersUserSearch';
  email?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  userId?: Maybe<Scalars['ID']['output']>;
};

export type UsersUserSearchQuery = {
  scope?: InputMaybe<UsersUserSearchScope>;
};

export type UsersUserSearchResult = {
  __typename?: 'UsersUserSearchResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  totalCount: Scalars['Int']['output'];
  users: Array<UsersUserSearch>;
};

export type UsersUserSearchScope = {
  email?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
  userIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type WebsitePerformanceMonitoringAccountDetailsResponse = {
  __typename?: 'WebsitePerformanceMonitoringAccountDetailsResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  status: WebsitePerformanceMonitoringAccountStatus;
};

export type WebsitePerformanceMonitoringAccountStatus =
  | 'EXISTS'
  | 'NEW';

export type WebsitePerformanceMonitoringAccountStitchedFields = {
  __typename?: 'WebsitePerformanceMonitoringAccountStitchedFields';
  /** @deprecated This field is experimental and subject to breaking changes. */
  accountDetails?: Maybe<WebsitePerformanceMonitoringAccountDetailsResponse>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  websiteUrl?: Maybe<WebsitePerformanceMonitoringWebsiteUrlResponse>;
};


export type WebsitePerformanceMonitoringAccountStitchedFieldsWebsiteUrlArgs = {
  websiteDetails: WebsitePerformanceMonitoringWebsiteInput;
};

export type WebsitePerformanceMonitoringCreateMonitorsResponse = {
  __typename?: 'WebsitePerformanceMonitoringCreateMonitorsResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  monitorDetails?: Maybe<Array<Maybe<WebsitePerformanceMonitoringMonitorDetails>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  url: Scalars['String']['output'];
};

export type WebsitePerformanceMonitoringMonitorDetails = {
  __typename?: 'WebsitePerformanceMonitoringMonitorDetails';
  /** @deprecated This field is experimental and subject to breaking changes. */
  guid: Scalars['EntityGuid']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  monitorId: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  monitorType: Scalars['String']['output'];
};

export type WebsitePerformanceMonitoringRequestSource =
  | 'OTHER'
  | 'WEBSITE_MONITORING';

export type WebsitePerformanceMonitoringRequestStatus =
  | 'DELETED'
  | 'DISABLED'
  | 'ENABLED';

export type WebsitePerformanceMonitoringRequestType =
  | 'COMPETITOR'
  | 'OTHER'
  | 'USER';

export type WebsitePerformanceMonitoringUpdateRequestFields = {
  status?: InputMaybe<WebsitePerformanceMonitoringRequestStatus>;
};

export type WebsitePerformanceMonitoringUpdateRequestResponse = {
  __typename?: 'WebsitePerformanceMonitoringUpdateRequestResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  message: Scalars['String']['output'];
  /** @deprecated This field is experimental and subject to breaking changes. */
  url: Scalars['String']['output'];
};

export type WebsitePerformanceMonitoringWebsiteInput = {
  url: Scalars['String']['input'];
};

export type WebsitePerformanceMonitoringWebsiteUrlResponse = {
  __typename?: 'WebsitePerformanceMonitoringWebsiteUrlResponse';
  /** @deprecated This field is experimental and subject to breaking changes. */
  code?: Maybe<Scalars['Int']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  message?: Maybe<Scalars['String']['output']>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  url: Scalars['String']['output'];
};

export type WhatsNewAnnouncementContent = WhatsNewContent & {
  __typename?: 'WhatsNewAnnouncementContent';
  body?: Maybe<Scalars['String']['output']>;
  contentType: WhatsNewContentType;
  context?: Maybe<Array<Scalars['String']['output']>>;
  docUrl?: Maybe<Scalars['String']['output']>;
  gettingStartedUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  isFeatured?: Maybe<Scalars['Boolean']['output']>;
  learnMoreUrl?: Maybe<Scalars['String']['output']>;
  publishDate?: Maybe<Scalars['EpochMilliseconds']['output']>;
  requirements?: Maybe<Scalars['String']['output']>;
  summary?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type WhatsNewContent = {
  contentType: WhatsNewContentType;
  context?: Maybe<Array<Scalars['String']['output']>>;
  id: Scalars['ID']['output'];
  publishDate?: Maybe<Scalars['EpochMilliseconds']['output']>;
  summary?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

export type WhatsNewContentSearchQuery = {
  contentType?: InputMaybe<WhatsNewContentType>;
  unreadOnly?: InputMaybe<Scalars['Boolean']['input']>;
};

export type WhatsNewContentType =
  | 'ANNOUNCEMENT';

export type WhatsNewDocsStitchedFields = {
  __typename?: 'WhatsNewDocsStitchedFields';
  announcement?: Maybe<WhatsNewAnnouncementContent>;
  newsSearch?: Maybe<WhatsNewSearchResult>;
};


export type WhatsNewDocsStitchedFieldsAnnouncementArgs = {
  id: Scalars['ID']['input'];
};


export type WhatsNewDocsStitchedFieldsNewsSearchArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  query?: InputMaybe<WhatsNewContentSearchQuery>;
};

export type WhatsNewSearchResult = {
  __typename?: 'WhatsNewSearchResult';
  nextCursor?: Maybe<Scalars['String']['output']>;
  results?: Maybe<Array<WhatsNewContent>>;
  totalCount: Scalars['Int']['output'];
};

export type WorkloadAccountStitchedFields = {
  __typename?: 'WorkloadAccountStitchedFields';
  /** @deprecated Use the entity-specific alternatives like entity(guid). */
  collection?: Maybe<WorkloadCollection>;
  /** @deprecated Use the entity-specific alternatives like entitySearch(query). */
  collections?: Maybe<Array<WorkloadCollectionWithoutStatus>>;
  /** @deprecated This field is subject to breaking changes. */
  statusBreakdownPreview?: Maybe<WorkloadWorkloadStatus>;
  /** @deprecated This field is subject to breaking changes. */
  validAccounts?: Maybe<WorkloadValidAccounts>;
};


export type WorkloadAccountStitchedFieldsCollectionArgs = {
  guid: Scalars['EntityGuid']['input'];
};


export type WorkloadAccountStitchedFieldsStatusBreakdownPreviewArgs = {
  entitySearchQuery: Scalars['String']['input'];
  scopeAccounts: WorkloadScopeAccountsInput;
  statusConfig: WorkloadStatusConfigInput;
};

export type WorkloadAutomaticStatus = {
  __typename?: 'WorkloadAutomaticStatus';
  enabled: Scalars['Boolean']['output'];
  remainingEntitiesRule?: Maybe<WorkloadRemainingEntitiesRule>;
  rules: Array<WorkloadRegularRule>;
};

export type WorkloadAutomaticStatusInput = {
  enabled: Scalars['Boolean']['input'];
  remainingEntitiesRule?: InputMaybe<WorkloadRemainingEntitiesRuleInput>;
  rules?: InputMaybe<Array<WorkloadRegularRuleInput>>;
};

export type WorkloadCollection = {
  __typename?: 'WorkloadCollection';
  account?: Maybe<AccountReference>;
  autoDeactivated: Scalars['Boolean']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  entities?: Maybe<Array<WorkloadEntityRef>>;
  entitySearchQueries?: Maybe<Array<WorkloadEntitySearchQuery>>;
  entitySearchQuery?: Maybe<Scalars['String']['output']>;
  guid: Scalars['EntityGuid']['output'];
  id: Scalars['Int']['output'];
  linkedDashboardsSearchQuery?: Maybe<Scalars['String']['output']>;
  linkedDynamicDashboards?: Maybe<WorkloadDynamicDashboards>;
  linkedIndividualDashboards?: Maybe<Array<WorkloadIndividualDashboard>>;
  name: Scalars['String']['output'];
  permalink: Scalars['String']['output'];
  resources?: Maybe<Array<WorkloadResource>>;
  scopeAccounts: WorkloadScopeAccounts;
  status: WorkloadWorkloadStatus;
  statusConfig?: Maybe<WorkloadStatusConfig>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type WorkloadCollectionWithoutStatus = {
  __typename?: 'WorkloadCollectionWithoutStatus';
  account?: Maybe<AccountReference>;
  autoDeactivated: Scalars['Boolean']['output'];
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  description?: Maybe<Scalars['String']['output']>;
  entities?: Maybe<Array<WorkloadEntityRef>>;
  entitySearchQueries?: Maybe<Array<WorkloadEntitySearchQuery>>;
  entitySearchQuery?: Maybe<Scalars['String']['output']>;
  guid: Scalars['EntityGuid']['output'];
  id: Scalars['Int']['output'];
  linkedDashboardsSearchQuery?: Maybe<Scalars['String']['output']>;
  linkedDynamicDashboards?: Maybe<WorkloadDynamicDashboards>;
  linkedIndividualDashboards?: Maybe<Array<WorkloadIndividualDashboard>>;
  name: Scalars['String']['output'];
  permalink: Scalars['String']['output'];
  resources?: Maybe<Array<WorkloadResource>>;
  scopeAccounts: WorkloadScopeAccounts;
  statusConfig?: Maybe<WorkloadStatusConfig>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  updatedBy?: Maybe<UserReference>;
};

export type WorkloadCreateInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entitySearchQueries?: InputMaybe<Array<WorkloadEntitySearchQueryInput>>;
  linkedDynamicDashboards?: InputMaybe<WorkloadDynamicDashboardsInput>;
  linkedIndividualDashboards?: InputMaybe<Array<WorkloadIndividualDashboardInput>>;
  name: Scalars['String']['input'];
  resources?: InputMaybe<Array<WorkloadResourceInput>>;
  scopeAccounts?: InputMaybe<WorkloadScopeAccountsInput>;
  statusConfig?: InputMaybe<WorkloadStatusConfigInput>;
};

export type WorkloadDuplicateInput = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type WorkloadDynamicDashboards = {
  __typename?: 'WorkloadDynamicDashboards';
  searchQueries?: Maybe<Array<WorkloadEntitySearchQuery>>;
};

export type WorkloadDynamicDashboardsInput = {
  searchQueries?: InputMaybe<Array<WorkloadEntitySearchQueryInput>>;
};

export type WorkloadEntity = AlertableEntity & CollectionEntity & Entity & {
  __typename?: 'WorkloadEntity';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  alertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  collection?: Maybe<EntityCollection>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdByUser?: Maybe<UserReference>;
  deploymentSearch?: Maybe<ChangeTrackingDeploymentSearchResult>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroup?: Maybe<ErrorTrackingErrorGroup>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupCount?: Maybe<ErrorTrackingErrorGroupCount>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupListing?: Maybe<Array<ErrorTrackingErrorGroup>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  errorGroupNotificationPolicy?: Maybe<ErrorTrackingNotificationPolicy>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nerdStorage?: Maybe<NerdStorageEntityScope>;
  nerdStoreCollection?: Maybe<Array<Maybe<NerdStoreCollectionMember>>>;
  nerdStoreDocument?: Maybe<Scalars['NerdStoreDocument']['output']>;
  nrdbQuery?: Maybe<NrdbResultContainer>;
  /**
   * @deprecated This field is experimental! It may change at any time.
   *
   */
  nrdbQueryProgress?: Maybe<NrdbResultContainer>;
  permalink?: Maybe<Scalars['String']['output']>;
  recentAlertViolations?: Maybe<Array<Maybe<EntityAlertViolation>>>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  relatedEntities?: Maybe<EntityRelationshipRelatedEntitiesResult>;
  relationshipTraversal?: Maybe<EntityRelationshipTraversalResult>;
  /** @deprecated This field is deprecated! Please use `relatedEntities`. */
  relationships?: Maybe<Array<Maybe<EntityRelationship>>>;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  tagsWithMetadata?: Maybe<Array<Maybe<EntityTagWithMetadata>>>;
  tracingSummary?: Maybe<DistributedTracingEntityTracingSummary>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  workloadStatus?: Maybe<WorkloadStatus>;
};


export type WorkloadEntityAlertViolationsArgs = {
  endTime: Scalars['EpochMilliseconds']['input'];
  startTime: Scalars['EpochMilliseconds']['input'];
};


export type WorkloadEntityCollectionArgs = {
  name: Scalars['String']['input'];
};


export type WorkloadEntityDeploymentSearchArgs = {
  filter?: InputMaybe<ChangeTrackingSearchFilter>;
};


export type WorkloadEntityErrorGroupArgs = {
  id: Scalars['ID']['input'];
};


export type WorkloadEntityErrorGroupCountArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityErrorGroupListingArgs = {
  ids: Array<Scalars['ID']['input']>;
};


export type WorkloadEntityGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type WorkloadEntityGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type WorkloadEntityNerdStoreCollectionArgs = {
  collection: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type WorkloadEntityNerdStoreDocumentArgs = {
  collection: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  scopeByActor?: InputMaybe<Scalars['Boolean']['input']>;
};


export type WorkloadEntityNrdbQueryArgs = {
  async?: InputMaybe<Scalars['Boolean']['input']>;
  nrql: Scalars['Nrql']['input'];
  options?: InputMaybe<NrqlQueryOptions>;
  timeout?: InputMaybe<Scalars['Seconds']['input']>;
};


export type WorkloadEntityNrdbQueryProgressArgs = {
  queryId: Scalars['ID']['input'];
};


export type WorkloadEntityRecentAlertViolationsArgs = {
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type WorkloadEntityRelatedEntitiesArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<EntityRelationshipEdgeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type WorkloadEntityRelationshipTraversalArgs = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  hopFilters?: InputMaybe<EntityRelationshipTraversalHopFilters>;
  hops?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type WorkloadEntityRelationshipsArgs = {
  endTime?: InputMaybe<Scalars['EpochMilliseconds']['input']>;
  filter?: InputMaybe<EntityRelationshipFilter>;
};


export type WorkloadEntitySummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityTracingSummaryArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type WorkloadEntityOutline = AlertableEntityOutline & EntityOutline & {
  __typename?: 'WorkloadEntityOutline';
  account?: Maybe<AccountOutline>;
  accountId?: Maybe<Scalars['Int']['output']>;
  alertSeverity?: Maybe<EntityAlertSeverity>;
  /** @deprecated Please use `alertSeverity` and `reporting` */
  alertStatus?: Maybe<EntityAlertStatus>;
  createdAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  createdByUser?: Maybe<UserReference>;
  domain?: Maybe<Scalars['String']['output']>;
  entityType?: Maybe<EntityType>;
  firstIndexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  goldenMetrics?: Maybe<EntityGoldenContextScopedGoldenMetrics>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalCorrelations?: Maybe<GoldenSignalCorrelationResult>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalDeviations?: Maybe<Array<Maybe<GoldenSignalSignalDeviation>>>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValues?: Maybe<GoldenSignalValues>;
  /** @deprecated This field is experimental and subject to breaking changes. */
  goldenSignalValuesV2?: Maybe<GoldenSignalValues>;
  goldenTags?: Maybe<EntityGoldenContextScopedGoldenTags>;
  guid?: Maybe<Scalars['EntityGuid']['output']>;
  indexedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  lastReportingChangeAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  permalink?: Maybe<Scalars['String']['output']>;
  recommendedServiceLevel?: Maybe<ServiceLevelRecommendation>;
  relatedDashboards: RelatedDashboardsRelatedDashboardResult;
  reporting?: Maybe<Scalars['Boolean']['output']>;
  serviceLevel?: Maybe<ServiceLevelDefinition>;
  summaryMetrics?: Maybe<Array<Maybe<EntitySummaryMetric>>>;
  tags?: Maybe<Array<Maybe<EntityTag>>>;
  type?: Maybe<Scalars['String']['output']>;
  uiTemplates?: Maybe<Array<EntityDashboardTemplatesUi>>;
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
  workloadStatus?: Maybe<WorkloadStatus>;
};


export type WorkloadEntityOutlineGoldenMetricsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
  timeWindow?: InputMaybe<EntityGoldenNrqlTimeWindowInput>;
};


export type WorkloadEntityOutlineGoldenSignalCorrelationsArgs = {
  filter?: InputMaybe<GoldenSignalCorrelationsEntityFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityOutlineGoldenSignalDeviationsArgs = {
  comparisonTimeWindow?: InputMaybe<TimeWindowInput>;
  evaluationTimeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityOutlineGoldenSignalValuesArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityOutlineGoldenSignalValuesV2Args = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};


export type WorkloadEntityOutlineGoldenTagsArgs = {
  context?: InputMaybe<EntityGoldenContextInput>;
};


export type WorkloadEntityOutlineSummaryMetricsArgs = {
  timeWindow?: InputMaybe<TimeWindowInput>;
};

export type WorkloadEntityRef = {
  __typename?: 'WorkloadEntityRef';
  guid?: Maybe<Scalars['EntityGuid']['output']>;
};

export type WorkloadEntitySearchQuery = {
  __typename?: 'WorkloadEntitySearchQuery';
  createdAt: Scalars['EpochMilliseconds']['output'];
  createdBy?: Maybe<UserReference>;
  id: Scalars['Int']['output'];
  query: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['EpochMilliseconds']['output']>;
};

export type WorkloadEntitySearchQueryInput = {
  query: Scalars['String']['input'];
};

export type WorkloadGroupRemainingEntitiesRuleBy =
  | 'ENTITY_TYPE'
  | 'NONE';

export type WorkloadIndividualDashboard = {
  __typename?: 'WorkloadIndividualDashboard';
  filter?: Maybe<Scalars['Nrql']['output']>;
  guid: Scalars['EntityGuid']['output'];
};

export type WorkloadIndividualDashboardInput = {
  filter?: InputMaybe<Scalars['Nrql']['input']>;
  guid: Scalars['EntityGuid']['input'];
};

export type WorkloadRegularRule = {
  __typename?: 'WorkloadRegularRule';
  entities?: Maybe<Array<WorkloadEntityRef>>;
  entitySearchQueries?: Maybe<Array<WorkloadEntitySearchQuery>>;
  id?: Maybe<Scalars['Int']['output']>;
  rollup: WorkloadRollup;
};

export type WorkloadRegularRuleInput = {
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entitySearchQueries?: InputMaybe<Array<WorkloadEntitySearchQueryInput>>;
  rollup: WorkloadRollupInput;
};

export type WorkloadRemainingEntitiesRule = {
  __typename?: 'WorkloadRemainingEntitiesRule';
  rollup: WorkloadRemainingEntitiesRuleRollup;
};

export type WorkloadRemainingEntitiesRuleInput = {
  rollup: WorkloadRemainingEntitiesRuleRollupInput;
};

export type WorkloadRemainingEntitiesRuleRollup = {
  __typename?: 'WorkloadRemainingEntitiesRuleRollup';
  groupBy: WorkloadGroupRemainingEntitiesRuleBy;
  strategy: WorkloadRollupStrategy;
  thresholdType?: Maybe<WorkloadRuleThresholdType>;
  thresholdValue?: Maybe<Scalars['Int']['output']>;
};

export type WorkloadRemainingEntitiesRuleRollupInput = {
  groupBy: WorkloadGroupRemainingEntitiesRuleBy;
  strategy: WorkloadRollupStrategy;
  thresholdType?: InputMaybe<WorkloadRuleThresholdType>;
  thresholdValue?: InputMaybe<Scalars['Int']['input']>;
};

export type WorkloadResource = {
  __typename?: 'WorkloadResource';
  id: Scalars['Int']['output'];
  link: Scalars['String']['output'];
  text?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type WorkloadResourceInput = {
  link: Scalars['String']['input'];
  text?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type WorkloadResultingGroupType =
  | 'REGULAR_GROUP'
  | 'REMAINING_ENTITIES';

export type WorkloadRollup = {
  __typename?: 'WorkloadRollup';
  strategy: WorkloadRollupStrategy;
  thresholdType?: Maybe<WorkloadRuleThresholdType>;
  thresholdValue?: Maybe<Scalars['Int']['output']>;
};

export type WorkloadRollupInput = {
  strategy: WorkloadRollupStrategy;
  thresholdType?: InputMaybe<WorkloadRuleThresholdType>;
  thresholdValue?: InputMaybe<Scalars['Int']['input']>;
};

export type WorkloadRollupRuleDetails = {
  __typename?: 'WorkloadRollupRuleDetails';
  entitySearchQueries?: Maybe<Array<Scalars['String']['output']>>;
  hasIndividualEntities: Scalars['Boolean']['output'];
  notOperationalEntities: Scalars['Int']['output'];
  operationalEntities: Scalars['Int']['output'];
  resultingGroupType: WorkloadResultingGroupType;
  thresholdType?: Maybe<WorkloadRuleThresholdType>;
  unknownStatusEntities: Scalars['Int']['output'];
};

export type WorkloadRollupRuleStatusResult = WorkloadStatusResult & {
  __typename?: 'WorkloadRollupRuleStatusResult';
  rollupRuleDetails?: Maybe<WorkloadRollupRuleDetails>;
  source: WorkloadStatusSource;
  value: WorkloadStatusValue;
};

export type WorkloadRollupStrategy =
  | 'BEST_STATUS_WINS'
  | 'WORST_STATUS_WINS';

export type WorkloadRuleThresholdType =
  | 'FIXED'
  | 'PERCENTAGE';

export type WorkloadScopeAccounts = {
  __typename?: 'WorkloadScopeAccounts';
  accountIds: Array<Scalars['Int']['output']>;
};

export type WorkloadScopeAccountsInput = {
  accountIds: Array<Scalars['Int']['input']>;
};

export type WorkloadStaticStatus = {
  __typename?: 'WorkloadStaticStatus';
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  id: Scalars['Int']['output'];
  status: WorkloadStatusValue;
  summary?: Maybe<Scalars['String']['output']>;
};

export type WorkloadStaticStatusInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  status: WorkloadStatusValueInput;
  summary?: InputMaybe<Scalars['String']['input']>;
};

export type WorkloadStaticStatusResult = WorkloadStatusResult & {
  __typename?: 'WorkloadStaticStatusResult';
  description?: Maybe<Scalars['String']['output']>;
  source: WorkloadStatusSource;
  summary?: Maybe<Scalars['String']['output']>;
  value: WorkloadStatusValue;
};

export type WorkloadStatus = {
  __typename?: 'WorkloadStatus';
  description?: Maybe<Scalars['String']['output']>;
  statusSource?: Maybe<WorkloadStatusSource>;
  statusValue?: Maybe<WorkloadStatusValue>;
  summary?: Maybe<Scalars['String']['output']>;
};

export type WorkloadStatusConfig = {
  __typename?: 'WorkloadStatusConfig';
  automatic?: Maybe<WorkloadAutomaticStatus>;
  static?: Maybe<Array<WorkloadStaticStatus>>;
};

export type WorkloadStatusConfigInput = {
  automatic?: InputMaybe<WorkloadAutomaticStatusInput>;
  static?: InputMaybe<Array<WorkloadStaticStatusInput>>;
};

export type WorkloadStatusResult = {
  source: WorkloadStatusSource;
  value: WorkloadStatusValue;
};

export type WorkloadStatusSource =
  | 'ROLLUP_RULE'
  | 'STATIC'
  | 'UNKNOWN'
  | 'WORKLOAD';

export type WorkloadStatusValue =
  | 'DEGRADED'
  | 'DISRUPTED'
  | 'OPERATIONAL'
  | 'UNKNOWN';

export type WorkloadStatusValueInput =
  | 'DEGRADED'
  | 'DISRUPTED'
  | 'OPERATIONAL';

export type WorkloadUpdateAutomaticStatusInput = {
  enabled: Scalars['Boolean']['input'];
  remainingEntitiesRule?: InputMaybe<WorkloadRemainingEntitiesRuleInput>;
  rules?: InputMaybe<Array<WorkloadUpdateRegularRuleInput>>;
};

export type WorkloadUpdateCollectionEntitySearchQueryInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  query: Scalars['String']['input'];
};

export type WorkloadUpdateDynamicDashboardsInput = {
  searchQueries?: InputMaybe<Array<WorkloadUpdateCollectionEntitySearchQueryInput>>;
};

export type WorkloadUpdateInput = {
  autoDeactivated?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entitySearchQueries?: InputMaybe<Array<WorkloadUpdateCollectionEntitySearchQueryInput>>;
  linkedDynamicDashboards?: InputMaybe<WorkloadUpdateDynamicDashboardsInput>;
  linkedIndividualDashboards?: InputMaybe<Array<WorkloadIndividualDashboardInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  resources?: InputMaybe<Array<WorkloadUpdateResourceInput>>;
  scopeAccounts?: InputMaybe<WorkloadScopeAccountsInput>;
  statusConfig?: InputMaybe<WorkloadUpdateStatusConfigInput>;
};

export type WorkloadUpdateRegularRuleInput = {
  entityGuids?: InputMaybe<Array<Scalars['EntityGuid']['input']>>;
  entitySearchQueries?: InputMaybe<Array<WorkloadUpdateCollectionEntitySearchQueryInput>>;
  id?: InputMaybe<Scalars['Int']['input']>;
  rollup: WorkloadRollupInput;
};

export type WorkloadUpdateResourceInput = {
  id?: InputMaybe<Scalars['Int']['input']>;
  link: Scalars['String']['input'];
  text?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type WorkloadUpdateStaticStatusInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  enabled: Scalars['Boolean']['input'];
  id?: InputMaybe<Scalars['Int']['input']>;
  status: WorkloadStatusValueInput;
  summary?: InputMaybe<Scalars['String']['input']>;
};

export type WorkloadUpdateStatusConfigInput = {
  automatic?: InputMaybe<WorkloadUpdateAutomaticStatusInput>;
  static?: InputMaybe<Array<WorkloadUpdateStaticStatusInput>>;
};

export type WorkloadValidAccounts = {
  __typename?: 'WorkloadValidAccounts';
  accounts?: Maybe<Array<AccountReference>>;
};

export type WorkloadWorkloadStatus = {
  __typename?: 'WorkloadWorkloadStatus';
  description?: Maybe<Scalars['String']['output']>;
  source: WorkloadStatusSource;
  statusDetails?: Maybe<Array<WorkloadStatusResult>>;
  summary?: Maybe<Scalars['String']['output']>;
  value: WorkloadStatusValue;
};

export type EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline = { __typename?: 'AccountOutline', name?: string | null, id?: number | null };

export type EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics_metrics_EntityGoldenMetric = { __typename?: 'EntityGoldenMetric', query: string, name: string };

export type EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics = { __typename?: 'EntityGoldenContextScopedGoldenMetrics', metrics: Array<EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics_metrics_EntityGoldenMetric> };

export type EntityFieldsApmApplicationEntityFragment = { __typename?: 'ApmApplicationEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsApmDatabaseInstanceEntityFragment = { __typename?: 'ApmDatabaseInstanceEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsApmExternalServiceEntityFragment = { __typename?: 'ApmExternalServiceEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsBrowserApplicationEntityFragment = { __typename?: 'BrowserApplicationEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsDashboardEntityFragment = { __typename?: 'DashboardEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsExternalEntityFragment = { __typename?: 'ExternalEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsGenericEntityFragment = { __typename?: 'GenericEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsGenericInfrastructureEntityFragment = { __typename?: 'GenericInfrastructureEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsInfrastructureAwsLambdaFunctionEntityFragment = { __typename?: 'InfrastructureAwsLambdaFunctionEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsInfrastructureHostEntityFragment = { __typename?: 'InfrastructureHostEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsKeyTransactionEntityFragment = { __typename?: 'KeyTransactionEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsMobileApplicationEntityFragment = { __typename?: 'MobileApplicationEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsSecureCredentialEntityFragment = { __typename?: 'SecureCredentialEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsSyntheticMonitorEntityFragment = { __typename?: 'SyntheticMonitorEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsTeamEntityFragment = { __typename?: 'TeamEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsThirdPartyServiceEntityFragment = { __typename?: 'ThirdPartyServiceEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsUnavailableEntityFragment = { __typename?: 'UnavailableEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsWorkloadEntityFragment = { __typename?: 'WorkloadEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type EntityFieldsFragment = EntityFieldsApmApplicationEntityFragment | EntityFieldsApmDatabaseInstanceEntityFragment | EntityFieldsApmExternalServiceEntityFragment | EntityFieldsBrowserApplicationEntityFragment | EntityFieldsDashboardEntityFragment | EntityFieldsExternalEntityFragment | EntityFieldsGenericEntityFragment | EntityFieldsGenericInfrastructureEntityFragment | EntityFieldsInfrastructureAwsLambdaFunctionEntityFragment | EntityFieldsInfrastructureHostEntityFragment | EntityFieldsKeyTransactionEntityFragment | EntityFieldsMobileApplicationEntityFragment | EntityFieldsSecureCredentialEntityFragment | EntityFieldsSyntheticMonitorEntityFragment | EntityFieldsTeamEntityFragment | EntityFieldsThirdPartyServiceEntityFragment | EntityFieldsUnavailableEntityFragment | EntityFieldsWorkloadEntityFragment;

export type EntityRelationshipUserDefinedCreateOrReplaceMutation_RootMutationType_entityRelationshipUserDefinedCreateOrReplace_EntityRelationshipUserDefinedCreateOrReplaceResult_errors_EntityRelationshipUserDefinedCreateOrReplaceResultError = { __typename?: 'EntityRelationshipUserDefinedCreateOrReplaceResultError', message: string, type: EntityRelationshipUserDefinedCreateOrReplaceErrorType };

export type EntityRelationshipUserDefinedCreateOrReplaceMutation_RootMutationType_entityRelationshipUserDefinedCreateOrReplace_EntityRelationshipUserDefinedCreateOrReplaceResult = { __typename?: 'EntityRelationshipUserDefinedCreateOrReplaceResult', errors?: Array<EntityRelationshipUserDefinedCreateOrReplaceMutation_RootMutationType_entityRelationshipUserDefinedCreateOrReplace_EntityRelationshipUserDefinedCreateOrReplaceResult_errors_EntityRelationshipUserDefinedCreateOrReplaceResultError> | null };

export type EntityRelationshipUserDefinedCreateOrReplaceMutation_RootMutationType = { entityRelationshipUserDefinedCreateOrReplace: EntityRelationshipUserDefinedCreateOrReplaceMutation_RootMutationType_entityRelationshipUserDefinedCreateOrReplace_EntityRelationshipUserDefinedCreateOrReplaceResult };


export type EntityRelationshipUserDefinedCreateOrReplaceMutationVariables = Exact<{
  sourceEntityGuid: Scalars['EntityGuid']['input'];
  targetEntityGuid: Scalars['EntityGuid']['input'];
}>;


export type EntityRelationshipUserDefinedCreateOrReplaceMutation = EntityRelationshipUserDefinedCreateOrReplaceMutation_RootMutationType;

export type ReferenceEntityCreateOrUpdateRepositoryMutation_RootMutationType_referenceEntityCreateOrUpdateRepository_ReferenceEntityCreateRepositoryResult_failures_ReferenceEntityCreateRepositoryError = { __typename?: 'ReferenceEntityCreateRepositoryError', guid?: any | null, message: string, type: ReferenceEntityCreateRepositoryErrorType };

export type ReferenceEntityCreateOrUpdateRepositoryMutation_RootMutationType_referenceEntityCreateOrUpdateRepository_ReferenceEntityCreateRepositoryResult = { __typename?: 'ReferenceEntityCreateRepositoryResult', created: Array<any>, updated: Array<any>, failures: Array<ReferenceEntityCreateOrUpdateRepositoryMutation_RootMutationType_referenceEntityCreateOrUpdateRepository_ReferenceEntityCreateRepositoryResult_failures_ReferenceEntityCreateRepositoryError> };

export type ReferenceEntityCreateOrUpdateRepositoryMutation_RootMutationType = { referenceEntityCreateOrUpdateRepository?: ReferenceEntityCreateOrUpdateRepositoryMutation_RootMutationType_referenceEntityCreateOrUpdateRepository_ReferenceEntityCreateRepositoryResult | null };


export type ReferenceEntityCreateOrUpdateRepositoryMutationVariables = Exact<{
  accountId: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  url: Scalars['String']['input'];
}>;


export type ReferenceEntityCreateOrUpdateRepositoryMutation = ReferenceEntityCreateOrUpdateRepositoryMutation_RootMutationType;

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ApmApplicationEntity = { __typename?: 'ApmApplicationEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ApmDatabaseInstanceEntity = { __typename?: 'ApmDatabaseInstanceEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ApmExternalServiceEntity = { __typename?: 'ApmExternalServiceEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_BrowserApplicationEntity = { __typename?: 'BrowserApplicationEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_DashboardEntity = { __typename?: 'DashboardEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ExternalEntity = { __typename?: 'ExternalEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_GenericEntity = { __typename?: 'GenericEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_GenericInfrastructureEntity = { __typename?: 'GenericInfrastructureEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_InfrastructureAwsLambdaFunctionEntity = { __typename?: 'InfrastructureAwsLambdaFunctionEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_InfrastructureHostEntity = { __typename?: 'InfrastructureHostEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_KeyTransactionEntity = { __typename?: 'KeyTransactionEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_MobileApplicationEntity = { __typename?: 'MobileApplicationEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_SecureCredentialEntity = { __typename?: 'SecureCredentialEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_SyntheticMonitorEntity = { __typename?: 'SyntheticMonitorEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_TeamEntity = { __typename?: 'TeamEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ThirdPartyServiceEntity = { __typename?: 'ThirdPartyServiceEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_UnavailableEntity = { __typename?: 'UnavailableEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_WorkloadEntity = { __typename?: 'WorkloadEntity', accountId?: number | null, guid?: any | null, name?: string | null, entityType?: EntityType | null, type?: string | null, account?: EntityFieldsFragment_ApmApplicationEntity_account_AccountOutline | null, goldenMetrics?: EntityFieldsFragment_ApmApplicationEntity_goldenMetrics_EntityGoldenContextScopedGoldenMetrics | null };

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities = FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ApmApplicationEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ApmDatabaseInstanceEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ApmExternalServiceEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_BrowserApplicationEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_DashboardEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ExternalEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_GenericEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_GenericInfrastructureEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_InfrastructureAwsLambdaFunctionEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_InfrastructureHostEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_KeyTransactionEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_MobileApplicationEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_SecureCredentialEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_SyntheticMonitorEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_TeamEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_ThirdPartyServiceEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_UnavailableEntity | FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities_WorkloadEntity;

export type FetchEntitiesByIdsQuery_RootQueryType_actor_Actor = { __typename?: 'Actor', entities?: Array<FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities | null> | null };

export type FetchEntitiesByIdsQuery_RootQueryType = { actor?: FetchEntitiesByIdsQuery_RootQueryType_actor_Actor | null };


export type FetchEntitiesByIdsQueryVariables = Exact<{
  guids: Array<InputMaybe<Scalars['EntityGuid']['input']>> | InputMaybe<Scalars['EntityGuid']['input']>;
}>;


export type FetchEntitiesByIdsQuery = FetchEntitiesByIdsQuery_RootQueryType;

export type FetchEntityByIdQuery_RootQueryType_actor_Actor = { __typename?: 'Actor', entity?: FetchEntitiesByIdsQuery_RootQueryType_actor_Actor_entities | null };

export type FetchEntityByIdQuery_RootQueryType = { actor?: FetchEntityByIdQuery_RootQueryType_actor_Actor | null };


export type FetchEntityByIdQueryVariables = Exact<{
  guid: Scalars['EntityGuid']['input'];
}>;


export type FetchEntityByIdQuery = FetchEntityByIdQuery_RootQueryType;

export const EntityFieldsFragmentDoc = gql`
    fragment EntityFields on Entity {
  accountId
  account {
    name
    id
  }
  goldenMetrics {
    metrics {
      query
      name
    }
  }
  guid
  name
  entityType
  type
}
    `;
export const EntityRelationshipUserDefinedCreateOrReplaceMutationDocument = gql`
    mutation EntityRelationshipUserDefinedCreateOrReplaceMutation($sourceEntityGuid: EntityGuid!, $targetEntityGuid: EntityGuid!) {
  entityRelationshipUserDefinedCreateOrReplace(
    sourceEntityGuid: $sourceEntityGuid
    targetEntityGuid: $targetEntityGuid
    type: BUILT_FROM
  ) {
    errors {
      message
      type
    }
  }
}
    `;
export const ReferenceEntityCreateOrUpdateRepositoryMutationDocument = gql`
    mutation ReferenceEntityCreateOrUpdateRepositoryMutation($accountId: Int!, $name: String!, $url: String!) {
  referenceEntityCreateOrUpdateRepository(
    sync: true
    repositories: [{accountId: $accountId, name: $name, url: $url}]
  ) {
    created
    updated
    failures {
      guid
      message
      type
    }
  }
}
    `;
export const FetchEntitiesByIdsDocument = gql`
    query fetchEntitiesByIds($guids: [EntityGuid]!) {
  actor {
    entities(guids: $guids) {
      ...EntityFields
    }
  }
}
    ${EntityFieldsFragmentDoc}`;
export const FetchEntityByIdDocument = gql`
    query fetchEntityById($guid: EntityGuid!) {
  actor {
    entity(guid: $guid) {
      ...EntityFields
    }
  }
}
    ${EntityFieldsFragmentDoc}`;

export type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string, variables?: any) => Promise<T>;


const defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType, _variables) => action();

export function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {
  return {
    EntityRelationshipUserDefinedCreateOrReplaceMutation(variables: EntityRelationshipUserDefinedCreateOrReplaceMutationVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<EntityRelationshipUserDefinedCreateOrReplaceMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<EntityRelationshipUserDefinedCreateOrReplaceMutation>(EntityRelationshipUserDefinedCreateOrReplaceMutationDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'EntityRelationshipUserDefinedCreateOrReplaceMutation', 'mutation', variables);
    },
    ReferenceEntityCreateOrUpdateRepositoryMutation(variables: ReferenceEntityCreateOrUpdateRepositoryMutationVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<ReferenceEntityCreateOrUpdateRepositoryMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<ReferenceEntityCreateOrUpdateRepositoryMutation>(ReferenceEntityCreateOrUpdateRepositoryMutationDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'ReferenceEntityCreateOrUpdateRepositoryMutation', 'mutation', variables);
    },
    fetchEntitiesByIds(variables: FetchEntitiesByIdsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<FetchEntitiesByIdsQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<FetchEntitiesByIdsQuery>(FetchEntitiesByIdsDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'fetchEntitiesByIds', 'query', variables);
    },
    fetchEntityById(variables: FetchEntityByIdQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<FetchEntityByIdQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<FetchEntityByIdQuery>(FetchEntityByIdDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'fetchEntityById', 'query', variables);
    }
  };
}
export type Sdk = ReturnType<typeof getSdk>;